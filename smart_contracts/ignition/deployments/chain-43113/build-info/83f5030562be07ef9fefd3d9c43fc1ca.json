{
  "id": "83f5030562be07ef9fefd3d9c43fc1ca",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"
      },
      "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"
      },
      "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/Agent.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"./libs/Enums.sol\";\r\nimport {IVault} from \"./interfaces/IVault.sol\";\r\nimport {IStrategy} from \"./interfaces/IStrategy.sol\";\r\nimport {IAgent} from \"./interfaces/IAgent.sol\";\r\nimport {IAccount} from \"./interfaces/IAccount.sol\";\r\nimport {IAccountFactory} from \"./interfaces/IAccountFactory.sol\";\r\nimport {IAddressesProvider} from \"./interfaces/IAddressesProvider.sol\";\r\nimport {IAfterYieldFunctions} from \"./interfaces/IAfterYieldFunctions.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\r\n\r\ncontract Agent is IAgent, Ownable, AutomationCompatibleInterface {\r\n    uint256 internal _feePerTask;\r\n    address internal _feeCollector;\r\n    IERC20 internal _feeToken;\r\n    IAddressesProvider internal _provider;\r\n    mapping(IAccount => Enums.ApprovalFlag) internal _approvals;\r\n\r\n    uint256 public _lastTimeStamp;\r\n    uint256 public _interval = 14_000;\r\n\r\n    constructor(\r\n        uint256 feePerTask,\r\n        address feeCollector,\r\n        IERC20 feeToken,\r\n        IAddressesProvider provider\r\n    ) Ownable(_msgSender()) {\r\n        _feeToken = feeToken;\r\n        _provider = provider;\r\n        _feePerTask = feePerTask;\r\n        _feeCollector = feeCollector;\r\n    }\r\n\r\n    function checkUpkeep(\r\n        bytes calldata\r\n    )\r\n        external\r\n        view\r\n        override\r\n        returns (bool upkeepNeeded, bytes memory checkData)\r\n    {\r\n        upkeepNeeded = (block.timestamp - _lastTimeStamp) > _interval;\r\n        checkData = new bytes(0);\r\n    }\r\n\r\n    function performUpkeep(bytes calldata checkData) external override {\r\n        if ((block.timestamp - _lastTimeStamp) > _interval) {\r\n            (\r\n                Enums.TaskType taskType,\r\n                uint64 subscriptionId,\r\n                uint32 gasLimit\r\n            ) = abi.decode(checkData, (Enums.TaskType, uint64, uint32));\r\n\r\n            _doUpKeep(taskType, subscriptionId, gasLimit);\r\n        }\r\n    }\r\n\r\n    function _doUpKeep(\r\n        Enums.TaskType taskType,\r\n        uint64 subscriptionId,\r\n        uint32 gasLimit\r\n    ) internal returns (bytes32 requestId) {\r\n        IAfterYieldFunctions functions = IAfterYieldFunctions(\r\n            _provider.getAfterYieldFunctions()\r\n        );\r\n\r\n        requestId = functions.makeRequest(taskType, subscriptionId, gasLimit);\r\n    }\r\n\r\n    /// @dev Needs to safe-guard these deposit/withdraw functions to controller and account owner only.\r\n    /// @dev Needs to call _beforeTask function only is msg.sender is controller.\r\n    function depositFromAccount(\r\n        IVault vault,\r\n        uint256 amountScaled,\r\n        IAccount account\r\n    ) external returns (uint256 lpMinted) {\r\n        _beforeTask(account);\r\n\r\n        lpMinted = vault.depositFromAccount(amountScaled, account);\r\n    }\r\n\r\n    function withdrawToAccount(\r\n        IVault vault,\r\n        uint256 lpAmount,\r\n        IAccount account\r\n    ) external returns (uint256 amountScaled) {\r\n        _beforeTask(account);\r\n\r\n        amountScaled = vault.withdrawToAccount(lpAmount, account);\r\n    }\r\n\r\n    function withdrawAllToAccount(\r\n        IVault vault,\r\n        IAccount account\r\n    ) external returns (uint256 amountScaled) {\r\n        _beforeTask(account);\r\n\r\n        amountScaled = vault.withdrawAllToAccount(account);\r\n    }\r\n\r\n    function addStrategy(bytes memory response) external onlyFunctions {\r\n        (address vault, address strategy) = abi.decode(\r\n            response,\r\n            (address, address)\r\n        );\r\n\r\n        if (vault == address(0) || strategy == address(0)) {\r\n            return;\r\n        }\r\n\r\n        IVault(vault).addStrategy(IStrategy(strategy));\r\n    }\r\n\r\n    function removeStrategy(bytes memory response) external onlyFunctions {\r\n        (address vault, address strategy) = abi.decode(\r\n            response,\r\n            (address, address)\r\n        );\r\n\r\n        if (vault == address(0) || strategy == address(0)) {\r\n            return;\r\n        }\r\n\r\n        IVault(vault).removeStrategy(IStrategy(strategy));\r\n    }\r\n\r\n    function reallocation(bytes memory response) external onlyFunctions {\r\n        (address vault, uint256[] memory allocations) = abi.decode(\r\n            response,\r\n            (address, uint256[])\r\n        );\r\n\r\n        IVault(vault).reallocate(allocations);\r\n    }\r\n\r\n    function approve(Enums.ApprovalFlag flag) external {\r\n        address sender = _msgSender();\r\n\r\n        IAccount account = IAccountFactory(_provider.getAccountFactory())\r\n            .getAccount(sender);\r\n\r\n        _approvals[account] = flag;\r\n\r\n        emit Approval(address(account), flag);\r\n    }\r\n\r\n    function allowance(\r\n        IAccount account\r\n    ) external view returns (Enums.ApprovalFlag flag) {\r\n        flag = _approvals[account];\r\n    }\r\n\r\n    function getFeeToken() external view returns (IERC20 feeToken) {\r\n        feeToken = _feeToken;\r\n    }\r\n\r\n    function checkApproval(\r\n        IAccount account,\r\n        Enums.ApprovalFlag flag\r\n    ) external view {\r\n        Enums.ApprovalFlag accountFlag = _approvals[account];\r\n\r\n        // Deny if user has no approval at all\r\n        if (accountFlag == Enums.ApprovalFlag.None) {\r\n            revert(\"User not approved\");\r\n        }\r\n\r\n        // If deposit is required, but user doesn't have deposit or all\r\n        if (\r\n            flag == Enums.ApprovalFlag.Deposit &&\r\n            accountFlag != Enums.ApprovalFlag.Deposit &&\r\n            accountFlag != Enums.ApprovalFlag.All\r\n        ) {\r\n            revert(\"Deposit not approved\");\r\n        }\r\n\r\n        // If withdraw is required, but user doesn't have withdraw or all\r\n        if (\r\n            flag == Enums.ApprovalFlag.Withdraw &&\r\n            accountFlag != Enums.ApprovalFlag.Withdraw &&\r\n            accountFlag != Enums.ApprovalFlag.All\r\n        ) {\r\n            revert(\"Withdraw not approved\");\r\n        }\r\n    }\r\n\r\n    function _beforeTask(IAccount account) internal {\r\n        bool hasFunds = _feeToken.balanceOf(address(account)) >= _feePerTask;\r\n\r\n        if (hasFunds) {\r\n            _feeToken.transferFrom(\r\n                address(account),\r\n                _feeCollector,\r\n                _feePerTask\r\n            );\r\n        }\r\n\r\n        emit BeforeTask(address(account), address(this), hasFunds);\r\n    }\r\n\r\n    modifier onlyFunctions() {\r\n        address sender = _msgSender();\r\n        require(sender == _provider.getAfterYieldFunctions(), \"Only functions\");\r\n        _;\r\n    }\r\n}\r\n"
      },
      "contracts/interfaces/IAccount.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IVault} from \"./IVault.sol\";\r\nimport {IAgent} from \"./IAgent.sol\";\r\nimport {Enums} from \"../libs/Enums.sol\";\r\n\r\ninterface IAccount {\r\n    function setModeFor(address vault, Enums.AutoPilotMode mode) external;\r\n\r\n    function deposit(address token, uint256 amountScaled) external payable;\r\n\r\n    function withdraw(\r\n        address[] memory tokens,\r\n        uint256[] memory amountsScaled\r\n    ) external;\r\n\r\n    function withdrawToVault(uint256 amountScaled) external;\r\n\r\n    function addAgents(IAgent[] memory agentsToAdd) external;\r\n\r\n    function removeAgents(IAgent[] memory agentsToRemove) external;\r\n\r\n    function getAgents() external view returns (IAgent[] memory agents);\r\n\r\n    function checkIsAgent(IAgent agent) external view returns (bool isAgent);\r\n\r\n    function getOwner() external view returns (address account);\r\n}\r\n"
      },
      "contracts/interfaces/IAccountFactory.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IAccount} from \"./IAccount.sol\";\r\n\r\ninterface IAccountFactory {\r\n    event AccountCreated(address indexed owner, address account);\r\n\r\n    function createAccount() external returns (IAccount account);\r\n\r\n    function getAccount(address owner) external view returns (IAccount account);\r\n}\r\n"
      },
      "contracts/interfaces/IAddressesProvider.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IAddressesProvider {\r\n    function getAfterYieldOracle()\r\n        external\r\n        view\r\n        returns (address afterYieldFunctions);\r\n\r\n    function getAfterYieldFunctions()\r\n        external\r\n        view\r\n        returns (address afterYieldOracle);\r\n\r\n    function getAccountFactory() external view returns (address accountFactory);\r\n\r\n    function getFeeCollector() external view returns (address feeCollector);\r\n}\r\n"
      },
      "contracts/interfaces/IAfterYieldFunctions.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../libs/Enums.sol\";\r\n\r\ninterface IAfterYieldFunctions {\r\n    event OCRResponse(bytes32 indexed requestId, bytes result, bytes err);\r\n\r\n    function makeRequest(\r\n        Enums.TaskType taskType,\r\n        uint64 subscriptionId,\r\n        uint32 gasLimit\r\n    ) external returns (bytes32 requestId);\r\n}\r\n"
      },
      "contracts/interfaces/IAgent.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IVault} from \"./IVault.sol\";\r\nimport {IAccount} from \"./IAccount.sol\";\r\nimport {Enums} from \"../libs/Enums.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IAgent {\r\n    event Approval(address account, Enums.ApprovalFlag flag);\r\n    event BeforeTask(address account, address agent, bool hasFunds);\r\n\r\n    function depositFromAccount(\r\n        IVault vault,\r\n        uint256 amountScaled,\r\n        IAccount account\r\n    ) external returns (uint256 lpMinted);\r\n\r\n    function withdrawToAccount(\r\n        IVault vault,\r\n        uint256 lpAmount,\r\n        IAccount account\r\n    ) external returns (uint256 amountScaled);\r\n\r\n    function withdrawAllToAccount(\r\n        IVault vault,\r\n        IAccount account\r\n    ) external returns (uint256 amountScaled);\r\n\r\n    function addStrategy(bytes memory response) external;\r\n\r\n    function removeStrategy(bytes memory response) external;\r\n\r\n    function reallocation(bytes memory response) external;\r\n\r\n    function approve(Enums.ApprovalFlag flag) external;\r\n\r\n    function allowance(\r\n        IAccount account\r\n    ) external view returns (Enums.ApprovalFlag flag);\r\n\r\n    function getFeeToken() external view returns (IERC20 feeToken);\r\n\r\n    function checkApproval(\r\n        IAccount account,\r\n        Enums.ApprovalFlag flag\r\n    ) external view;\r\n}\r\n"
      },
      "contracts/interfaces/IBaseStrategy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IFeeCollector} from \"./IFeeCollector.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IBaseStrategy {\r\n    event Deposit(uint256 amountScaled);\r\n    event Withdraw(uint256 amountScaled);\r\n    event VaultSetted(address vault);\r\n    event StrategyFeeIdSetted(uint256 feeId);\r\n    event WithdrawalFeeSetted(uint256 fee);\r\n    event SwapRouterSetted(address router);\r\n    event ManagerSetted(address manager);\r\n    event StrategistSetted(address manager);\r\n    event FeeRecipientSetted(address feeRecipient);\r\n    event FeeCollectorSetted(address feeCollector);\r\n    event StrategyHarvest(\r\n        address harvester,\r\n        uint256 assetHarvested,\r\n        uint256 tvl\r\n    );\r\n    event ChargedFees(\r\n        uint256 callFeeAmount,\r\n        uint256 feeAmount,\r\n        uint256 strategistFeeAmount\r\n    );\r\n\r\n    function setStrategyFeeId(uint256 newFeeId) external;\r\n\r\n    function setWithdrawalFee(uint256 newFee) external;\r\n\r\n    function setVault(address newVault) external;\r\n\r\n    function setSwapRouter(address newRouter) external;\r\n\r\n    function setManager(address newManager) external;\r\n\r\n    function setStrategist(address newStrategist) external;\r\n\r\n    function setFeeRecipient(address newFeeRecipient) external;\r\n\r\n    function setFeeCollector(IFeeCollector newFeeCollector) external;\r\n\r\n    function getStrategyFeeId() external view returns (uint256 strategyFeeId);\r\n\r\n    function getVault() external view returns (address vault);\r\n\r\n    function swapRouter() external view returns (address router);\r\n\r\n    function getDepositFee() external view returns (uint256 depositFee);\r\n\r\n    function getWithdrawFee() external view returns (uint256 withdrawFee);\r\n}\r\n"
      },
      "contracts/interfaces/IFeeCollector.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IFeeCollector {\r\n    struct FeeCategory {\r\n        uint256 total;\r\n        uint256 protocol;\r\n        uint256 call;\r\n        uint256 strategist;\r\n        string label;\r\n        bool active;\r\n    }\r\n\r\n    struct AllFees {\r\n        FeeCategory performance;\r\n        uint256 deposit;\r\n        uint256 withdraw;\r\n    }\r\n\r\n    function setStrategyFeeId(uint256 feeId) external;\r\n\r\n    function getFees(\r\n        address strategy\r\n    ) external view returns (FeeCategory memory);\r\n\r\n    function strategyFeeId(address strategy) external view returns (uint256);\r\n}\r\n"
      },
      "contracts/interfaces/IStrategy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IBaseStrategy} from \"./IBaseStrategy.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IStrategy is IBaseStrategy {\r\n    function deposit() external;\r\n\r\n    function withdraw(\r\n        uint256 amountScaled\r\n    ) external returns (uint256 withdrawn);\r\n\r\n    function harvest() external;\r\n\r\n    function harvestWithCallFeeRecipient(address callFeeRecipient) external;\r\n\r\n    function managerHarvest() external;\r\n\r\n    function setHarvestOnDeposit(bool newHarvestOnDeposit) external;\r\n\r\n    function exitStrategy() external;\r\n\r\n    function panic() external;\r\n\r\n    function setReward(address newReward) external;\r\n\r\n    function resetRewards() external;\r\n\r\n    function setRewarder(address newRewarder) external;\r\n\r\n    function getLastHarvest() external view returns (uint256 lastHarvest);\r\n\r\n    function getAsset() external view returns (address asset);\r\n\r\n    function getBalanceOf() external view returns (uint256 balanceOf);\r\n\r\n    function getBalanceOfAsset() external view returns (uint256 balanceOfAsset);\r\n\r\n    function getBalanceOfPool() external view returns (uint256 balanceOfPool);\r\n\r\n    function getBaseRate() external view returns (uint256 baseRate);\r\n}\r\n"
      },
      "contracts/interfaces/IVault.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IAccount} from \"./IAccount.sol\";\r\nimport {IStrategy} from \"./IStrategy.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IVault is IERC20 {\r\n    function deposit(uint256 amountScaled) external returns (uint256 lpMinted);\r\n\r\n    function withdraw(uint256 lpAmount) external returns (uint256 amountScaled);\r\n\r\n    function withdrawAll() external returns (uint256 amountScaled);\r\n\r\n    function depositFromAccount(\r\n        uint256 amountScaled,\r\n        IAccount account\r\n    ) external returns (uint256 lpMinted);\r\n\r\n    function withdrawToAccount(\r\n        uint256 lpAmount,\r\n        IAccount account\r\n    ) external returns (uint256 amountScaled);\r\n\r\n    function withdrawAllToAccount(\r\n        IAccount account\r\n    ) external returns (uint256 amountScaled);\r\n\r\n    function addStrategy(IStrategy newStrategy) external;\r\n\r\n    function removeStrategy(IStrategy strategyToRemove) external;\r\n\r\n    function reallocate(uint256[] memory allocations) external;\r\n\r\n    function getLastHarvest(\r\n        uint256 strategyIndex\r\n    ) external view returns (uint256 lastHarvest);\r\n\r\n    function getAsset() external view returns (address asset);\r\n\r\n    function getShares(\r\n        uint256 lpAmount\r\n    ) external view returns (uint256 amountScaled);\r\n\r\n    function getBalance() external view returns (uint256 amountScaled);\r\n\r\n    function getAvailable() external view returns (uint256 available);\r\n\r\n    function getAllocation(\r\n        IStrategy strategy\r\n    ) external view returns (uint256 allocation);\r\n\r\n    function getSummary()\r\n        external\r\n        view\r\n        returns (uint256 allocated, uint256 idle);\r\n\r\n    function getStrategies()\r\n        external\r\n        view\r\n        returns (IStrategy[] memory strategies);\r\n}\r\n"
      },
      "contracts/libs/Consts.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nlibrary Consts {\r\n    address public constant ETH =\r\n        address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\r\n\r\n    uint256 public constant DIVISOR = 1e18;\r\n\r\n    uint256 public constant WITHDRAWAL_FEE_CAP = 50;\r\n    uint256 public constant WITHDRAWAL_MAX = 10_000;\r\n\r\n    uint256 public constant STRATEGY_ALLOCATION_MAX = 10_000;\r\n}\r\n"
      },
      "contracts/libs/Enums.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nlibrary Enums {\r\n    enum AutoPilotMode {\r\n        Off,\r\n        On\r\n    }\r\n\r\n    enum ApprovalFlag {\r\n        None,\r\n        Deposit,\r\n        Withdraw,\r\n        All\r\n    }\r\n\r\n    enum TaskType {\r\n        AddStrategy,\r\n        RemoveStrategy,\r\n        Reallocation\r\n    }\r\n}\r\n"
      },
      "contracts/mocks/SimpleVault.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {VaultUpgradeable} from \"../VaultUpgradeable.sol\";\r\nimport {Consts} from \"../libs/Consts.sol\";\r\nimport {Enums} from \"../libs/Enums.sol\";\r\nimport {IAgent} from \"../interfaces/IAgent.sol\";\r\nimport {IAccount} from \"../interfaces/IAccount.sol\";\r\nimport {IStrategy} from \"../interfaces/IStrategy.sol\";\r\nimport {IAddressesProvider} from \"../interfaces/IAddressesProvider.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n\r\ncontract SimpleVault is Initializable, VaultUpgradeable {\r\n    function initialize(\r\n        string memory name,\r\n        string memory symbol,\r\n        address allowedAsset,\r\n        IAgent agent\r\n    ) external initializer {\r\n        __Vault_init(name, symbol, allowedAsset, agent);\r\n    }\r\n}\r\n"
      },
      "contracts/VaultUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"./libs/Enums.sol\";\r\nimport {Consts} from \"./libs/Consts.sol\";\r\nimport {IVault} from \"./interfaces/IVault.sol\";\r\nimport {IAccount} from \"./interfaces/IAccount.sol\";\r\nimport {IAgent} from \"./interfaces/IAgent.sol\";\r\nimport {IStrategy} from \"./interfaces/IStrategy.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\n\r\ncontract VaultUpgradeable is\r\n    IVault,\r\n    OwnableUpgradeable,\r\n    ERC20Upgradeable,\r\n    ReentrancyGuard\r\n{\r\n    address internal _allowedAsset;\r\n    IStrategy[] internal _strategies;\r\n    mapping(IStrategy => uint256) internal _allocations;\r\n    IAgent internal _agent;\r\n    uint256 internal _lastHarvest;\r\n\r\n    function __Vault_init(\r\n        string memory name,\r\n        string memory symbol,\r\n        address allowedAsset,\r\n        IAgent agent\r\n    ) internal onlyInitializing {\r\n        __Ownable_init(address(agent));\r\n        __ERC20_init(name, symbol);\r\n\r\n        _allowedAsset = allowedAsset;\r\n        _agent = agent;\r\n    }\r\n\r\n    function deposit(\r\n        uint256 amountScaled\r\n    ) external nonReentrant returns (uint256 lpMinted) {\r\n        address sender = _msgSender();\r\n\r\n        uint256 balanceBefore = getBalance();\r\n\r\n        IERC20(_allowedAsset).transferFrom(sender, address(this), amountScaled);\r\n\r\n        earn();\r\n\r\n        uint256 balanceAfter = getBalance();\r\n\r\n        amountScaled = balanceAfter - balanceBefore;\r\n\r\n        if (totalSupply() == 0) {\r\n            lpMinted = amountScaled;\r\n        } else {\r\n            lpMinted = (amountScaled * totalSupply()) / balanceBefore;\r\n        }\r\n\r\n        _mint(sender, lpMinted);\r\n    }\r\n\r\n    function earn() public {\r\n        uint256 available = getAvailable();\r\n\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            IStrategy strategy = _strategies[i];\r\n            uint256 allocation = _allocations[strategy];\r\n\r\n            uint256 share = (available * allocation) /\r\n                Consts.STRATEGY_ALLOCATION_MAX;\r\n\r\n            if (share == 0) continue;\r\n\r\n            if (_allowedAsset == Consts.ETH) {\r\n                payable(address(strategy)).transfer(share);\r\n            } else {\r\n                IERC20(_allowedAsset).transfer(address(strategy), share);\r\n            }\r\n\r\n            strategy.deposit();\r\n        }\r\n    }\r\n\r\n    function withdraw(uint256 lpAmount) public returns (uint256 amountScaled) {\r\n        address sender = _msgSender();\r\n\r\n        uint256 balance = getBalance();\r\n\r\n        amountScaled = (balance * lpAmount) / totalSupply();\r\n        _burn(sender, lpAmount);\r\n\r\n        uint256 availableBefore = getAvailable();\r\n\r\n        if (availableBefore < amountScaled) {\r\n            uint256 remaining = amountScaled - availableBefore;\r\n\r\n            for (uint256 i = 0; i < _strategies.length && remaining > 0; i++) {\r\n                IStrategy strategy = _strategies[i];\r\n                uint256 strategyBalance = strategy.getBalanceOf();\r\n\r\n                uint256 strategyShare = (strategyBalance * lpAmount) /\r\n                    totalSupply();\r\n                if (strategyShare > remaining) {\r\n                    strategyShare = remaining;\r\n                }\r\n\r\n                uint256 withdrawn = strategy.withdraw(strategyShare);\r\n                remaining -= withdrawn;\r\n            }\r\n\r\n            uint256 afterAvailable = getAvailable();\r\n            uint256 maxWithdrawable = afterAvailable > amountScaled\r\n                ? amountScaled\r\n                : afterAvailable;\r\n            amountScaled = maxWithdrawable;\r\n        }\r\n\r\n        if (_allowedAsset == Consts.ETH) {\r\n            payable(sender).transfer(amountScaled);\r\n        } else {\r\n            IERC20(_allowedAsset).transfer(sender, amountScaled);\r\n        }\r\n    }\r\n\r\n    function withdrawAll() external returns (uint256 amountScaled) {\r\n        address sender = _msgSender();\r\n        return withdraw(balanceOf(sender));\r\n    }\r\n\r\n    function depositFromAccount(\r\n        uint256 amountScaled,\r\n        IAccount account\r\n    ) external onlyOwner nonReentrant returns (uint256 lpMinted) {\r\n        _agent.checkApproval(account, Enums.ApprovalFlag.Deposit);\r\n\r\n        require(account.checkIsAgent(_agent), \"Not authorized\");\r\n\r\n        uint256 balanceBefore = getBalance();\r\n\r\n        account.withdrawToVault(amountScaled);\r\n\r\n        earn();\r\n\r\n        uint256 balanceAfter = getBalance();\r\n\r\n        amountScaled = balanceAfter - balanceBefore;\r\n\r\n        if (totalSupply() == 0) {\r\n            lpMinted = amountScaled;\r\n        } else {\r\n            lpMinted = (amountScaled * totalSupply()) / balanceBefore;\r\n        }\r\n\r\n        _mint(account.getOwner(), lpMinted);\r\n    }\r\n\r\n    function withdrawToAccount(\r\n        uint256 lpAmount,\r\n        IAccount account\r\n    ) public onlyOwner returns (uint256 amountScaled) {\r\n        _agent.checkApproval(account, Enums.ApprovalFlag.Withdraw);\r\n\r\n        require(account.checkIsAgent(_agent), \"Not authorized\");\r\n\r\n        uint256 balance = getBalance();\r\n        amountScaled = (balance * lpAmount) / totalSupply();\r\n        _burn(account.getOwner(), lpAmount);\r\n\r\n        uint256 availableBefore = getAvailable();\r\n\r\n        if (availableBefore < amountScaled) {\r\n            uint256 remaining = amountScaled - availableBefore;\r\n\r\n            for (uint256 i = 0; i < _strategies.length && remaining > 0; i++) {\r\n                IStrategy strategy = _strategies[i];\r\n                uint256 strategyBalance = strategy.getBalanceOf();\r\n\r\n                uint256 strategyShare = (strategyBalance * lpAmount) /\r\n                    totalSupply();\r\n                if (strategyShare > remaining) {\r\n                    strategyShare = remaining;\r\n                }\r\n\r\n                uint256 withdrawn = strategy.withdraw(strategyShare);\r\n                remaining -= withdrawn;\r\n            }\r\n\r\n            uint256 afterAvailable = getAvailable();\r\n            uint256 maxWithdrawable = afterAvailable > amountScaled\r\n                ? amountScaled\r\n                : afterAvailable;\r\n            amountScaled = maxWithdrawable;\r\n        }\r\n\r\n        if (_allowedAsset == Consts.ETH) {\r\n            payable(address(account)).transfer(amountScaled);\r\n        } else {\r\n            IERC20(_allowedAsset).transfer(address(account), amountScaled);\r\n        }\r\n    }\r\n\r\n    function withdrawAllToAccount(\r\n        IAccount account\r\n    ) external onlyOwner returns (uint256 amountScaled) {\r\n        return withdrawToAccount(balanceOf(account.getOwner()), account);\r\n    }\r\n\r\n    function addStrategy(IStrategy newStrategy) external onlyOwner {\r\n        require(address(newStrategy) != address(0), \"Invalid strategy\");\r\n        require(!_hasStrategy(newStrategy), \"Strategy already exists\");\r\n\r\n        require(\r\n            address(this) == newStrategy.getVault() &&\r\n                _allowedAsset == newStrategy.getAsset(),\r\n            \"Invalid strategy\"\r\n        );\r\n\r\n        _strategies.push(newStrategy);\r\n    }\r\n\r\n    function removeStrategy(IStrategy strategyToRemove) external onlyOwner {\r\n        require(_hasStrategy(strategyToRemove), \"Strategy not found\");\r\n\r\n        uint256 len = _strategies.length;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            if (_strategies[i] == strategyToRemove) {\r\n                _onRemoveStrategy(_strategies[i]);\r\n                _strategies[i] = _strategies[len - 1];\r\n                _strategies.pop();\r\n                delete _allocations[strategyToRemove];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function reallocate(uint256[] memory allocations) external onlyOwner {\r\n        require(\r\n            _strategies.length == allocations.length,\r\n            \"Mismatched array lengths\"\r\n        );\r\n\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            IStrategy strategy = _strategies[i];\r\n            require(_hasStrategy(strategy), \"Strategy not found\");\r\n            _allocations[strategy] = allocations[i];\r\n        }\r\n\r\n        _onAllocationChanged();\r\n    }\r\n\r\n    function _hasStrategy(IStrategy strategy) internal view returns (bool) {\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            if (_strategies[i] == strategy) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _checkAllocations() internal view returns (uint256 total) {\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            total += _allocations[_strategies[i]];\r\n        }\r\n\r\n        require(\r\n            total <= Consts.STRATEGY_ALLOCATION_MAX,\r\n            \"Allocation exceeds max\"\r\n        );\r\n    }\r\n\r\n    function _onAllocationChanged() internal {\r\n        _checkAllocations();\r\n\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            IStrategy strategy = _strategies[i];\r\n            strategy.exitStrategy();\r\n        }\r\n\r\n        earn();\r\n    }\r\n\r\n    function _onRemoveStrategy(IStrategy strategy) internal {\r\n        strategy.exitStrategy();\r\n        earn();\r\n    }\r\n\r\n    function getLastHarvest(\r\n        uint256 strategyIndex\r\n    ) external view returns (uint256 lastHarvest) {\r\n        lastHarvest = _strategies[strategyIndex].getLastHarvest();\r\n    }\r\n\r\n    function getAsset() external view returns (address asset) {\r\n        asset = _allowedAsset;\r\n    }\r\n\r\n    function getShares(\r\n        uint256 lpAmount\r\n    ) external view returns (uint256 amountScaled) {\r\n        uint256 balance = getBalance();\r\n        amountScaled = (balance * lpAmount) / totalSupply();\r\n    }\r\n\r\n    function getBalance() public view returns (uint256 amountScaled) {\r\n        amountScaled = getAvailable();\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            amountScaled += _strategies[i].getBalanceOf();\r\n        }\r\n    }\r\n\r\n    function getAvailable() public view returns (uint256 available) {\r\n        if (_allowedAsset == Consts.ETH) {\r\n            available = address(this).balance;\r\n        } else {\r\n            available = IERC20(_allowedAsset).balanceOf(address(this));\r\n        }\r\n    }\r\n\r\n    function getAllocation(\r\n        IStrategy strategy\r\n    ) external view returns (uint256 allocation) {\r\n        allocation = _allocations[strategy];\r\n    }\r\n\r\n    function getSummary()\r\n        external\r\n        view\r\n        returns (uint256 allocated, uint256 idle)\r\n    {\r\n        allocated = 0;\r\n        for (uint256 i = 0; i < _strategies.length; i++) {\r\n            allocated += _allocations[_strategies[i]];\r\n        }\r\n        idle = Consts.STRATEGY_ALLOCATION_MAX - allocated;\r\n    }\r\n\r\n    function getStrategies()\r\n        external\r\n        view\r\n        returns (IStrategy[] memory strategies)\r\n    {\r\n        return _strategies;\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
          "exportedSymbols": {
            "AutomationBase": [
              37
            ]
          },
          "id": 38,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AutomationBase",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 37,
              "linearizedBaseContracts": [
                37
              ],
              "name": "AutomationBase",
              "nameLocation": "66:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "errorSelector": "b60ac5db",
                  "id": 3,
                  "name": "OnlySimulatedBackend",
                  "nameLocation": "91:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "111:2:0"
                  },
                  "src": "85:29:0"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "291:200:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "350:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 8,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "353:6:0",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "350:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 11,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "371:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "363:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "363:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 12,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "363:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "350:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 14,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "377:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 15,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "380:6:0",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "377:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307831313131313131313131313131313131313131313131313131313131313131313131313131313131",
                                  "id": 18,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "398:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0x1111111111111111111111111111111111111111"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "390:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 16,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "390:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "390:51:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "377:64:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "350:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 26,
                        "nodeType": "IfStatement",
                        "src": "346:141:0",
                        "trueBody": {
                          "id": 25,
                          "nodeType": "Block",
                          "src": "443:44:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 22,
                                  "name": "OnlySimulatedBackend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3,
                                  "src": "458:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 23,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "458:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 24,
                              "nodeType": "RevertStatement",
                              "src": "451:29:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "118:127:0",
                    "text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
                  },
                  "id": 28,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_preventExecution",
                  "nameLocation": "257:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "274:2:0"
                  },
                  "returnParameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "291:0:0"
                  },
                  "scope": 37,
                  "src": "248:243:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 35,
                    "nodeType": "Block",
                    "src": "652:37:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31,
                            "name": "_preventExecution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "658:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "658:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "ExpressionStatement",
                        "src": "658:19:0"
                      },
                      {
                        "id": 34,
                        "nodeType": "PlaceholderStatement",
                        "src": "683:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 29,
                    "nodeType": "StructuredDocumentation",
                    "src": "495:129:0",
                    "text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
                  },
                  "id": 36,
                  "name": "cannotExecute",
                  "nameLocation": "636:13:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "649:2:0"
                  },
                  "src": "627:62:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 38,
              "src": "57:634:0",
              "usedErrors": [
                3
              ],
              "usedEvents": []
            }
          ],
          "src": "32:660:0"
        },
        "id": 0
      },
      "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
          "exportedSymbols": {
            "AutomationBase": [
              37
            ],
            "AutomationCompatible": [
              48
            ],
            "AutomationCompatibleInterface": [
              67
            ]
          },
          "id": 49,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 39,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
              "file": "./AutomationBase.sol",
              "id": 41,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 49,
              "sourceUnit": 38,
              "src": "57:52:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 40,
                    "name": "AutomationBase",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "65:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
              "file": "./interfaces/AutomationCompatibleInterface.sol",
              "id": 43,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 49,
              "sourceUnit": 68,
              "src": "110:93:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 42,
                    "name": "AutomationCompatibleInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "118:29:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 44,
                    "name": "AutomationBase",
                    "nameLocations": [
                      "247:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 37,
                    "src": "247:14:1"
                  },
                  "id": 45,
                  "nodeType": "InheritanceSpecifier",
                  "src": "247:14:1"
                },
                {
                  "baseName": {
                    "id": 46,
                    "name": "AutomationCompatibleInterface",
                    "nameLocations": [
                      "263:29:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 67,
                    "src": "263:29:1"
                  },
                  "id": 47,
                  "nodeType": "InheritanceSpecifier",
                  "src": "263:29:1"
                }
              ],
              "canonicalName": "AutomationCompatible",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": false,
              "id": 48,
              "linearizedBaseContracts": [
                48,
                67,
                37
              ],
              "name": "AutomationCompatible",
              "nameLocation": "223:20:1",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 49,
              "src": "205:90:1",
              "usedErrors": [
                3
              ],
              "usedEvents": []
            }
          ],
          "src": "32:264:1"
        },
        "id": 1
      },
      "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
          "exportedSymbols": {
            "AutomationCompatibleInterface": [
              67
            ]
          },
          "id": 68,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 50,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AutomationCompatibleInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 67,
              "linearizedBaseContracts": [
                67
              ],
              "name": "AutomationCompatibleInterface",
              "nameLocation": "120:29:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "154:985:2",
                    "text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
                  },
                  "functionSelector": "6e04ff0d",
                  "id": 60,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkUpkeep",
                  "nameLocation": "1151:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "checkData",
                        "nameLocation": "1178:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1163:24:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1163:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1162:26:2"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "upkeepNeeded",
                        "nameLocation": "1212:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1207:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1207:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "performData",
                        "nameLocation": "1239:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1226:24:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1226:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1206:45:2"
                  },
                  "scope": 67,
                  "src": "1142:110:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1256:1003:2",
                    "text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
                  },
                  "functionSelector": "4585e33b",
                  "id": 66,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "performUpkeep",
                  "nameLocation": "2271:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "performData",
                        "nameLocation": "2300:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "2285:26:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2285:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2284:28:2"
                  },
                  "returnParameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2321:0:2"
                  },
                  "scope": 67,
                  "src": "2262:60:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 68,
              "src": "110:2214:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:2293:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1193
            ],
            "Initializable": [
              530
            ],
            "OwnableUpgradeable": [
              262
            ]
          },
          "id": 263,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 69,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../utils/ContextUpgradeable.sol",
              "id": 71,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 263,
              "sourceUnit": 1194,
              "src": "128:67:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 70,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
                    "src": "136:18:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 73,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 263,
              "sourceUnit": 531,
              "src": "196:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 72,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 530,
                    "src": "204:13:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 75,
                    "name": "Initializable",
                    "nameLocations": [
                      "789:13:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 530,
                    "src": "789:13:3"
                  },
                  "id": 76,
                  "nodeType": "InheritanceSpecifier",
                  "src": "789:13:3"
                },
                {
                  "baseName": {
                    "id": 77,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "804:18:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1193,
                    "src": "804:18:3"
                  },
                  "id": 78,
                  "nodeType": "InheritanceSpecifier",
                  "src": "804:18:3"
                }
              ],
              "canonicalName": "OwnableUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 74,
                "nodeType": "StructuredDocumentation",
                "src": "261:487:3",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 262,
              "linearizedBaseContracts": [
                262,
                1193,
                530
              ],
              "name": "OwnableUpgradeable",
              "nameLocation": "767:18:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "OwnableUpgradeable.OwnableStorage",
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:65:3",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
                  },
                  "id": 82,
                  "members": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "939:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "931:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "OwnableStorage",
                  "nameLocation": "906:14:3",
                  "nodeType": "StructDefinition",
                  "scope": 262,
                  "src": "899:53:3",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 85,
                  "mutability": "constant",
                  "name": "OwnableStorageLocation",
                  "nameLocation": "1094:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1069:116:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1119:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
                      "typeString": "int_const 6517...(69 digits omitted)...7328"
                    },
                    "value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1270:81:3",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1289:56:3",
                          "nodeType": "YulBlock",
                          "src": "1289:56:3",
                          "statements": [
                            {
                              "nativeSrc": "1303:32:3",
                              "nodeType": "YulAssignment",
                              "src": "1303:32:3",
                              "value": {
                                "name": "OwnableStorageLocation",
                                "nativeSrc": "1313:22:3",
                                "nodeType": "YulIdentifier",
                                "src": "1313:22:3"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "1303:6:3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1303:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 89,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1303:6:3",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 85,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1313:22:3",
                            "valueSize": 1
                          }
                        ],
                        "id": 91,
                        "nodeType": "InlineAssembly",
                        "src": "1280:65:3"
                      }
                    ]
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getOwnableStorage",
                  "nameLocation": "1201:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1219:2:3"
                  },
                  "returnParameters": {
                    "id": 90,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "1267:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "1244:24:3",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                          "typeString": "struct OwnableUpgradeable.OwnableStorage"
                        },
                        "typeName": {
                          "id": 88,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 87,
                            "name": "OwnableStorage",
                            "nameLocations": [
                              "1244:14:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1244:14:3"
                          },
                          "referencedDeclaration": 82,
                          "src": "1244:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:26:3"
                  },
                  "scope": 262,
                  "src": "1192:159:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "1357:85:3",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 98,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "1453:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1488:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1480:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1480:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1479:17:3"
                  },
                  "src": "1447:50:3"
                },
                {
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "1503:82:3",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 103,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "1596:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1624:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "1616:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1616:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1615:15:3"
                  },
                  "src": "1590:41:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 109,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1643:20:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1680:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "1664:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 107,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1711:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "1695:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:57:3"
                  },
                  "src": "1637:84:3"
                },
                {
                  "body": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "1919:55:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 118,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 112,
                              "src": "1954:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 117,
                            "name": "__Ownable_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "1929:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1929:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:38:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 110,
                    "nodeType": "StructuredDocumentation",
                    "src": "1727:115:3",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 122,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 115,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 114,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1902:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "1902:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1902:16:3"
                    }
                  ],
                  "name": "__Ownable_init",
                  "nameLocation": "1856:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1879:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "1871:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1871:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1870:22:3"
                  },
                  "returnParameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1919:0:3"
                  },
                  "scope": 262,
                  "src": "1847:127:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "2062:153:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 129,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "2076:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2100:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2092:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 130,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2092:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2092:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2076:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 143,
                        "nodeType": "IfStatement",
                        "src": "2072:95:3",
                        "trueBody": {
                          "id": 142,
                          "nodeType": "Block",
                          "src": "2104:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2153:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 137,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2145:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 136,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2145:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2145:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 135,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "2125:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2125:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 141,
                              "nodeType": "RevertStatement",
                              "src": "2118:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 145,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "2195:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 144,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "2176:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2176:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 147,
                        "nodeType": "ExpressionStatement",
                        "src": "2176:32:3"
                      }
                    ]
                  },
                  "id": 149,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 127,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 126,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2045:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "2045:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2045:16:3"
                    }
                  ],
                  "name": "__Ownable_init_unchained",
                  "nameLocation": "1989:24:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "2022:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "2014:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2013:22:3"
                  },
                  "returnParameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2062:0:3"
                  },
                  "scope": 262,
                  "src": "1980:235:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "2324:41:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 152,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "2334:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2334:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2334:13:3"
                      },
                      {
                        "id": 155,
                        "nodeType": "PlaceholderStatement",
                        "src": "2357:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 150,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:77:3",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 157,
                  "name": "onlyOwner",
                  "nameLocation": "2312:9:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2321:2:3"
                  },
                  "src": "2303:62:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 172,
                    "nodeType": "Block",
                    "src": "2496:89:3",
                    "statements": [
                      {
                        "assignments": [
                          165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 165,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2529:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 172,
                            "src": "2506:24:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 164,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 163,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "2506:14:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 82,
                                "src": "2506:14:3"
                              },
                              "referencedDeclaration": 82,
                              "src": "2506:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 168,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 166,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "2533:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$82_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2533:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2506:47:3"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 169,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "2570:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2572:6:3",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81,
                          "src": "2570:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 162,
                        "id": 171,
                        "nodeType": "Return",
                        "src": "2563:15:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 158,
                    "nodeType": "StructuredDocumentation",
                    "src": "2371:65:3",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 173,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "2450:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:2:3"
                  },
                  "returnParameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2487:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:9:3"
                  },
                  "scope": 262,
                  "src": "2441:144:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "2703:117:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 177,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "2717:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:7:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 179,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "2728:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2728:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2717:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 188,
                        "nodeType": "IfStatement",
                        "src": "2713:101:3",
                        "trueBody": {
                          "id": 187,
                          "nodeType": "Block",
                          "src": "2742:72:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 183,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1175,
                                      "src": "2790:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2790:12:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 182,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98,
                                  "src": "2763:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2763:40:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 186,
                              "nodeType": "RevertStatement",
                              "src": "2756:47:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 174,
                    "nodeType": "StructuredDocumentation",
                    "src": "2591:62:3",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "2667:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2678:2:3"
                  },
                  "returnParameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2703:0:3"
                  },
                  "scope": 262,
                  "src": "2658:162:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "3209:47:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3246:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3238:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 197,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3238:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3238:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 196,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "3219:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2826:324:3",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 204,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 194,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 193,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3199:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "3199:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3199:9:3"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "3164:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3181:2:3"
                  },
                  "returnParameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3209:0:3"
                  },
                  "scope": 262,
                  "src": "3155:101:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 231,
                    "nodeType": "Block",
                    "src": "3475:145:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 212,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "3489:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3509:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3501:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 213,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3501:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3501:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3489:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 226,
                        "nodeType": "IfStatement",
                        "src": "3485:91:3",
                        "trueBody": {
                          "id": 225,
                          "nodeType": "Block",
                          "src": "3513:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 221,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3562:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 220,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3554:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 219,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3554:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3554:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 218,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "3534:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3534:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 224,
                              "nodeType": "RevertStatement",
                              "src": "3527:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 228,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "3604:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 227,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "3585:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3585:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 230,
                        "nodeType": "ExpressionStatement",
                        "src": "3585:28:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 205,
                    "nodeType": "StructuredDocumentation",
                    "src": "3262:138:3",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 232,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 210,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 209,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3465:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "3465:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3465:9:3"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "3414:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3440:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "3432:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3432:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3431:18:3"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3475:0:3"
                  },
                  "scope": 262,
                  "src": "3405:215:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "3837:185:3",
                    "statements": [
                      {
                        "assignments": [
                          240
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 240,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3870:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3847:24:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 239,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 238,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "3847:14:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 82,
                                "src": "3847:14:3"
                              },
                              "referencedDeclaration": 82,
                              "src": "3847:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 243,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 241,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "3874:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$82_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3874:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3847:47:3"
                      },
                      {
                        "assignments": [
                          245
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 245,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "3912:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3904:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3904:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 248,
                        "initialValue": {
                          "expression": {
                            "id": 246,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "3923:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3925:6:3",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81,
                          "src": "3923:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3904:27:3"
                      },
                      {
                        "expression": {
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 249,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "3941:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$82_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3943:6:3",
                            "memberName": "_owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81,
                            "src": "3941:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 252,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "3952:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3941:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "3941:19:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 256,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "3996:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 257,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "4006:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 255,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "3975:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3975:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "EmitStatement",
                        "src": "3970:45:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 233,
                    "nodeType": "StructuredDocumentation",
                    "src": "3626:143:3",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "3783:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3810:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3802:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3802:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3801:18:3"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3837:0:3"
                  },
                  "scope": 262,
                  "src": "3774:248:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 263,
              "src": "749:3275:3",
              "usedErrors": [
                98,
                103,
                279,
                282
              ],
              "usedEvents": [
                109,
                287
              ]
            }
          ],
          "src": "102:3923:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              530
            ]
          },
          "id": 531,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 264,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 265,
                "nodeType": "StructuredDocumentation",
                "src": "139:2209:4",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 530,
              "linearizedBaseContracts": [
                530
              ],
              "name": "Initializable",
              "nameLocation": "2367:13:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Initializable.InitializableStorage",
                  "documentation": {
                    "id": 266,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:293:4",
                    "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                  },
                  "id": 273,
                  "members": [
                    {
                      "constant": false,
                      "id": 269,
                      "mutability": "mutable",
                      "name": "_initialized",
                      "nameLocation": "2820:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 273,
                      "src": "2813:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 268,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "_initializing",
                      "nameLocation": "2955:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 273,
                      "src": "2950:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitializableStorage",
                  "nameLocation": "2692:20:4",
                  "nodeType": "StructDefinition",
                  "scope": 530,
                  "src": "2685:290:4",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 276,
                  "mutability": "constant",
                  "name": "INITIALIZABLE_STORAGE",
                  "nameLocation": "3123:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3098:115:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                      "typeString": "int_const 1089...(70 digits omitted)...9600"
                    },
                    "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "3220:60:4",
                    "text": " @dev The contract is already initialized."
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 279,
                  "name": "InvalidInitialization",
                  "nameLocation": "3291:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3312:2:4"
                  },
                  "src": "3285:30:4"
                },
                {
                  "documentation": {
                    "id": 280,
                    "nodeType": "StructuredDocumentation",
                    "src": "3321:57:4",
                    "text": " @dev The contract is not initializing."
                  },
                  "errorSelector": "d7e6bcf8",
                  "id": 282,
                  "name": "NotInitializing",
                  "nameLocation": "3389:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3404:2:4"
                  },
                  "src": "3383:24:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:90:4",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                  "id": 287,
                  "name": "Initialized",
                  "nameLocation": "3514:11:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "3533:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "3526:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:16:4"
                  },
                  "src": "3508:34:4"
                },
                {
                  "body": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "4092:1079:4",
                    "statements": [
                      {
                        "assignments": [
                          292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 292,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4187:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 369,
                            "src": "4158:30:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 291,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 290,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "4158:20:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 273,
                                "src": "4158:20:4"
                              },
                              "referencedDeclaration": 273,
                              "src": "4158:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 295,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 293,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4191:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$273_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4158:59:4"
                      },
                      {
                        "assignments": [
                          297
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 297,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "4284:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 369,
                            "src": "4279:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 296,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4279:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 301,
                        "initialValue": {
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4301:16:4",
                          "subExpression": {
                            "expression": {
                              "id": 298,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4302:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4304:13:4",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 272,
                            "src": "4302:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4279:38:4"
                      },
                      {
                        "assignments": [
                          303
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 303,
                            "mutability": "mutable",
                            "name": "initialized",
                            "nameLocation": "4334:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 369,
                            "src": "4327:18:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 302,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4327:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 306,
                        "initialValue": {
                          "expression": {
                            "id": 304,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4348:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4350:12:4",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 269,
                          "src": "4348:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4327:35:4"
                      },
                      {
                        "assignments": [
                          308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 308,
                            "mutability": "mutable",
                            "name": "initialSetup",
                            "nameLocation": "4709:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 369,
                            "src": "4704:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 307,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4704:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 314,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 309,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "4724:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4739:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4724:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 312,
                            "name": "isTopLevelCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "4744:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4724:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4704:54:4"
                      },
                      {
                        "assignments": [
                          316
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 316,
                            "mutability": "mutable",
                            "name": "construction",
                            "nameLocation": "4773:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 369,
                            "src": "4768:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 315,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4768:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 329,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 317,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "4788:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4803:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4788:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 322,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4816:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Initializable_$530",
                                        "typeString": "contract Initializable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Initializable_$530",
                                        "typeString": "contract Initializable"
                                      }
                                    ],
                                    "id": 321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4808:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 320,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4808:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4808:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4822:4:4",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "4808:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4827:6:4",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4808:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4837:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4808:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4788:50:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4768:70:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4853:13:4",
                            "subExpression": {
                              "id": 330,
                              "name": "initialSetup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "4854:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4870:13:4",
                            "subExpression": {
                              "id": 332,
                              "name": "construction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 316,
                              "src": "4871:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4853:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 339,
                        "nodeType": "IfStatement",
                        "src": "4849:91:4",
                        "trueBody": {
                          "id": 338,
                          "nodeType": "Block",
                          "src": "4885:55:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 335,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "4906:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4906:23:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 337,
                              "nodeType": "RevertStatement",
                              "src": "4899:30:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 340,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4949:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4951:12:4",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 269,
                            "src": "4949:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4966:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4949:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 345,
                        "nodeType": "ExpressionStatement",
                        "src": "4949:18:4"
                      },
                      {
                        "condition": {
                          "id": 346,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "4981:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 354,
                        "nodeType": "IfStatement",
                        "src": "4977:67:4",
                        "trueBody": {
                          "id": 353,
                          "nodeType": "Block",
                          "src": "4997:47:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 347,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 292,
                                    "src": "5011:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 349,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5013:13:4",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "5011:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5029:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5011:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 352,
                              "nodeType": "ExpressionStatement",
                              "src": "5011:22:4"
                            }
                          ]
                        }
                      },
                      {
                        "id": 355,
                        "nodeType": "PlaceholderStatement",
                        "src": "5053:1:4"
                      },
                      {
                        "condition": {
                          "id": 356,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "5068:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 368,
                        "nodeType": "IfStatement",
                        "src": "5064:101:4",
                        "trueBody": {
                          "id": 367,
                          "nodeType": "Block",
                          "src": "5084:81:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 357,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 292,
                                    "src": "5098:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5100:13:4",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "5098:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5116:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5098:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 362,
                              "nodeType": "ExpressionStatement",
                              "src": "5098:23:4"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5152:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 363,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 287,
                                  "src": "5140:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5140:14:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 366,
                              "nodeType": "EmitStatement",
                              "src": "5135:19:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 288,
                    "nodeType": "StructuredDocumentation",
                    "src": "3548:516:4",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                  },
                  "id": 370,
                  "name": "initializer",
                  "nameLocation": "4078:11:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4089:2:4"
                  },
                  "src": "4069:1102:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "6289:392:4",
                    "statements": [
                      {
                        "assignments": [
                          377
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 377,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "6384:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 416,
                            "src": "6355:30:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 376,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 375,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "6355:20:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 273,
                                "src": "6355:20:4"
                              },
                              "referencedDeclaration": 273,
                              "src": "6355:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 380,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 378,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "6388:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$273_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6388:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6355:59:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 381,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "6429:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6431:13:4",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 272,
                            "src": "6429:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 383,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 377,
                                "src": "6448:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6450:12:4",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 269,
                              "src": "6448:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 385,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "6466:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "6448:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6429:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 392,
                        "nodeType": "IfStatement",
                        "src": "6425:105:4",
                        "trueBody": {
                          "id": 391,
                          "nodeType": "Block",
                          "src": "6475:55:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 388,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "6496:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6496:23:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 390,
                              "nodeType": "RevertStatement",
                              "src": "6489:30:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 393,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "6539:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6541:12:4",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 269,
                            "src": "6539:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 396,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "6556:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6539:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 398,
                        "nodeType": "ExpressionStatement",
                        "src": "6539:24:4"
                      },
                      {
                        "expression": {
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 399,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "6573:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6575:13:4",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 272,
                            "src": "6573:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6591:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6573:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 404,
                        "nodeType": "ExpressionStatement",
                        "src": "6573:22:4"
                      },
                      {
                        "id": 405,
                        "nodeType": "PlaceholderStatement",
                        "src": "6605:1:4"
                      },
                      {
                        "expression": {
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 406,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "6616:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6618:13:4",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 272,
                            "src": "6616:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6634:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6616:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 411,
                        "nodeType": "ExpressionStatement",
                        "src": "6616:23:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 413,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "6666:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 412,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "6654:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6654:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 415,
                        "nodeType": "EmitStatement",
                        "src": "6649:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 371,
                    "nodeType": "StructuredDocumentation",
                    "src": "5177:1068:4",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 417,
                  "name": "reinitializer",
                  "nameLocation": "6259:13:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "6280:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "6273:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6273:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6272:16:4"
                  },
                  "src": "6250:431:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "6919:48:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 420,
                            "name": "_checkInitializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "6929:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6929:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 422,
                        "nodeType": "ExpressionStatement",
                        "src": "6929:20:4"
                      },
                      {
                        "id": 423,
                        "nodeType": "PlaceholderStatement",
                        "src": "6959:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 418,
                    "nodeType": "StructuredDocumentation",
                    "src": "6687:199:4",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 425,
                  "name": "onlyInitializing",
                  "nameLocation": "6900:16:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6916:2:4"
                  },
                  "src": "6891:76:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "7134:89:4",
                    "statements": [
                      {
                        "condition": {
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7148:18:4",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 429,
                              "name": "_isInitializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "7149:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7149:17:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 436,
                        "nodeType": "IfStatement",
                        "src": "7144:73:4",
                        "trueBody": {
                          "id": 435,
                          "nodeType": "Block",
                          "src": "7168:49:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 432,
                                  "name": "NotInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "7189:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7189:17:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 434,
                              "nodeType": "RevertStatement",
                              "src": "7182:24:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 426,
                    "nodeType": "StructuredDocumentation",
                    "src": "6973:104:4",
                    "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                  },
                  "id": 438,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkInitializing",
                  "nameLocation": "7091:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 427,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7109:2:4"
                  },
                  "returnParameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7134:0:4"
                  },
                  "scope": 530,
                  "src": "7082:141:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 483,
                    "nodeType": "Block",
                    "src": "7758:373:4",
                    "statements": [
                      {
                        "assignments": [
                          444
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 444,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7853:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 483,
                            "src": "7824:30:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 443,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 442,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "7824:20:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 273,
                                "src": "7824:20:4"
                              },
                              "referencedDeclaration": 273,
                              "src": "7824:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 447,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 445,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "7857:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$273_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7857:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7824:59:4"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 448,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "7898:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7900:13:4",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 272,
                          "src": "7898:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 454,
                        "nodeType": "IfStatement",
                        "src": "7894:76:4",
                        "trueBody": {
                          "id": 453,
                          "nodeType": "Block",
                          "src": "7915:55:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 450,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "7936:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7936:23:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 452,
                              "nodeType": "RevertStatement",
                              "src": "7929:30:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 455,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "7983:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7985:12:4",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 269,
                            "src": "7983:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8006:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 458,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8006:6:4",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 457,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8001:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8001:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8014:3:4",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8001:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "7983:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 482,
                        "nodeType": "IfStatement",
                        "src": "7979:146:4",
                        "trueBody": {
                          "id": 481,
                          "nodeType": "Block",
                          "src": "8019:106:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 463,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 444,
                                    "src": "8033:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8035:12:4",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 269,
                                  "src": "8033:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 468,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8055:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 467,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8055:6:4",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        }
                                      ],
                                      "id": 466,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8050:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8050:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint64",
                                      "typeString": "type(uint64)"
                                    }
                                  },
                                  "id": 470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8063:3:4",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8050:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8033:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 472,
                              "nodeType": "ExpressionStatement",
                              "src": "8033:33:4"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 476,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8102:6:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 475,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8102:6:4",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 474,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "8097:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 477,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8097:12:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8110:3:4",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8097:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 473,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 287,
                                  "src": "8085:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8085:29:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 480,
                              "nodeType": "EmitStatement",
                              "src": "8080:34:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 439,
                    "nodeType": "StructuredDocumentation",
                    "src": "7229:475:4",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 484,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "7718:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7738:2:4"
                  },
                  "returnParameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7758:0:4"
                  },
                  "scope": 530,
                  "src": "7709:422:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 494,
                    "nodeType": "Block",
                    "src": "8306:63:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 490,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8323:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$273_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8323:26:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8350:12:4",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 269,
                          "src": "8323:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 489,
                        "id": 493,
                        "nodeType": "Return",
                        "src": "8316:46:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 485,
                    "nodeType": "StructuredDocumentation",
                    "src": "8137:99:4",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 495,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "8250:22:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8272:2:4"
                  },
                  "returnParameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "8298:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8298:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8297:8:4"
                  },
                  "scope": 530,
                  "src": "8241:128:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 505,
                    "nodeType": "Block",
                    "src": "8541:64:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 501,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8558:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$273_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8558:26:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8585:13:4",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 272,
                          "src": "8558:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 500,
                        "id": 504,
                        "nodeType": "Return",
                        "src": "8551:47:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 496,
                    "nodeType": "StructuredDocumentation",
                    "src": "8375:105:4",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 506,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "8494:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8509:2:4"
                  },
                  "returnParameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "8535:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8535:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8534:6:4"
                  },
                  "scope": 530,
                  "src": "8485:120:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 514,
                    "nodeType": "Block",
                    "src": "8896:45:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 512,
                          "name": "INITIALIZABLE_STORAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "8913:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 511,
                        "id": 513,
                        "nodeType": "Return",
                        "src": "8906:28:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 507,
                    "nodeType": "StructuredDocumentation",
                    "src": "8611:203:4",
                    "text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
                  },
                  "id": 515,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initializableStorageSlot",
                  "nameLocation": "8828:25:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8853:2:4"
                  },
                  "returnParameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "8887:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8887:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8886:9:4"
                  },
                  "scope": 530,
                  "src": "8819:122:4",
                  "stateMutability": "pure",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "9161:115:4",
                    "statements": [
                      {
                        "assignments": [
                          523
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 523,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "9179:4:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "9171:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 522,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9171:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 526,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 524,
                            "name": "_initializableStorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 515,
                            "src": "9186:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9186:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9171:42:4"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9232:38:4",
                          "nodeType": "YulBlock",
                          "src": "9232:38:4",
                          "statements": [
                            {
                              "nativeSrc": "9246:14:4",
                              "nodeType": "YulAssignment",
                              "src": "9246:14:4",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "9256:4:4",
                                "nodeType": "YulIdentifier",
                                "src": "9256:4:4"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "9246:6:4",
                                  "nodeType": "YulIdentifier",
                                  "src": "9246:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 520,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "9246:6:4",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 523,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9256:4:4",
                            "valueSize": 1
                          }
                        ],
                        "id": 527,
                        "nodeType": "InlineAssembly",
                        "src": "9223:47:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 516,
                    "nodeType": "StructuredDocumentation",
                    "src": "8947:67:4",
                    "text": " @dev Returns a pointer to the storage namespace."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializableStorage",
                  "nameLocation": "9080:24:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9104:2:4"
                  },
                  "returnParameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "9158:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "9129:30:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                          "typeString": "struct Initializable.InitializableStorage"
                        },
                        "typeName": {
                          "id": 519,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 518,
                            "name": "InitializableStorage",
                            "nameLocations": [
                              "9129:20:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 273,
                            "src": "9129:20:4"
                          },
                          "referencedDeclaration": 273,
                          "src": "9129:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$273_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9128:32:4"
                  },
                  "scope": 530,
                  "src": "9071:205:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 531,
              "src": "2349:6929:4",
              "usedErrors": [
                279,
                282
              ],
              "usedEvents": [
                287
              ]
            }
          ],
          "src": "113:9166:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1193
            ],
            "ERC20Upgradeable": [
              1147
            ],
            "IERC20": [
              1556
            ],
            "IERC20Errors": [
              1383
            ],
            "IERC20Metadata": [
              1582
            ],
            "Initializable": [
              530
            ]
          },
          "id": 1148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 532,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 534,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1148,
              "sourceUnit": 1557,
              "src": "131:70:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 533,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "139:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 536,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1148,
              "sourceUnit": 1583,
              "src": "202:97:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 535,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1582,
                    "src": "210:14:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../../utils/ContextUpgradeable.sol",
              "id": 538,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1148,
              "sourceUnit": 1194,
              "src": "300:70:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 537,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
                    "src": "308:18:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "id": 540,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1148,
              "sourceUnit": 1479,
              "src": "371:83:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 539,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1383,
                    "src": "379:12:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../../proxy/utils/Initializable.sol",
              "id": 542,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1148,
              "sourceUnit": 531,
              "src": "455:66:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 541,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 530,
                    "src": "463:13:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 544,
                    "name": "Initializable",
                    "nameLocations": [
                      "1319:13:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 530,
                    "src": "1319:13:5"
                  },
                  "id": 545,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1319:13:5"
                },
                {
                  "baseName": {
                    "id": 546,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "1334:18:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1193,
                    "src": "1334:18:5"
                  },
                  "id": 547,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1334:18:5"
                },
                {
                  "baseName": {
                    "id": 548,
                    "name": "IERC20",
                    "nameLocations": [
                      "1354:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1556,
                    "src": "1354:6:5"
                  },
                  "id": 549,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1354:6:5"
                },
                {
                  "baseName": {
                    "id": 550,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1362:14:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1582,
                    "src": "1362:14:5"
                  },
                  "id": 551,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1362:14:5"
                },
                {
                  "baseName": {
                    "id": 552,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1378:12:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1383,
                    "src": "1378:12:5"
                  },
                  "id": 553,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1378:12:5"
                }
              ],
              "canonicalName": "ERC20Upgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 543,
                "nodeType": "StructuredDocumentation",
                "src": "523:757:5",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1147,
              "linearizedBaseContracts": [
                1147,
                1383,
                1582,
                1556,
                1193,
                530
              ],
              "name": "ERC20Upgradeable",
              "nameLocation": "1299:16:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ERC20Upgradeable.ERC20Storage",
                  "documentation": {
                    "id": 554,
                    "nodeType": "StructuredDocumentation",
                    "src": "1397:63:5",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
                  },
                  "id": 571,
                  "members": [
                    {
                      "constant": false,
                      "id": 558,
                      "mutability": "mutable",
                      "name": "_balances",
                      "nameLocation": "1531:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1495:45:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "typeName": {
                        "id": 557,
                        "keyName": "account",
                        "keyNameLocation": "1511:7:5",
                        "keyType": {
                          "id": 555,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1495:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1522:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 564,
                      "mutability": "mutable",
                      "name": "_allowances",
                      "nameLocation": "1615:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1551:75:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                        "typeString": "mapping(address => mapping(address => uint256))"
                      },
                      "typeName": {
                        "id": 563,
                        "keyName": "account",
                        "keyNameLocation": "1567:7:5",
                        "keyType": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1559:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1551:63:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 562,
                          "keyName": "spender",
                          "keyNameLocation": "1594:7:5",
                          "keyType": {
                            "id": 560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1586:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "1578:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          },
                          "valueName": "",
                          "valueNameLocation": "-1:-1:-1",
                          "valueType": {
                            "id": 561,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1605:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 566,
                      "mutability": "mutable",
                      "name": "_totalSupply",
                      "nameLocation": "1645:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1637:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1637:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 568,
                      "mutability": "mutable",
                      "name": "_name",
                      "nameLocation": "1675:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1668:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "nameLocation": "1697:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1690:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1690:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ERC20Storage",
                  "nameLocation": "1472:12:5",
                  "nodeType": "StructDefinition",
                  "scope": 1147,
                  "src": "1465:246:5",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 574,
                  "mutability": "constant",
                  "name": "ERC20StorageLocation",
                  "nameLocation": "1851:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "1826:114:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1874:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
                      "typeString": "int_const 3743...(69 digits omitted)...2592"
                    },
                    "value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 581,
                    "nodeType": "Block",
                    "src": "2021:79:5",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2040:54:5",
                          "nodeType": "YulBlock",
                          "src": "2040:54:5",
                          "statements": [
                            {
                              "nativeSrc": "2054:30:5",
                              "nodeType": "YulAssignment",
                              "src": "2054:30:5",
                              "value": {
                                "name": "ERC20StorageLocation",
                                "nativeSrc": "2064:20:5",
                                "nodeType": "YulIdentifier",
                                "src": "2064:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "2054:6:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "2054:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 578,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2054:6:5",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 574,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2064:20:5",
                            "valueSize": 1
                          }
                        ],
                        "id": 580,
                        "nodeType": "InlineAssembly",
                        "src": "2031:63:5"
                      }
                    ]
                  },
                  "id": 582,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getERC20Storage",
                  "nameLocation": "1956:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1972:2:5"
                  },
                  "returnParameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "2018:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 582,
                        "src": "1997:22:5",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                          "typeString": "struct ERC20Upgradeable.ERC20Storage"
                        },
                        "typeName": {
                          "id": 577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 576,
                            "name": "ERC20Storage",
                            "nameLocations": [
                              "1997:12:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 571,
                            "src": "1997:12:5"
                          },
                          "referencedDeclaration": 571,
                          "src": "1997:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1996:24:5"
                  },
                  "scope": 1147,
                  "src": "1947:153:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 597,
                    "nodeType": "Block",
                    "src": "2355:55:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 593,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "2388:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 594,
                              "name": "symbol_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "2395:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 592,
                            "name": "__ERC20_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "2365:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2365:38:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 596,
                        "nodeType": "ExpressionStatement",
                        "src": "2365:38:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 583,
                    "nodeType": "StructuredDocumentation",
                    "src": "2106:152:5",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 598,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 590,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 589,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2338:16:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "2338:16:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2338:16:5"
                    }
                  ],
                  "name": "__ERC20_init",
                  "nameLocation": "2272:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2299:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "2285:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 584,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2285:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2320:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "2306:21:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2306:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2284:44:5"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2355:0:5"
                  },
                  "scope": 1147,
                  "src": "2263:147:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 625,
                    "nodeType": "Block",
                    "src": "2518:114:5",
                    "statements": [
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2549:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 625,
                            "src": "2528:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 608,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 607,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "2528:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "2528:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "2528:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 612,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 610,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "2553:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2553:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2528:43:5"
                      },
                      {
                        "expression": {
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 613,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "2581:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 615,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2583:5:5",
                            "memberName": "_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "2581:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 616,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "2591:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2581:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 618,
                        "nodeType": "ExpressionStatement",
                        "src": "2581:15:5"
                      },
                      {
                        "expression": {
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 619,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "2606:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2608:7:5",
                            "memberName": "_symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 570,
                            "src": "2606:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 622,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "2618:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2606:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 624,
                        "nodeType": "ExpressionStatement",
                        "src": "2606:19:5"
                      }
                    ]
                  },
                  "id": 626,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 605,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 604,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2501:16:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "2501:16:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2501:16:5"
                    }
                  ],
                  "name": "__ERC20_init_unchained",
                  "nameLocation": "2425:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2462:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "2448:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2448:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2483:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "2469:21:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2447:44:5"
                  },
                  "returnParameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2518:0:5"
                  },
                  "scope": 1147,
                  "src": "2416:216:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1569
                  ],
                  "body": {
                    "id": 641,
                    "nodeType": "Block",
                    "src": "2757:84:5",
                    "statements": [
                      {
                        "assignments": [
                          634
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 634,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2788:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 641,
                            "src": "2767:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 633,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 632,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "2767:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "2767:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "2767:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 637,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 635,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "2792:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2792:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2767:43:5"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 638,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "2827:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2829:5:5",
                          "memberName": "_name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 568,
                          "src": "2827:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 631,
                        "id": 640,
                        "nodeType": "Return",
                        "src": "2820:14:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 627,
                    "nodeType": "StructuredDocumentation",
                    "src": "2638:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 642,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "2706:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2710:2:5"
                  },
                  "returnParameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 630,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "2742:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 629,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2742:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2741:15:5"
                  },
                  "scope": 1147,
                  "src": "2697:144:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1575
                  ],
                  "body": {
                    "id": 657,
                    "nodeType": "Block",
                    "src": "3016:86:5",
                    "statements": [
                      {
                        "assignments": [
                          650
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 650,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3047:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 657,
                            "src": "3026:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 649,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 648,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "3026:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "3026:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "3026:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 653,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 651,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "3051:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3051:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3026:43:5"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 654,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "3086:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3088:7:5",
                          "memberName": "_symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 570,
                          "src": "3086:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 647,
                        "id": 656,
                        "nodeType": "Return",
                        "src": "3079:16:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 643,
                    "nodeType": "StructuredDocumentation",
                    "src": "2847:102:5",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 658,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "2963:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2969:2:5"
                  },
                  "returnParameters": {
                    "id": 647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "3001:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3001:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3000:15:5"
                  },
                  "scope": 1147,
                  "src": "2954:148:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1581
                  ],
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "3791:26:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3808:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 663,
                        "id": 665,
                        "nodeType": "Return",
                        "src": "3801:9:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 659,
                    "nodeType": "StructuredDocumentation",
                    "src": "3108:622:5",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 667,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "3744:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3752:2:5"
                  },
                  "returnParameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "3784:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3784:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3783:7:5"
                  },
                  "scope": 1147,
                  "src": "3735:82:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1505
                  ],
                  "body": {
                    "id": 682,
                    "nodeType": "Block",
                    "src": "3938:91:5",
                    "statements": [
                      {
                        "assignments": [
                          675
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 675,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3969:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 682,
                            "src": "3948:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 674,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 673,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "3948:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "3948:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "3948:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 678,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 676,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "3973:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3973:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3948:43:5"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 679,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "4008:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4010:12:5",
                          "memberName": "_totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 566,
                          "src": "4008:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 672,
                        "id": 681,
                        "nodeType": "Return",
                        "src": "4001:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 668,
                    "nodeType": "StructuredDocumentation",
                    "src": "3823:49:5",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 683,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "3886:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3897:2:5"
                  },
                  "returnParameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "3929:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3929:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3928:9:5"
                  },
                  "scope": 1147,
                  "src": "3877:152:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1513
                  ],
                  "body": {
                    "id": 702,
                    "nodeType": "Block",
                    "src": "4161:97:5",
                    "statements": [
                      {
                        "assignments": [
                          693
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 693,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4192:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 702,
                            "src": "4171:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 692,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 691,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "4171:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "4171:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "4171:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 696,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 694,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "4196:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4196:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4171:43:5"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 697,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "4231:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4233:9:5",
                            "memberName": "_balances",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 558,
                            "src": "4231:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 700,
                          "indexExpression": {
                            "id": 699,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "4243:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4231:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 690,
                        "id": 701,
                        "nodeType": "Return",
                        "src": "4224:27:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 684,
                    "nodeType": "StructuredDocumentation",
                    "src": "4035:47:5",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 703,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "4096:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4114:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "4106:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4106:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4105:17:5"
                  },
                  "returnParameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "4152:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4152:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4151:9:5"
                  },
                  "scope": 1147,
                  "src": "4087:171:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1523
                  ],
                  "body": {
                    "id": 726,
                    "nodeType": "Block",
                    "src": "4528:103:5",
                    "statements": [
                      {
                        "assignments": [
                          714
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 714,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4546:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 726,
                            "src": "4538:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 713,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4538:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 717,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 715,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "4554:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4554:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4538:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 719,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "4586:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 720,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 706,
                              "src": "4593:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 721,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "4597:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 718,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "4576:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4576:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "4576:27:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4620:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 712,
                        "id": 725,
                        "nodeType": "Return",
                        "src": "4613:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 704,
                    "nodeType": "StructuredDocumentation",
                    "src": "4264:184:5",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 727,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "4462:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4479:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 727,
                        "src": "4471:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4471:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 708,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4491:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 727,
                        "src": "4483:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4483:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4470:27:5"
                  },
                  "returnParameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 727,
                        "src": "4522:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4521:6:5"
                  },
                  "scope": 1147,
                  "src": "4453:178:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1533
                  ],
                  "body": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "4778:106:5",
                    "statements": [
                      {
                        "assignments": [
                          739
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 739,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4809:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 750,
                            "src": "4788:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 738,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 737,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "4788:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "4788:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "4788:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 742,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 740,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "4813:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4813:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4788:43:5"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 743,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4848:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                  "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                }
                              },
                              "id": 744,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4850:11:5",
                              "memberName": "_allowances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 564,
                              "src": "4848:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 746,
                            "indexExpression": {
                              "id": 745,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "4862:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4848:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 748,
                          "indexExpression": {
                            "id": 747,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "4869:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4848:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 736,
                        "id": 749,
                        "nodeType": "Return",
                        "src": "4841:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 728,
                    "nodeType": "StructuredDocumentation",
                    "src": "4637:47:5",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 751,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "4698:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 730,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4716:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "4708:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4708:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4731:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "4723:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4723:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4707:32:5"
                  },
                  "returnParameters": {
                    "id": 736,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "4769:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4769:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4768:9:5"
                  },
                  "scope": 1147,
                  "src": "4689:195:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1543
                  ],
                  "body": {
                    "id": 774,
                    "nodeType": "Block",
                    "src": "5270:107:5",
                    "statements": [
                      {
                        "assignments": [
                          762
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 762,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "5288:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 774,
                            "src": "5280:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 761,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5280:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 765,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 763,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "5296:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5296:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5280:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 767,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "5327:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 768,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 754,
                              "src": "5334:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 769,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "5343:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 766,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1030,
                              1098
                            ],
                            "referencedDeclaration": 1030,
                            "src": "5318:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5318:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "5318:31:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5366:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 760,
                        "id": 773,
                        "nodeType": "Return",
                        "src": "5359:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 752,
                    "nodeType": "StructuredDocumentation",
                    "src": "4890:296:5",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 775,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "5200:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 754,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5216:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "5208:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5208:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5233:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "5225:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5225:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5207:32:5"
                  },
                  "returnParameters": {
                    "id": 760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 759,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "5264:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 758,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5264:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5263:6:5"
                  },
                  "scope": 1147,
                  "src": "5191:186:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1555
                  ],
                  "body": {
                    "id": 806,
                    "nodeType": "Block",
                    "src": "6062:151:5",
                    "statements": [
                      {
                        "assignments": [
                          788
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 788,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "6080:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 806,
                            "src": "6072:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6072:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 791,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 789,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "6090:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6090:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6072:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 793,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "6128:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 794,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "6134:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 795,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "6143:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 792,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "6112:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6112:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "6112:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 799,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "6169:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 800,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "6175:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 801,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "6179:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 798,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "6159:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6159:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 803,
                        "nodeType": "ExpressionStatement",
                        "src": "6159:26:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6202:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 786,
                        "id": 805,
                        "nodeType": "Return",
                        "src": "6195:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 776,
                    "nodeType": "StructuredDocumentation",
                    "src": "5383:581:5",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 807,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "5978:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 783,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5999:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "5991:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5991:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6013:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "6005:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6005:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 782,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6025:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "6017:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 781,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6017:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5990:41:5"
                  },
                  "returnParameters": {
                    "id": 786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 785,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "6056:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6056:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6055:6:5"
                  },
                  "scope": 1147,
                  "src": "5969:244:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "6655:231:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 817,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "6669:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6685:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6677:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 818,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6677:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6677:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6669:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 831,
                        "nodeType": "IfStatement",
                        "src": "6665:86:5",
                        "trueBody": {
                          "id": 830,
                          "nodeType": "Block",
                          "src": "6689:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 826,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6737:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6729:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 824,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6729:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 827,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6729:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 823,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1358,
                                  "src": "6710:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6710:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 829,
                              "nodeType": "RevertStatement",
                              "src": "6703:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 832,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 812,
                            "src": "6764:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6778:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6770:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 833,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6770:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6770:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6764:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 846,
                        "nodeType": "IfStatement",
                        "src": "6760:86:5",
                        "trueBody": {
                          "id": 845,
                          "nodeType": "Block",
                          "src": "6782:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6832:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6824:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 839,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6824:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6824:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 838,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1363,
                                  "src": "6803:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6803:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 844,
                              "nodeType": "RevertStatement",
                              "src": "6796:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 848,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "6863:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 849,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "6869:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 850,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "6873:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 847,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "6855:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6855:24:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 852,
                        "nodeType": "ExpressionStatement",
                        "src": "6855:24:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 808,
                    "nodeType": "StructuredDocumentation",
                    "src": "6219:362:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 854,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "6595:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6613:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "6605:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6605:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6627:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "6619:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6619:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 814,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6639:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "6631:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6631:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6604:41:5"
                  },
                  "returnParameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6655:0:5"
                  },
                  "scope": 1147,
                  "src": "6586:300:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 945,
                    "nodeType": "Block",
                    "src": "7276:1095:5",
                    "statements": [
                      {
                        "assignments": [
                          866
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 866,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7307:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 945,
                            "src": "7286:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 865,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 864,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "7286:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "7286:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "7286:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 869,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 867,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "7311:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7311:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7286:43:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 870,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 857,
                            "src": "7343:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7359:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7351:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 871,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7351:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7351:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7343:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 912,
                          "nodeType": "Block",
                          "src": "7519:366:5",
                          "statements": [
                            {
                              "assignments": [
                                884
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 884,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "7541:11:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 912,
                                  "src": "7533:19:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 883,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7533:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 889,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 885,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 866,
                                    "src": "7555:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                      "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                    }
                                  },
                                  "id": 886,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7557:9:5",
                                  "memberName": "_balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 558,
                                  "src": "7555:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 888,
                                "indexExpression": {
                                  "id": 887,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 857,
                                  "src": "7567:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7555:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7533:39:5"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 890,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "7590:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 891,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 861,
                                  "src": "7604:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7590:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 900,
                              "nodeType": "IfStatement",
                              "src": "7586:115:5",
                              "trueBody": {
                                "id": 899,
                                "nodeType": "Block",
                                "src": "7611:90:5",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 894,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 857,
                                          "src": "7661:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 895,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 884,
                                          "src": "7667:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 896,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 861,
                                          "src": "7680:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 893,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1353,
                                        "src": "7636:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 897,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7636:50:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 898,
                                    "nodeType": "RevertStatement",
                                    "src": "7629:57:5"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 911,
                              "nodeType": "UncheckedBlock",
                              "src": "7714:161:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 901,
                                          "name": "$",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 866,
                                          "src": "7821:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                          }
                                        },
                                        "id": 904,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7823:9:5",
                                        "memberName": "_balances",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 558,
                                        "src": "7821:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 905,
                                      "indexExpression": {
                                        "id": 903,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 857,
                                        "src": "7833:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7821:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 908,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 906,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 884,
                                        "src": "7841:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 907,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 861,
                                        "src": "7855:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7841:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7821:39:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 910,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7821:39:5"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 913,
                        "nodeType": "IfStatement",
                        "src": "7339:546:5",
                        "trueBody": {
                          "id": 882,
                          "nodeType": "Block",
                          "src": "7363:150:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 876,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 866,
                                    "src": "7479:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                      "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                    }
                                  },
                                  "id": 878,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7481:12:5",
                                  "memberName": "_totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 566,
                                  "src": "7479:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 879,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 861,
                                  "src": "7497:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7479:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 881,
                              "nodeType": "ExpressionStatement",
                              "src": "7479:23:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 914,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 859,
                            "src": "7899:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7913:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7905:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 915,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7905:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7905:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7899:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 937,
                          "nodeType": "Block",
                          "src": "8116:208:5",
                          "statements": [
                            {
                              "id": 936,
                              "nodeType": "UncheckedBlock",
                              "src": "8130:184:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 934,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 928,
                                          "name": "$",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 866,
                                          "src": "8275:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                          }
                                        },
                                        "id": 931,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8277:9:5",
                                        "memberName": "_balances",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 558,
                                        "src": "8275:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 932,
                                      "indexExpression": {
                                        "id": 930,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 859,
                                        "src": "8287:2:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "8275:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 933,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 861,
                                      "src": "8294:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8275:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 935,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8275:24:5"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 938,
                        "nodeType": "IfStatement",
                        "src": "7895:429:5",
                        "trueBody": {
                          "id": 927,
                          "nodeType": "Block",
                          "src": "7917:193:5",
                          "statements": [
                            {
                              "id": 926,
                              "nodeType": "UncheckedBlock",
                              "src": "7931:169:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 920,
                                        "name": "$",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 866,
                                        "src": "8062:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                          "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                        }
                                      },
                                      "id": 922,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "8064:12:5",
                                      "memberName": "_totalSupply",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 566,
                                      "src": "8062:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 923,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 861,
                                      "src": "8080:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8062:23:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 925,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8062:23:5"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 940,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "8348:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 941,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "8354:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 942,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 861,
                              "src": "8358:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 939,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1490,
                            "src": "8339:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8339:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 944,
                        "nodeType": "EmitStatement",
                        "src": "8334:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "6892:304:5",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 946,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "7210:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7226:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "7218:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7218:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7240:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "7232:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7232:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7252:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "7244:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7244:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7217:41:5"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7276:0:5"
                  },
                  "scope": 1147,
                  "src": "7201:1170:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 978,
                    "nodeType": "Block",
                    "src": "8770:152:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 954,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "8784:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8803:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8795:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8795:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8795:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8784:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 968,
                        "nodeType": "IfStatement",
                        "src": "8780:91:5",
                        "trueBody": {
                          "id": 967,
                          "nodeType": "Block",
                          "src": "8807:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 963,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8857:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 962,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8849:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 961,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8849:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 964,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8849:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 960,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1363,
                                  "src": "8828:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8828:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 966,
                              "nodeType": "RevertStatement",
                              "src": "8821:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8896:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8888:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 970,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8888:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8888:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 974,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "8900:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 975,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "8909:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 969,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "8880:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8880:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "8880:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 947,
                    "nodeType": "StructuredDocumentation",
                    "src": "8377:332:5",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 979,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "8723:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8737:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "8729:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8729:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8754:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "8746:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 950,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8746:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8728:32:5"
                  },
                  "returnParameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8770:0:5"
                  },
                  "scope": 1147,
                  "src": "8714:208:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1011,
                    "nodeType": "Block",
                    "src": "9296:150:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 987,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 982,
                            "src": "9310:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9329:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9321:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 988,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9321:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9321:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9310:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1001,
                        "nodeType": "IfStatement",
                        "src": "9306:89:5",
                        "trueBody": {
                          "id": 1000,
                          "nodeType": "Block",
                          "src": "9333:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 996,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9381:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 995,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9373:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 994,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9373:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 997,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9373:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 993,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1358,
                                  "src": "9354:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9354:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 999,
                              "nodeType": "RevertStatement",
                              "src": "9347:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1003,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "9412:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9429:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9421:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1004,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9421:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9421:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1008,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "9433:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1002,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "9404:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9404:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "9404:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 980,
                    "nodeType": "StructuredDocumentation",
                    "src": "8928:307:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1012,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "9249:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 982,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9263:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "9255:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9255:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9280:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "9272:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9272:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9254:32:5"
                  },
                  "returnParameters": {
                    "id": 986,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9296:0:5"
                  },
                  "scope": 1147,
                  "src": "9240:206:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "10056:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1023,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "10075:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1024,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "10082:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1025,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "10091:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10098:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1022,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1030,
                              1098
                            ],
                            "referencedDeclaration": 1098,
                            "src": "10066:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10066:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1028,
                        "nodeType": "ExpressionStatement",
                        "src": "10066:37:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1013,
                    "nodeType": "StructuredDocumentation",
                    "src": "9452:525:5",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1030,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9991:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10008:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "10000:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10000:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1017,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10023:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "10015:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10015:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10040:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "10032:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10032:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9999:47:5"
                  },
                  "returnParameters": {
                    "id": 1021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10056:0:5"
                  },
                  "scope": 1147,
                  "src": "9982:128:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "11055:389:5",
                    "statements": [
                      {
                        "assignments": [
                          1044
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1044,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "11086:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1097,
                            "src": "11065:22:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 1043,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1042,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "11065:12:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 571,
                                "src": "11065:12:5"
                              },
                              "referencedDeclaration": 571,
                              "src": "11065:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1047,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1045,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "11090:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$571_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11090:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11065:43:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1048,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "11122:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11139:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11131:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1049,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11131:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11131:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11122:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1062,
                        "nodeType": "IfStatement",
                        "src": "11118:89:5",
                        "trueBody": {
                          "id": 1061,
                          "nodeType": "Block",
                          "src": "11143:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1057,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11193:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1056,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11185:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1055,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11185:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1058,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11185:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1054,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "11164:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11164:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1060,
                              "nodeType": "RevertStatement",
                              "src": "11157:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1063,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "11220:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11239:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11231:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1064,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11231:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11231:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11220:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1077,
                        "nodeType": "IfStatement",
                        "src": "11216:90:5",
                        "trueBody": {
                          "id": 1076,
                          "nodeType": "Block",
                          "src": "11243:63:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1072,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11292:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1071,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11284:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1070,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11284:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1073,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11284:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1069,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1382,
                                  "src": "11264:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11264:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1075,
                              "nodeType": "RevertStatement",
                              "src": "11257:38:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1078,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "11315:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Storage_$571_storage_ptr",
                                    "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                  }
                                },
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11317:11:5",
                                "memberName": "_allowances",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 564,
                                "src": "11315:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1083,
                              "indexExpression": {
                                "id": 1080,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1033,
                                "src": "11329:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11315:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1084,
                            "indexExpression": {
                              "id": 1081,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "11336:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11315:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1085,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "11347:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11315:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1087,
                        "nodeType": "ExpressionStatement",
                        "src": "11315:37:5"
                      },
                      {
                        "condition": {
                          "id": 1088,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "11366:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1096,
                        "nodeType": "IfStatement",
                        "src": "11362:76:5",
                        "trueBody": {
                          "id": 1095,
                          "nodeType": "Block",
                          "src": "11377:61:5",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1090,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1033,
                                    "src": "11405:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1091,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1035,
                                    "src": "11412:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1092,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1037,
                                    "src": "11421:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1089,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1499,
                                  "src": "11396:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11396:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1094,
                              "nodeType": "EmitStatement",
                              "src": "11391:36:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1031,
                    "nodeType": "StructuredDocumentation",
                    "src": "10116:836:5",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 1098,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "10966:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10983:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "10975:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10975:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10998:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "10990:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10990:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "11015:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "11007:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11007:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "11027:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "11022:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11022:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10974:63:5"
                  },
                  "returnParameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11055:0:5"
                  },
                  "scope": 1147,
                  "src": "10957:487:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1145,
                    "nodeType": "Block",
                    "src": "11815:387:5",
                    "statements": [
                      {
                        "assignments": [
                          1109
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1109,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "11833:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1145,
                            "src": "11825:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1108,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11825:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1114,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1111,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1101,
                              "src": "11862:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1112,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "11869:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1110,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 751,
                            "src": "11852:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11852:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11825:52:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1115,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "11891:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11915:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1117,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11915:7:5",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1116,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "11910:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11910:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11924:3:5",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "11910:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11891:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1144,
                        "nodeType": "IfStatement",
                        "src": "11887:309:5",
                        "trueBody": {
                          "id": 1143,
                          "nodeType": "Block",
                          "src": "11929:267:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1122,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1109,
                                  "src": "11947:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1123,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1105,
                                  "src": "11966:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11947:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1132,
                              "nodeType": "IfStatement",
                              "src": "11943:130:5",
                              "trueBody": {
                                "id": 1131,
                                "nodeType": "Block",
                                "src": "11973:100:5",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1126,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1103,
                                          "src": "12025:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1127,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1109,
                                          "src": "12034:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1128,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1105,
                                          "src": "12052:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1125,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1372,
                                        "src": "11998:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1129,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11998:60:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1130,
                                    "nodeType": "RevertStatement",
                                    "src": "11991:67:5"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1142,
                              "nodeType": "UncheckedBlock",
                              "src": "12086:100:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1134,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1101,
                                        "src": "12123:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1135,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1103,
                                        "src": "12130:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1136,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1109,
                                          "src": "12139:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1137,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1105,
                                          "src": "12158:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12139:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12165:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1133,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1030,
                                        1098
                                      ],
                                      "referencedDeclaration": 1098,
                                      "src": "12114:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1140,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12114:57:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1141,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12114:57:5"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1099,
                    "nodeType": "StructuredDocumentation",
                    "src": "11450:271:5",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "11735:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "11759:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1146,
                        "src": "11751:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11751:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "11774:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1146,
                        "src": "11766:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11766:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "11791:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1146,
                        "src": "11783:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11783:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11750:47:5"
                  },
                  "returnParameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11815:0:5"
                  },
                  "scope": 1147,
                  "src": "11726:476:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1148,
              "src": "1281:10923:5",
              "usedErrors": [
                279,
                282,
                1353,
                1358,
                1363,
                1372,
                1377,
                1382
              ],
              "usedEvents": [
                287,
                1490,
                1499
              ]
            }
          ],
          "src": "105:12100:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1193
            ],
            "Initializable": [
              530
            ]
          },
          "id": 1194,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 1151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1194,
              "sourceUnit": 531,
              "src": "126:63:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1150,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 530,
                    "src": "134:13:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1153,
                    "name": "Initializable",
                    "nameLocations": [
                      "728:13:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 530,
                    "src": "728:13:6"
                  },
                  "id": 1154,
                  "nodeType": "InheritanceSpecifier",
                  "src": "728:13:6"
                }
              ],
              "canonicalName": "ContextUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1152,
                "nodeType": "StructuredDocumentation",
                "src": "191:496:6",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1193,
              "linearizedBaseContracts": [
                1193,
                530
              ],
              "name": "ContextUpgradeable",
              "nameLocation": "706:18:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1159,
                    "nodeType": "Block",
                    "src": "800:7:6",
                    "statements": []
                  },
                  "id": 1160,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1157,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1156,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "783:16:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "783:16:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "783:16:6"
                    }
                  ],
                  "name": "__Context_init",
                  "nameLocation": "757:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "771:2:6"
                  },
                  "returnParameters": {
                    "id": 1158,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "800:0:6"
                  },
                  "scope": 1193,
                  "src": "748:59:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1165,
                    "nodeType": "Block",
                    "src": "875:7:6",
                    "statements": []
                  },
                  "id": 1166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1163,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1162,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "858:16:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "858:16:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "858:16:6"
                    }
                  ],
                  "name": "__Context_init_unchained",
                  "nameLocation": "822:24:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1161,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:2:6"
                  },
                  "returnParameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "875:0:6"
                  },
                  "scope": 1193,
                  "src": "813:69:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1174,
                    "nodeType": "Block",
                    "src": "949:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "966:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "970:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "966:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1170,
                        "id": 1173,
                        "nodeType": "Return",
                        "src": "959:17:6"
                      }
                    ]
                  },
                  "id": 1175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "896:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "906:2:6"
                  },
                  "returnParameters": {
                    "id": 1170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1169,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "940:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:9:6"
                  },
                  "scope": 1193,
                  "src": "887:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1183,
                    "nodeType": "Block",
                    "src": "1056:32:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1073:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1077:4:6",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "1073:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1179,
                        "id": 1182,
                        "nodeType": "Return",
                        "src": "1066:15:6"
                      }
                    ]
                  },
                  "id": 1184,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "998:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:2:6"
                  },
                  "returnParameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "1040:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1039:16:6"
                  },
                  "scope": 1193,
                  "src": "989:99:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1191,
                    "nodeType": "Block",
                    "src": "1166:25:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1183:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1188,
                        "id": 1190,
                        "nodeType": "Return",
                        "src": "1176:8:6"
                      }
                    ]
                  },
                  "id": 1192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "1103:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1185,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1123:2:6"
                  },
                  "returnParameters": {
                    "id": 1188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1192,
                        "src": "1157:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:9:6"
                  },
                  "scope": 1193,
                  "src": "1094:97:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1194,
              "src": "688:505:6",
              "usedErrors": [
                279,
                282
              ],
              "usedEvents": [
                287
              ]
            }
          ],
          "src": "101:1093:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1612
            ],
            "Ownable": [
              1341
            ]
          },
          "id": 1342,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1195,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1197,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1342,
              "sourceUnit": 1613,
              "src": "128:45:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1196,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1612,
                    "src": "136:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1199,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1612,
                    "src": "692:7:7"
                  },
                  "id": 1200,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:7"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1198,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:7",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 1341,
              "linearizedBaseContracts": [
                1341,
                1612
              ],
              "name": "Ownable",
              "nameLocation": "681:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1341,
                  "src": "706:22:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1203,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:7",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 1207,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1205,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "858:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:7"
                  },
                  "src": "825:50:7"
                },
                {
                  "documentation": {
                    "id": 1208,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:7",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 1212,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1210,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1212,
                        "src": "994:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:7"
                  },
                  "src": "968:41:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 1218,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1214,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "1042:29:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1216,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "1073:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:7"
                  },
                  "src": "1015:84:7"
                },
                {
                  "body": {
                    "id": 1243,
                    "nodeType": "Block",
                    "src": "1259:153:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1224,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1221,
                            "src": "1273:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1225,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1238,
                        "nodeType": "IfStatement",
                        "src": "1269:95:7",
                        "trueBody": {
                          "id": 1237,
                          "nodeType": "Block",
                          "src": "1301:63:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1233,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1231,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1230,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1212,
                                  "src": "1322:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1236,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1240,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "1392:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1239,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "1373:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1219,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:7",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 1244,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1221,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1244,
                        "src": "1237:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:7"
                  },
                  "returnParameters": {
                    "id": 1223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:7"
                  },
                  "scope": 1341,
                  "src": "1225:187:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1251,
                    "nodeType": "Block",
                    "src": "1521:41:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1247,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "1531:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1249,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:7"
                      },
                      {
                        "id": 1250,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1245,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:7",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 1252,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:7"
                  },
                  "src": "1500:62:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "1693:30:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1258,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "1710:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1257,
                        "id": 1259,
                        "nodeType": "Return",
                        "src": "1703:13:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1253,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:7",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 1261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:7"
                  },
                  "returnParameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1684:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:7"
                  },
                  "scope": 1341,
                  "src": "1638:85:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1277,
                    "nodeType": "Block",
                    "src": "1841:117:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1265,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1261,
                              "src": "1855:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1267,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "1866:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1276,
                        "nodeType": "IfStatement",
                        "src": "1851:101:7",
                        "trueBody": {
                          "id": 1275,
                          "nodeType": "Block",
                          "src": "1880:72:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1271,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1594,
                                      "src": "1928:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 1272,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1270,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "1901:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1274,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1262,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:7",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 1278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:7"
                  },
                  "returnParameters": {
                    "id": 1264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:7"
                  },
                  "scope": 1341,
                  "src": "1796:162:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1291,
                    "nodeType": "Block",
                    "src": "2347:47:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1285,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1284,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2357:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1290,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1279,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:7",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 1292,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1282,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1281,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1252,
                        "src": "2337:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:7"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:7"
                  },
                  "returnParameters": {
                    "id": 1283,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:7"
                  },
                  "scope": 1341,
                  "src": "2293:101:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1319,
                    "nodeType": "Block",
                    "src": "2613:145:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1300,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1295,
                            "src": "2627:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1301,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1314,
                        "nodeType": "IfStatement",
                        "src": "2623:91:7",
                        "trueBody": {
                          "id": 1313,
                          "nodeType": "Block",
                          "src": "2651:63:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1308,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1307,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1306,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1212,
                                  "src": "2672:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1312,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1316,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "2742:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1315,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2723:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1318,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1293,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:7",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 1320,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1298,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1297,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1252,
                        "src": "2603:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:7"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1295,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1320,
                        "src": "2570:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:7"
                  },
                  "returnParameters": {
                    "id": 1299,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:7"
                  },
                  "scope": 1341,
                  "src": "2543:215:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "2975:124:7",
                    "statements": [
                      {
                        "assignments": [
                          1327
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1327,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1339,
                            "src": "2985:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1326,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1329,
                        "initialValue": {
                          "id": 1328,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "3004:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:7"
                      },
                      {
                        "expression": {
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1330,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "3020:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1331,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "3029:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1333,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1335,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1327,
                              "src": "3073:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1336,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "3083:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1334,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "3052:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1338,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1321,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:7",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 1340,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "2940:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:7"
                  },
                  "returnParameters": {
                    "id": 1325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:7"
                  },
                  "scope": 1341,
                  "src": "2912:187:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1342,
              "src": "663:2438:7",
              "usedErrors": [
                1207,
                1212
              ],
              "usedEvents": [
                1218
              ]
            }
          ],
          "src": "102:3000:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              1478
            ],
            "IERC20Errors": [
              1383
            ],
            "IERC721Errors": [
              1431
            ]
          },
          "id": 1479,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1343,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1344,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:8",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 1383,
              "linearizedBaseContracts": [
                1383
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1345,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:8",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 1353,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1347,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "654:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1349,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "670:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1348,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "687:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:8"
                  },
                  "src": "623:80:8"
                },
                {
                  "documentation": {
                    "id": 1354,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:8",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 1358,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1356,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1358,
                        "src": "891:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:8"
                  },
                  "src": "866:41:8"
                },
                {
                  "documentation": {
                    "id": 1359,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:8",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 1363,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1361,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1363,
                        "src": "1104:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:8"
                  },
                  "src": "1077:45:8"
                },
                {
                  "documentation": {
                    "id": 1364,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:8",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 1372,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1366,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "1511:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "1528:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1370,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "1547:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:8"
                  },
                  "src": "1478:85:8"
                },
                {
                  "documentation": {
                    "id": 1373,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:8",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 1377,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1377,
                        "src": "1775:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:8"
                  },
                  "src": "1748:45:8"
                },
                {
                  "documentation": {
                    "id": 1378,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:8",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 1382,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1382,
                        "src": "2025:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:8"
                  },
                  "src": "1999:43:8"
                }
              ],
              "scope": 1479,
              "src": "280:1764:8",
              "usedErrors": [
                1353,
                1358,
                1363,
                1372,
                1377,
                1382
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1384,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:8",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 1431,
              "linearizedBaseContracts": [
                1431
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1385,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:8",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 1389,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1387,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "2469:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1386,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:8"
                  },
                  "src": "2444:40:8"
                },
                {
                  "documentation": {
                    "id": 1390,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:8",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 1394,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1392,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "2656:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1391,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:8"
                  },
                  "src": "2627:46:8"
                },
                {
                  "documentation": {
                    "id": 1395,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:8",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 1403,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1397,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "3000:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1399,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "3016:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "3033:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:8"
                  },
                  "src": "2973:75:8"
                },
                {
                  "documentation": {
                    "id": 1404,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:8",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 1408,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1406,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1408,
                        "src": "3237:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:8"
                  },
                  "src": "3211:42:8"
                },
                {
                  "documentation": {
                    "id": 1409,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:8",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 1413,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1413,
                        "src": "3451:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:8"
                  },
                  "src": "3423:46:8"
                },
                {
                  "documentation": {
                    "id": 1414,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:8",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 1420,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1420,
                        "src": "3760:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1418,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1420,
                        "src": "3778:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1417,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:8"
                  },
                  "src": "3727:68:8"
                },
                {
                  "documentation": {
                    "id": 1421,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:8",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 1425,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1423,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "4008:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:8"
                  },
                  "src": "3980:46:8"
                },
                {
                  "documentation": {
                    "id": 1426,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:8",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 1430,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1429,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1428,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1430,
                        "src": "4262:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:8"
                  },
                  "src": "4234:46:8"
                }
              ],
              "scope": 1479,
              "src": "2190:2092:8",
              "usedErrors": [
                1389,
                1394,
                1403,
                1408,
                1413,
                1420,
                1425,
                1430
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1432,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:8",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 1478,
              "linearizedBaseContracts": [
                1478
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1433,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:8",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 1443,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "4860:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "4876:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1439,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "4893:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1441,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "4909:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1440,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:8"
                  },
                  "src": "4827:99:8"
                },
                {
                  "documentation": {
                    "id": 1444,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:8",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 1448,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1446,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1448,
                        "src": "5116:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:8"
                  },
                  "src": "5089:43:8"
                },
                {
                  "documentation": {
                    "id": 1449,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:8",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 1453,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1451,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1453,
                        "src": "5331:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:8"
                  },
                  "src": "5302:47:8"
                },
                {
                  "documentation": {
                    "id": 1454,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:8",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 1460,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1456,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1460,
                        "src": "5651:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1458,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1460,
                        "src": "5669:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:8"
                  },
                  "src": "5616:68:8"
                },
                {
                  "documentation": {
                    "id": 1461,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:8",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 1465,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1465,
                        "src": "5898:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:8"
                  },
                  "src": "5869:47:8"
                },
                {
                  "documentation": {
                    "id": 1466,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:8",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 1470,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1468,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "6153:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1467,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:8"
                  },
                  "src": "6124:47:8"
                },
                {
                  "documentation": {
                    "id": 1471,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:8",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 1477,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "6494:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "6513:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:8"
                  },
                  "src": "6462:73:8"
                }
              ],
              "scope": 1479,
              "src": "4430:2107:8",
              "usedErrors": [
                1443,
                1448,
                1453,
                1460,
                1465,
                1470,
                1477
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1556
            ]
          },
          "id": 1557,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1480,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1481,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:9",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1556,
              "linearizedBaseContracts": [
                1556
              ],
              "name": "IERC20",
              "nameLocation": "214:6:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1482,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:9",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1490,
                  "name": "Transfer",
                  "nameLocation": "396:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1484,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "405:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1486,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "427:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1488,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "447:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1487,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:9"
                  },
                  "src": "390:72:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1491,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:9",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1499,
                  "name": "Approval",
                  "nameLocation": "627:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1493,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1499,
                        "src": "636:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1495,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1499,
                        "src": "659:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1497,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1499,
                        "src": "684:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:9"
                  },
                  "src": "621:78:9"
                },
                {
                  "documentation": {
                    "id": 1500,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:9",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1505,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1501,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:9"
                  },
                  "returnParameters": {
                    "id": 1504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1503,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1505,
                        "src": "821:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:9"
                  },
                  "scope": 1556,
                  "src": "775:55:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1506,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:9",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1513,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1508,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1513,
                        "src": "931:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:9"
                  },
                  "returnParameters": {
                    "id": 1512,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1511,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1513,
                        "src": "971:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1510,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:9"
                  },
                  "scope": 1556,
                  "src": "912:68:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1514,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:9",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1523,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1516,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1523,
                        "src": "1222:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1518,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1523,
                        "src": "1234:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1517,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:9"
                  },
                  "returnParameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1521,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1523,
                        "src": "1267:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1520,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:9"
                  },
                  "scope": 1556,
                  "src": "1204:69:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1524,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:9",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1533,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1526,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1533,
                        "src": "1567:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1528,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1533,
                        "src": "1582:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:9"
                  },
                  "returnParameters": {
                    "id": 1532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1533,
                        "src": "1622:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:9"
                  },
                  "scope": 1556,
                  "src": "1548:83:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1534,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:9",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1543,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1536,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1543,
                        "src": "2326:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1538,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1543,
                        "src": "2343:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:9"
                  },
                  "returnParameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1541,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1543,
                        "src": "2376:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1540,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:9"
                  },
                  "scope": 1556,
                  "src": "2309:73:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1544,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:9",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1555,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "2712:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "2726:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1550,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "2738:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:9"
                  },
                  "returnParameters": {
                    "id": 1554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1553,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "2771:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1552,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:9"
                  },
                  "scope": 1556,
                  "src": "2690:87:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1557,
              "src": "204:2575:9",
              "usedErrors": [],
              "usedEvents": [
                1490,
                1499
              ]
            }
          ],
          "src": "106:2674:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1556
            ],
            "IERC20Metadata": [
              1582
            ]
          },
          "id": 1583,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1558,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1560,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1583,
              "sourceUnit": 1557,
              "src": "151:37:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1559,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "159:6:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1562,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1556,
                    "src": "306:6:10"
                  },
                  "id": 1563,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:10"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1561,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:10",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1582,
              "linearizedBaseContracts": [
                1582,
                1556
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1564,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:10",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1569,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:10"
                  },
                  "returnParameters": {
                    "id": 1568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1567,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1569,
                        "src": "417:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1566,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:10"
                  },
                  "scope": 1582,
                  "src": "378:54:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1570,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:10",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1575,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1571,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:10"
                  },
                  "returnParameters": {
                    "id": 1574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1573,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "540:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1572,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:10"
                  },
                  "scope": 1582,
                  "src": "499:56:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1576,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:10",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1581,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1577,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:10"
                  },
                  "returnParameters": {
                    "id": 1580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1579,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1581,
                        "src": "674:5:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:10"
                  },
                  "scope": 1582,
                  "src": "631:50:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1583,
              "src": "278:405:10",
              "usedErrors": [],
              "usedEvents": [
                1490,
                1499
              ]
            }
          ],
          "src": "125:559:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1612
            ]
          },
          "id": 1613,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1584,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:11"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1585,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:11",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1612,
              "linearizedBaseContracts": [
                1612
              ],
              "name": "Context",
              "nameLocation": "642:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1593,
                    "nodeType": "Block",
                    "src": "718:34:11",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1590,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1589,
                        "id": 1592,
                        "nodeType": "Return",
                        "src": "728:17:11"
                      }
                    ]
                  },
                  "id": 1594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:11"
                  },
                  "returnParameters": {
                    "id": 1589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1588,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1594,
                        "src": "709:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:11"
                  },
                  "scope": 1612,
                  "src": "656:96:11",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1602,
                    "nodeType": "Block",
                    "src": "825:32:11",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1599,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:11",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1598,
                        "id": 1601,
                        "nodeType": "Return",
                        "src": "835:15:11"
                      }
                    ]
                  },
                  "id": 1603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:11"
                  },
                  "returnParameters": {
                    "id": 1598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1597,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1603,
                        "src": "809:14:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1596,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:11"
                  },
                  "scope": 1612,
                  "src": "758:99:11",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1610,
                    "nodeType": "Block",
                    "src": "935:25:11",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1607,
                        "id": 1609,
                        "nodeType": "Return",
                        "src": "945:8:11"
                      }
                    ]
                  },
                  "id": 1611,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1604,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:11"
                  },
                  "returnParameters": {
                    "id": 1607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1606,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "926:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1605,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:11"
                  },
                  "scope": 1612,
                  "src": "863:97:11",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1613,
              "src": "624:338:11",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1681
            ]
          },
          "id": 1682,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1614,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:12"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1615,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:12",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1681,
              "linearizedBaseContracts": [
                1681
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1618,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "1818:40:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1621,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "1864:36:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1623,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "1907:23:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1624,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:12",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1626,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1625,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:12"
                  },
                  "src": "1994:37:12"
                },
                {
                  "body": {
                    "id": 1633,
                    "nodeType": "Block",
                    "src": "2051:38:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1629,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1623,
                            "src": "2061:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1630,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1618,
                            "src": "2071:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1632,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:12"
                      }
                    ]
                  },
                  "id": 1634,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:12"
                  },
                  "returnParameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:12"
                  },
                  "scope": 1681,
                  "src": "2037:52:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1644,
                    "nodeType": "Block",
                    "src": "2490:79:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1637,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1661,
                            "src": "2500:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1639,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:12"
                      },
                      {
                        "id": 1640,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1641,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1669,
                            "src": "2542:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1643,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1635,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:12",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1645,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:12",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:12"
                  },
                  "src": "2466:103:12",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1660,
                    "nodeType": "Block",
                    "src": "2614:268:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1648,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1623,
                            "src": "2702:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1649,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1621,
                            "src": "2713:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1655,
                        "nodeType": "IfStatement",
                        "src": "2698:86:12",
                        "trueBody": {
                          "id": 1654,
                          "nodeType": "Block",
                          "src": "2722:62:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1651,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1626,
                                  "src": "2743:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1653,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1656,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1623,
                            "src": "2858:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1657,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1621,
                            "src": "2868:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1659,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:12"
                      }
                    ]
                  },
                  "id": 1661,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:12"
                  },
                  "returnParameters": {
                    "id": 1647,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:12"
                  },
                  "scope": 1681,
                  "src": "2575:307:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1668,
                    "nodeType": "Block",
                    "src": "2926:170:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1664,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1623,
                            "src": "3068:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1665,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1618,
                            "src": "3078:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1667,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:12"
                      }
                    ]
                  },
                  "id": 1669,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:12"
                  },
                  "returnParameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:12"
                  },
                  "scope": 1681,
                  "src": "2888:208:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1679,
                    "nodeType": "Block",
                    "src": "3339:42:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1675,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1623,
                            "src": "3356:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1676,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1621,
                            "src": "3367:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1674,
                        "id": 1678,
                        "nodeType": "Return",
                        "src": "3349:25:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1670,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:12",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1680,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:12"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1673,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "3333:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:12"
                  },
                  "scope": 1681,
                  "src": "3275:106:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1682,
              "src": "1030:2353:12",
              "usedErrors": [
                1626
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:12"
        },
        "id": 12
      },
      "contracts/Agent.sol": {
        "ast": {
          "absolutePath": "contracts/Agent.sol",
          "exportedSymbols": {
            "Agent": [
              2274
            ],
            "AutomationCompatibleInterface": [
              67
            ],
            "Enums": [
              4106
            ],
            "IAccount": [
              3505
            ],
            "IAccountFactory": [
              3530
            ],
            "IAddressesProvider": [
              3553
            ],
            "IAfterYieldFunctions": [
              3578
            ],
            "IAgent": [
              3686
            ],
            "IERC20": [
              1556
            ],
            "IStrategy": [
              3943
            ],
            "IVault": [
              4070
            ],
            "Ownable": [
              1341
            ]
          },
          "id": 2275,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1683,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:13"
            },
            {
              "absolutePath": "contracts/libs/Enums.sol",
              "file": "./libs/Enums.sol",
              "id": 1685,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 4107,
              "src": "68:39:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1684,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "76:5:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IVault.sol",
              "file": "./interfaces/IVault.sol",
              "id": 1687,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 4071,
              "src": "109:47:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1686,
                    "name": "IVault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4070,
                    "src": "117:6:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStrategy.sol",
              "file": "./interfaces/IStrategy.sol",
              "id": 1689,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 3944,
              "src": "158:53:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1688,
                    "name": "IStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3943,
                    "src": "166:9:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAgent.sol",
              "file": "./interfaces/IAgent.sol",
              "id": 1691,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 3687,
              "src": "213:47:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1690,
                    "name": "IAgent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3686,
                    "src": "221:6:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAccount.sol",
              "file": "./interfaces/IAccount.sol",
              "id": 1693,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 3506,
              "src": "262:51:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1692,
                    "name": "IAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "270:8:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAccountFactory.sol",
              "file": "./interfaces/IAccountFactory.sol",
              "id": 1695,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 3531,
              "src": "315:65:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1694,
                    "name": "IAccountFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3530,
                    "src": "323:15:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAddressesProvider.sol",
              "file": "./interfaces/IAddressesProvider.sol",
              "id": 1697,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 3554,
              "src": "382:71:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1696,
                    "name": "IAddressesProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3553,
                    "src": "390:18:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAfterYieldFunctions.sol",
              "file": "./interfaces/IAfterYieldFunctions.sol",
              "id": 1699,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 3579,
              "src": "455:75:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1698,
                    "name": "IAfterYieldFunctions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3578,
                    "src": "463:20:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1701,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 1342,
              "src": "532:67:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1700,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1341,
                    "src": "540:7:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1703,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 1557,
              "src": "601:70:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1702,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "609:6:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
              "file": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
              "id": 1705,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2275,
              "sourceUnit": 49,
              "src": "673:112:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1704,
                    "name": "AutomationCompatibleInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "681:29:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1706,
                    "name": "IAgent",
                    "nameLocations": [
                      "807:6:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3686,
                    "src": "807:6:13"
                  },
                  "id": 1707,
                  "nodeType": "InheritanceSpecifier",
                  "src": "807:6:13"
                },
                {
                  "baseName": {
                    "id": 1708,
                    "name": "Ownable",
                    "nameLocations": [
                      "815:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1341,
                    "src": "815:7:13"
                  },
                  "id": 1709,
                  "nodeType": "InheritanceSpecifier",
                  "src": "815:7:13"
                },
                {
                  "baseName": {
                    "id": 1710,
                    "name": "AutomationCompatibleInterface",
                    "nameLocations": [
                      "824:29:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 67,
                    "src": "824:29:13"
                  },
                  "id": 1711,
                  "nodeType": "InheritanceSpecifier",
                  "src": "824:29:13"
                }
              ],
              "canonicalName": "Agent",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2274,
              "linearizedBaseContracts": [
                2274,
                67,
                1341,
                1612,
                3686
              ],
              "name": "Agent",
              "nameLocation": "798:5:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1713,
                  "mutability": "mutable",
                  "name": "_feePerTask",
                  "nameLocation": "878:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "861:28:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "_feeCollector",
                  "nameLocation": "913:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "896:30:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "_feeToken",
                  "nameLocation": "949:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "933:25:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1556",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1717,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1716,
                      "name": "IERC20",
                      "nameLocations": [
                        "933:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1556,
                      "src": "933:6:13"
                    },
                    "referencedDeclaration": 1556,
                    "src": "933:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1556",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1721,
                  "mutability": "mutable",
                  "name": "_provider",
                  "nameLocation": "993:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "965:37:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                    "typeString": "contract IAddressesProvider"
                  },
                  "typeName": {
                    "id": 1720,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1719,
                      "name": "IAddressesProvider",
                      "nameLocations": [
                        "965:18:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3553,
                      "src": "965:18:13"
                    },
                    "referencedDeclaration": 3553,
                    "src": "965:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                      "typeString": "contract IAddressesProvider"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1727,
                  "mutability": "mutable",
                  "name": "_approvals",
                  "nameLocation": "1058:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1009:59:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$",
                    "typeString": "mapping(contract IAccount => enum Enums.ApprovalFlag)"
                  },
                  "typeName": {
                    "id": 1726,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1723,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1722,
                        "name": "IAccount",
                        "nameLocations": [
                          "1017:8:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3505,
                        "src": "1017:8:13"
                      },
                      "referencedDeclaration": 3505,
                      "src": "1017:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$3505",
                        "typeString": "contract IAccount"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1009:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$",
                      "typeString": "mapping(contract IAccount => enum Enums.ApprovalFlag)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1725,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1724,
                        "name": "Enums.ApprovalFlag",
                        "nameLocations": [
                          "1029:5:13",
                          "1035:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4101,
                        "src": "1029:18:13"
                      },
                      "referencedDeclaration": 4101,
                      "src": "1029:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                        "typeString": "enum Enums.ApprovalFlag"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "fabbf02c",
                  "id": 1729,
                  "mutability": "mutable",
                  "name": "_lastTimeStamp",
                  "nameLocation": "1092:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1077:29:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "aa91c9c6",
                  "id": 1732,
                  "mutability": "mutable",
                  "name": "_interval",
                  "nameLocation": "1128:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1113:33:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31345f303030",
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1140:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_14000_by_1",
                      "typeString": "int_const 14000"
                    },
                    "value": "14_000"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1765,
                    "nodeType": "Block",
                    "src": "1320:144:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1749,
                            "name": "_feeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1718,
                            "src": "1331:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1556",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1750,
                            "name": "feeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1739,
                            "src": "1343:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1556",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1331:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1556",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1752,
                        "nodeType": "ExpressionStatement",
                        "src": "1331:20:13"
                      },
                      {
                        "expression": {
                          "id": 1755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1753,
                            "name": "_provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1721,
                            "src": "1362:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                              "typeString": "contract IAddressesProvider"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1754,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "1374:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                              "typeString": "contract IAddressesProvider"
                            }
                          },
                          "src": "1362:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                            "typeString": "contract IAddressesProvider"
                          }
                        },
                        "id": 1756,
                        "nodeType": "ExpressionStatement",
                        "src": "1362:20:13"
                      },
                      {
                        "expression": {
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1757,
                            "name": "_feePerTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "1393:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1758,
                            "name": "feePerTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1734,
                            "src": "1407:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1393:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1760,
                        "nodeType": "ExpressionStatement",
                        "src": "1393:24:13"
                      },
                      {
                        "expression": {
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1761,
                            "name": "_feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "1428:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1762,
                            "name": "feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1736,
                            "src": "1444:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1428:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1764,
                        "nodeType": "ExpressionStatement",
                        "src": "1428:28:13"
                      }
                    ]
                  },
                  "id": 1766,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1745,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "1306:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1306:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1747,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1744,
                        "name": "Ownable",
                        "nameLocations": [
                          "1298:7:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1341,
                        "src": "1298:7:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1298:21:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1734,
                        "mutability": "mutable",
                        "name": "feePerTask",
                        "nameLocation": "1185:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "1177:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1177:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1736,
                        "mutability": "mutable",
                        "name": "feeCollector",
                        "nameLocation": "1214:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "1206:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1735,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1206:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "feeToken",
                        "nameLocation": "1244:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "1237:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1556",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1738,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1737,
                            "name": "IERC20",
                            "nameLocations": [
                              "1237:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1556,
                            "src": "1237:6:13"
                          },
                          "referencedDeclaration": 1556,
                          "src": "1237:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1556",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1742,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "1282:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "1263:27:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                          "typeString": "contract IAddressesProvider"
                        },
                        "typeName": {
                          "id": 1741,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1740,
                            "name": "IAddressesProvider",
                            "nameLocations": [
                              "1263:18:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3553,
                            "src": "1263:18:13"
                          },
                          "referencedDeclaration": 3553,
                          "src": "1263:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                            "typeString": "contract IAddressesProvider"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1166:131:13"
                  },
                  "returnParameters": {
                    "id": 1748,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1320:0:13"
                  },
                  "scope": 2274,
                  "src": "1155:309:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    60
                  ],
                  "body": {
                    "id": 1793,
                    "nodeType": "Block",
                    "src": "1641:115:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1776,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1772,
                            "src": "1652:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1777,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "1668:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1674:9:13",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "1668:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1779,
                                    "name": "_lastTimeStamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1729,
                                    "src": "1686:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1668:32:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1781,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1667:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1782,
                              "name": "_interval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1732,
                              "src": "1704:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1667:46:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1652:61:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1785,
                        "nodeType": "ExpressionStatement",
                        "src": "1652:61:13"
                      },
                      {
                        "expression": {
                          "id": 1791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1786,
                            "name": "checkData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "1724:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1746:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1736:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 1787,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1740:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 1790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1736:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "1724:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1792,
                        "nodeType": "ExpressionStatement",
                        "src": "1724:24:13"
                      }
                    ]
                  },
                  "functionSelector": "6e04ff0d",
                  "id": 1794,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkUpkeep",
                  "nameLocation": "1481:11:13",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1770,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1566:8:13"
                  },
                  "parameters": {
                    "id": 1769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1794,
                        "src": "1503:14:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1767,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1492:32:13"
                  },
                  "returnParameters": {
                    "id": 1775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1772,
                        "mutability": "mutable",
                        "name": "upkeepNeeded",
                        "nameLocation": "1598:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1794,
                        "src": "1593:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1771,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1774,
                        "mutability": "mutable",
                        "name": "checkData",
                        "nameLocation": "1625:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1794,
                        "src": "1612:22:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1773,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:43:13"
                  },
                  "scope": 2274,
                  "src": "1472:284:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    66
                  ],
                  "body": {
                    "id": 1836,
                    "nodeType": "Block",
                    "src": "1831:348:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1800,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1847:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1801,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1853:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1847:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1802,
                                  "name": "_lastTimeStamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1729,
                                  "src": "1865:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1847:32:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1804,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1846:34:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1805,
                            "name": "_interval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1732,
                            "src": "1883:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1846:46:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1835,
                        "nodeType": "IfStatement",
                        "src": "1842:330:13",
                        "trueBody": {
                          "id": 1834,
                          "nodeType": "Block",
                          "src": "1894:278:13",
                          "statements": [
                            {
                              "assignments": [
                                1811,
                                1813,
                                1815
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1811,
                                  "mutability": "mutable",
                                  "name": "taskType",
                                  "nameLocation": "1943:8:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1834,
                                  "src": "1928:23:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TaskType_$4105",
                                    "typeString": "enum Enums.TaskType"
                                  },
                                  "typeName": {
                                    "id": 1810,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1809,
                                      "name": "Enums.TaskType",
                                      "nameLocations": [
                                        "1928:5:13",
                                        "1934:8:13"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 4105,
                                      "src": "1928:14:13"
                                    },
                                    "referencedDeclaration": 4105,
                                    "src": "1928:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_TaskType_$4105",
                                      "typeString": "enum Enums.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1813,
                                  "mutability": "mutable",
                                  "name": "subscriptionId",
                                  "nameLocation": "1977:14:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1834,
                                  "src": "1970:21:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "typeName": {
                                    "id": 1812,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1970:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1815,
                                  "mutability": "mutable",
                                  "name": "gasLimit",
                                  "nameLocation": "2017:8:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1834,
                                  "src": "2010:15:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 1814,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2010:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1827,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1818,
                                    "name": "checkData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1796,
                                    "src": "2054:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "expression": {
                                          "id": 1819,
                                          "name": "Enums",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4106,
                                          "src": "2066:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                            "typeString": "type(library Enums)"
                                          }
                                        },
                                        "id": 1820,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2072:8:13",
                                        "memberName": "TaskType",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4105,
                                        "src": "2066:14:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_TaskType_$4105_$",
                                          "typeString": "type(enum Enums.TaskType)"
                                        }
                                      },
                                      {
                                        "id": 1822,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2082:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 1821,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2082:6:13",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      {
                                        "id": 1824,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2090:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint32_$",
                                          "typeString": "type(uint32)"
                                        },
                                        "typeName": {
                                          "id": 1823,
                                          "name": "uint32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2090:6:13",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 1825,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2065:32:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_type$_t_enum$_TaskType_$4105_$_$_t_type$_t_uint64_$_$_t_type$_t_uint32_$_$",
                                      "typeString": "tuple(type(enum Enums.TaskType),type(uint64),type(uint32))"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_tuple$_t_type$_t_enum$_TaskType_$4105_$_$_t_type$_t_uint64_$_$_t_type$_t_uint32_$_$",
                                      "typeString": "tuple(type(enum Enums.TaskType),type(uint64),type(uint32))"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1816,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2043:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2047:6:13",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "2043:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2043:55:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_enum$_TaskType_$4105_$_t_uint64_$_t_uint32_$",
                                  "typeString": "tuple(enum Enums.TaskType,uint64,uint32)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1909:189:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1829,
                                    "name": "taskType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1811,
                                    "src": "2125:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_TaskType_$4105",
                                      "typeString": "enum Enums.TaskType"
                                    }
                                  },
                                  {
                                    "id": 1830,
                                    "name": "subscriptionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1813,
                                    "src": "2135:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "id": 1831,
                                    "name": "gasLimit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1815,
                                    "src": "2151:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_TaskType_$4105",
                                      "typeString": "enum Enums.TaskType"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 1828,
                                  "name": "_doUpKeep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1868,
                                  "src": "2115:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_TaskType_$4105_$_t_uint64_$_t_uint32_$returns$_t_bytes32_$",
                                    "typeString": "function (enum Enums.TaskType,uint64,uint32) returns (bytes32)"
                                  }
                                },
                                "id": 1832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2115:45:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1833,
                              "nodeType": "ExpressionStatement",
                              "src": "2115:45:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "4585e33b",
                  "id": 1837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "performUpkeep",
                  "nameLocation": "1773:13:13",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1798,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1822:8:13"
                  },
                  "parameters": {
                    "id": 1797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1796,
                        "mutability": "mutable",
                        "name": "checkData",
                        "nameLocation": "1802:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1837,
                        "src": "1787:24:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1795,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1787:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1786:26:13"
                  },
                  "returnParameters": {
                    "id": 1799,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1831:0:13"
                  },
                  "scope": 2274,
                  "src": "1764:415:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1867,
                    "nodeType": "Block",
                    "src": "2342:214:13",
                    "statements": [
                      {
                        "assignments": [
                          1851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1851,
                            "mutability": "mutable",
                            "name": "functions",
                            "nameLocation": "2374:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1867,
                            "src": "2353:30:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAfterYieldFunctions_$3578",
                              "typeString": "contract IAfterYieldFunctions"
                            },
                            "typeName": {
                              "id": 1850,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1849,
                                "name": "IAfterYieldFunctions",
                                "nameLocations": [
                                  "2353:20:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3578,
                                "src": "2353:20:13"
                              },
                              "referencedDeclaration": 3578,
                              "src": "2353:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAfterYieldFunctions_$3578",
                                "typeString": "contract IAfterYieldFunctions"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1857,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1853,
                                  "name": "_provider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "2421:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                                    "typeString": "contract IAddressesProvider"
                                  }
                                },
                                "id": 1854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2431:22:13",
                                "memberName": "getAfterYieldFunctions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3542,
                                "src": "2421:32:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2421:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1852,
                            "name": "IAfterYieldFunctions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3578,
                            "src": "2386:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAfterYieldFunctions_$3578_$",
                              "typeString": "type(contract IAfterYieldFunctions)"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2386:80:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAfterYieldFunctions_$3578",
                            "typeString": "contract IAfterYieldFunctions"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2353:113:13"
                      },
                      {
                        "expression": {
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1858,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1847,
                            "src": "2479:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1861,
                                "name": "taskType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1840,
                                "src": "2513:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TaskType_$4105",
                                  "typeString": "enum Enums.TaskType"
                                }
                              },
                              {
                                "id": 1862,
                                "name": "subscriptionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1842,
                                "src": "2523:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              {
                                "id": 1863,
                                "name": "gasLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1844,
                                "src": "2539:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_TaskType_$4105",
                                  "typeString": "enum Enums.TaskType"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "id": 1859,
                                "name": "functions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1851,
                                "src": "2491:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAfterYieldFunctions_$3578",
                                  "typeString": "contract IAfterYieldFunctions"
                                }
                              },
                              "id": 1860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2501:11:13",
                              "memberName": "makeRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3577,
                              "src": "2491:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_enum$_TaskType_$4105_$_t_uint64_$_t_uint32_$returns$_t_bytes32_$",
                                "typeString": "function (enum Enums.TaskType,uint64,uint32) external returns (bytes32)"
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2491:57:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2479:69:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1866,
                        "nodeType": "ExpressionStatement",
                        "src": "2479:69:13"
                      }
                    ]
                  },
                  "id": 1868,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_doUpKeep",
                  "nameLocation": "2196:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1840,
                        "mutability": "mutable",
                        "name": "taskType",
                        "nameLocation": "2231:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1868,
                        "src": "2216:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TaskType_$4105",
                          "typeString": "enum Enums.TaskType"
                        },
                        "typeName": {
                          "id": 1839,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1838,
                            "name": "Enums.TaskType",
                            "nameLocations": [
                              "2216:5:13",
                              "2222:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4105,
                            "src": "2216:14:13"
                          },
                          "referencedDeclaration": 4105,
                          "src": "2216:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TaskType_$4105",
                            "typeString": "enum Enums.TaskType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1842,
                        "mutability": "mutable",
                        "name": "subscriptionId",
                        "nameLocation": "2257:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1868,
                        "src": "2250:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1841,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2250:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1844,
                        "mutability": "mutable",
                        "name": "gasLimit",
                        "nameLocation": "2289:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1868,
                        "src": "2282:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1843,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2282:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2205:99:13"
                  },
                  "returnParameters": {
                    "id": 1848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1847,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "2331:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1868,
                        "src": "2323:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1846,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2323:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2322:19:13"
                  },
                  "scope": 2274,
                  "src": "2187:369:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    3616
                  ],
                  "body": {
                    "id": 1894,
                    "nodeType": "Block",
                    "src": "2904:110:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1883,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1877,
                              "src": "2927:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 1882,
                            "name": "_beforeTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2255,
                            "src": "2915:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAccount_$3505_$returns$__$",
                              "typeString": "function (contract IAccount)"
                            }
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2915:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1885,
                        "nodeType": "ExpressionStatement",
                        "src": "2915:20:13"
                      },
                      {
                        "expression": {
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1886,
                            "name": "lpMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1880,
                            "src": "2948:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1889,
                                "name": "amountScaled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1874,
                                "src": "2984:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1890,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1877,
                                "src": "2998:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAccount_$3505",
                                  "typeString": "contract IAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IAccount_$3505",
                                  "typeString": "contract IAccount"
                                }
                              ],
                              "expression": {
                                "id": 1887,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "2959:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$4070",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2965:18:13",
                              "memberName": "depositFromAccount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3982,
                              "src": "2959:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IAccount_$3505_$returns$_t_uint256_$",
                                "typeString": "function (uint256,contract IAccount) external returns (uint256)"
                              }
                            },
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2959:47:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2948:58:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1893,
                        "nodeType": "ExpressionStatement",
                        "src": "2948:58:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1869,
                    "nodeType": "StructuredDocumentation",
                    "src": "2564:182:13",
                    "text": "@dev Needs to safe-guard these deposit/withdraw functions to controller and account owner only.\n @dev Needs to call _beforeTask function only is msg.sender is controller."
                  },
                  "functionSelector": "e76e8cad",
                  "id": 1895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositFromAccount",
                  "nameLocation": "2761:18:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1872,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "2797:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "2790:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$4070",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 1871,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1870,
                            "name": "IVault",
                            "nameLocations": [
                              "2790:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4070,
                            "src": "2790:6:13"
                          },
                          "referencedDeclaration": 4070,
                          "src": "2790:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$4070",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1874,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "2821:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "2813:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2813:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1877,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2853:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "2844:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 1876,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1875,
                            "name": "IAccount",
                            "nameLocations": [
                              "2844:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "2844:8:13"
                          },
                          "referencedDeclaration": 3505,
                          "src": "2844:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2779:88:13"
                  },
                  "returnParameters": {
                    "id": 1881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1880,
                        "mutability": "mutable",
                        "name": "lpMinted",
                        "nameLocation": "2894:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "2886:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1879,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2885:18:13"
                  },
                  "scope": 2274,
                  "src": "2752:262:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3629
                  ],
                  "body": {
                    "id": 1920,
                    "nodeType": "Block",
                    "src": "3173:109:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1909,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1903,
                              "src": "3196:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 1908,
                            "name": "_beforeTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2255,
                            "src": "3184:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAccount_$3505_$returns$__$",
                              "typeString": "function (contract IAccount)"
                            }
                          },
                          "id": 1910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3184:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1911,
                        "nodeType": "ExpressionStatement",
                        "src": "3184:20:13"
                      },
                      {
                        "expression": {
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1912,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1906,
                            "src": "3217:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1915,
                                "name": "lpAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1900,
                                "src": "3256:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1916,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1903,
                                "src": "3266:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAccount_$3505",
                                  "typeString": "contract IAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IAccount_$3505",
                                  "typeString": "contract IAccount"
                                }
                              ],
                              "expression": {
                                "id": 1913,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1898,
                                "src": "3232:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$4070",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3238:17:13",
                              "memberName": "withdrawToAccount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3992,
                              "src": "3232:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IAccount_$3505_$returns$_t_uint256_$",
                                "typeString": "function (uint256,contract IAccount) external returns (uint256)"
                              }
                            },
                            "id": 1917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3232:42:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3217:57:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1919,
                        "nodeType": "ExpressionStatement",
                        "src": "3217:57:13"
                      }
                    ]
                  },
                  "functionSelector": "0ff199de",
                  "id": 1921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToAccount",
                  "nameLocation": "3031:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1898,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "3066:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "3059:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$4070",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 1897,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1896,
                            "name": "IVault",
                            "nameLocations": [
                              "3059:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4070,
                            "src": "3059:6:13"
                          },
                          "referencedDeclaration": 4070,
                          "src": "3059:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$4070",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1900,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "3090:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "3082:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1899,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3082:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1903,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3118:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "3109:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 1902,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1901,
                            "name": "IAccount",
                            "nameLocations": [
                              "3109:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "3109:8:13"
                          },
                          "referencedDeclaration": 3505,
                          "src": "3109:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3048:84:13"
                  },
                  "returnParameters": {
                    "id": 1907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1906,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "3159:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "3151:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3151:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3150:22:13"
                  },
                  "scope": 2274,
                  "src": "3022:260:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3640
                  ],
                  "body": {
                    "id": 1943,
                    "nodeType": "Block",
                    "src": "3417:102:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1933,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1927,
                              "src": "3440:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 1932,
                            "name": "_beforeTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2255,
                            "src": "3428:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAccount_$3505_$returns$__$",
                              "typeString": "function (contract IAccount)"
                            }
                          },
                          "id": 1934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3428:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1935,
                        "nodeType": "ExpressionStatement",
                        "src": "3428:20:13"
                      },
                      {
                        "expression": {
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1936,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "3461:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1939,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1927,
                                "src": "3503:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAccount_$3505",
                                  "typeString": "contract IAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAccount_$3505",
                                  "typeString": "contract IAccount"
                                }
                              ],
                              "expression": {
                                "id": 1937,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1924,
                                "src": "3476:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$4070",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3482:20:13",
                              "memberName": "withdrawAllToAccount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4000,
                              "src": "3476:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IAccount_$3505_$returns$_t_uint256_$",
                                "typeString": "function (contract IAccount) external returns (uint256)"
                              }
                            },
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3476:35:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3461:50:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1942,
                        "nodeType": "ExpressionStatement",
                        "src": "3461:50:13"
                      }
                    ]
                  },
                  "functionSelector": "4a86e1a6",
                  "id": 1944,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAllToAccount",
                  "nameLocation": "3299:20:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1924,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "3337:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1944,
                        "src": "3330:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$4070",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 1923,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1922,
                            "name": "IVault",
                            "nameLocations": [
                              "3330:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4070,
                            "src": "3330:6:13"
                          },
                          "referencedDeclaration": 4070,
                          "src": "3330:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$4070",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1927,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3362:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1944,
                        "src": "3353:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 1926,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1925,
                            "name": "IAccount",
                            "nameLocations": [
                              "3353:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "3353:8:13"
                          },
                          "referencedDeclaration": 3505,
                          "src": "3353:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3319:57:13"
                  },
                  "returnParameters": {
                    "id": 1931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1930,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "3403:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1944,
                        "src": "3395:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3395:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3394:22:13"
                  },
                  "scope": 2274,
                  "src": "3290:229:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3645
                  ],
                  "body": {
                    "id": 1990,
                    "nodeType": "Block",
                    "src": "3594:287:13",
                    "statements": [
                      {
                        "assignments": [
                          1952,
                          1954
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1952,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "3614:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1990,
                            "src": "3606:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1951,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3606:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1954,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "3629:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1990,
                            "src": "3621:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1953,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3621:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1964,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1957,
                              "name": "response",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "3666:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3690:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1958,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3690:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 1961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3699:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1960,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3699:7:13",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1962,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3689:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                                "typeString": "tuple(type(address),type(address))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                                "typeString": "tuple(type(address),type(address))"
                              }
                            ],
                            "expression": {
                              "id": 1955,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3641:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3645:6:13",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3641:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3641:77:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3605:113:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1965,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1952,
                              "src": "3735:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3752:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3744:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1966,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3744:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3744:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3735:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1971,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1954,
                              "src": "3758:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1974,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3778:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3770:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1972,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3770:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3770:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3758:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3735:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1980,
                        "nodeType": "IfStatement",
                        "src": "3731:84:13",
                        "trueBody": {
                          "id": 1979,
                          "nodeType": "Block",
                          "src": "3782:33:13",
                          "statements": [
                            {
                              "functionReturnParameters": 1950,
                              "id": 1978,
                              "nodeType": "Return",
                              "src": "3797:7:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1986,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1954,
                                  "src": "3863:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1985,
                                "name": "IStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3943,
                                "src": "3853:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IStrategy_$3943_$",
                                  "typeString": "type(contract IStrategy)"
                                }
                              },
                              "id": 1987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3853:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1982,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1952,
                                  "src": "3834:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1981,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4070,
                                "src": "3827:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$4070_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 1983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3827:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$4070",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 1984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3841:11:13",
                            "memberName": "addStrategy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4006,
                            "src": "3827:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStrategy_$3943_$returns$__$",
                              "typeString": "function (contract IStrategy) external"
                            }
                          },
                          "id": 1988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3827:46:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1989,
                        "nodeType": "ExpressionStatement",
                        "src": "3827:46:13"
                      }
                    ]
                  },
                  "functionSelector": "4b837649",
                  "id": 1991,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1949,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1948,
                        "name": "onlyFunctions",
                        "nameLocations": [
                          "3580:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2273,
                        "src": "3580:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3580:13:13"
                    }
                  ],
                  "name": "addStrategy",
                  "nameLocation": "3536:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1946,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "3561:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1991,
                        "src": "3548:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1945,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3548:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3547:23:13"
                  },
                  "returnParameters": {
                    "id": 1950,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3594:0:13"
                  },
                  "scope": 2274,
                  "src": "3527:354:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3650
                  ],
                  "body": {
                    "id": 2037,
                    "nodeType": "Block",
                    "src": "3959:290:13",
                    "statements": [
                      {
                        "assignments": [
                          1999,
                          2001
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1999,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "3979:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2037,
                            "src": "3971:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1998,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3971:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2001,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "3994:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2037,
                            "src": "3986:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2000,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3986:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2011,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2004,
                              "name": "response",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1993,
                              "src": "4031:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4055:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2005,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4055:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2008,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4064:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2007,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4064:7:13",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 2009,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4054:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                                "typeString": "tuple(type(address),type(address))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                                "typeString": "tuple(type(address),type(address))"
                              }
                            ],
                            "expression": {
                              "id": 2002,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4006:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4010:6:13",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4006:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4006:77:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3970:113:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2012,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1999,
                              "src": "4100:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4117:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4109:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2013,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4109:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4109:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4100:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2018,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2001,
                              "src": "4123:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4143:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4135:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2019,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4135:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4135:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4123:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4100:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2027,
                        "nodeType": "IfStatement",
                        "src": "4096:84:13",
                        "trueBody": {
                          "id": 2026,
                          "nodeType": "Block",
                          "src": "4147:33:13",
                          "statements": [
                            {
                              "functionReturnParameters": 1997,
                              "id": 2025,
                              "nodeType": "Return",
                              "src": "4162:7:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2033,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2001,
                                  "src": "4231:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2032,
                                "name": "IStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3943,
                                "src": "4221:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IStrategy_$3943_$",
                                  "typeString": "type(contract IStrategy)"
                                }
                              },
                              "id": 2034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4221:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2029,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1999,
                                  "src": "4199:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2028,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4070,
                                "src": "4192:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$4070_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 2030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4192:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$4070",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4206:14:13",
                            "memberName": "removeStrategy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4012,
                            "src": "4192:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStrategy_$3943_$returns$__$",
                              "typeString": "function (contract IStrategy) external"
                            }
                          },
                          "id": 2035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4192:49:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2036,
                        "nodeType": "ExpressionStatement",
                        "src": "4192:49:13"
                      }
                    ]
                  },
                  "functionSelector": "47a471a1",
                  "id": 2038,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1996,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1995,
                        "name": "onlyFunctions",
                        "nameLocations": [
                          "3945:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2273,
                        "src": "3945:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3945:13:13"
                    }
                  ],
                  "name": "removeStrategy",
                  "nameLocation": "3898:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1993,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "3926:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "3913:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1992,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3913:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3912:23:13"
                  },
                  "returnParameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3959:0:13"
                  },
                  "scope": 2274,
                  "src": "3889:360:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3655
                  ],
                  "body": {
                    "id": 2068,
                    "nodeType": "Block",
                    "src": "4325:196:13",
                    "statements": [
                      {
                        "assignments": [
                          2046,
                          2049
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2046,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "4345:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2068,
                            "src": "4337:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4337:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2049,
                            "mutability": "mutable",
                            "name": "allocations",
                            "nameLocation": "4369:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2068,
                            "src": "4352:28:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2047,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4352:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2048,
                              "nodeType": "ArrayTypeName",
                              "src": "4352:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2060,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2052,
                              "name": "response",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "4409:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4433:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2053,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4433:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4442:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2055,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4442:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2057,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4442:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "type(uint256[] memory)"
                                  }
                                }
                              ],
                              "id": 2058,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4432:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$",
                                "typeString": "tuple(type(address),type(uint256[] memory))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$",
                                "typeString": "tuple(type(address),type(uint256[] memory))"
                              }
                            ],
                            "expression": {
                              "id": 2050,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4384:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4388:6:13",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4384:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4384:79:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(address payable,uint256[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4336:127:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2065,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2049,
                              "src": "4501:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2062,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2046,
                                  "src": "4483:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2061,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4070,
                                "src": "4476:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$4070_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4476:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$4070",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4490:10:13",
                            "memberName": "reallocate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4018,
                            "src": "4476:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (uint256[] memory) external"
                            }
                          },
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4476:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2067,
                        "nodeType": "ExpressionStatement",
                        "src": "4476:37:13"
                      }
                    ]
                  },
                  "functionSelector": "e0ab4650",
                  "id": 2069,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2043,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2042,
                        "name": "onlyFunctions",
                        "nameLocations": [
                          "4311:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2273,
                        "src": "4311:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4311:13:13"
                    }
                  ],
                  "name": "reallocation",
                  "nameLocation": "4266:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2040,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "4292:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2069,
                        "src": "4279:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2039,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4279:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4278:23:13"
                  },
                  "returnParameters": {
                    "id": 2044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4325:0:13"
                  },
                  "scope": 2274,
                  "src": "4257:264:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3661
                  ],
                  "body": {
                    "id": 2106,
                    "nodeType": "Block",
                    "src": "4580:248:13",
                    "statements": [
                      {
                        "assignments": [
                          2076
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2076,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "4599:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2106,
                            "src": "4591:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2075,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4591:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2079,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2077,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "4608:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4608:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4591:29:13"
                      },
                      {
                        "assignments": [
                          2082
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2082,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "4642:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2106,
                            "src": "4633:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAccount_$3505",
                              "typeString": "contract IAccount"
                            },
                            "typeName": {
                              "id": 2081,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2080,
                                "name": "IAccount",
                                "nameLocations": [
                                  "4633:8:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3505,
                                "src": "4633:8:13"
                              },
                              "referencedDeclaration": 3505,
                              "src": "4633:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2091,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2089,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "4724:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2084,
                                      "name": "_provider",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1721,
                                      "src": "4668:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                                        "typeString": "contract IAddressesProvider"
                                      }
                                    },
                                    "id": 2085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4678:17:13",
                                    "memberName": "getAccountFactory",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3547,
                                    "src": "4668:27:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 2086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4668:29:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2083,
                                "name": "IAccountFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3530,
                                "src": "4652:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAccountFactory_$3530_$",
                                  "typeString": "type(contract IAccountFactory)"
                                }
                              },
                              "id": 2087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4652:46:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccountFactory_$3530",
                                "typeString": "contract IAccountFactory"
                              }
                            },
                            "id": 2088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4713:10:13",
                            "memberName": "getAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3529,
                            "src": "4652:71:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_IAccount_$3505_$",
                              "typeString": "function (address) view external returns (contract IAccount)"
                            }
                          },
                          "id": 2090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4652:79:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4633:98:13"
                      },
                      {
                        "expression": {
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2092,
                              "name": "_approvals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1727,
                              "src": "4744:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$",
                                "typeString": "mapping(contract IAccount => enum Enums.ApprovalFlag)"
                              }
                            },
                            "id": 2094,
                            "indexExpression": {
                              "id": 2093,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "4755:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4744:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2095,
                            "name": "flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2072,
                            "src": "4766:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            }
                          },
                          "src": "4744:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "id": 2097,
                        "nodeType": "ExpressionStatement",
                        "src": "4744:26:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2101,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2082,
                                  "src": "4805:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                ],
                                "id": 2100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4797:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2099,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4797:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4797:16:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2103,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "4815:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            ],
                            "id": 2098,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3595,
                            "src": "4788:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_ApprovalFlag_$4101_$returns$__$",
                              "typeString": "function (address,enum Enums.ApprovalFlag)"
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4788:32:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2105,
                        "nodeType": "EmitStatement",
                        "src": "4783:37:13"
                      }
                    ]
                  },
                  "functionSelector": "fca0025d",
                  "id": 2107,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4538:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2072,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "4565:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2107,
                        "src": "4546:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 2071,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2070,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "4546:5:13",
                              "4552:12:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "4546:18:13"
                          },
                          "referencedDeclaration": 4101,
                          "src": "4546:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4545:25:13"
                  },
                  "returnParameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4580:0:13"
                  },
                  "scope": 2274,
                  "src": "4529:299:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3670
                  ],
                  "body": {
                    "id": 2122,
                    "nodeType": "Block",
                    "src": "4937:45:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2116,
                            "name": "flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "4948:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2117,
                              "name": "_approvals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1727,
                              "src": "4955:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$",
                                "typeString": "mapping(contract IAccount => enum Enums.ApprovalFlag)"
                              }
                            },
                            "id": 2119,
                            "indexExpression": {
                              "id": 2118,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2110,
                              "src": "4966:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4955:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            }
                          },
                          "src": "4948:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "id": 2121,
                        "nodeType": "ExpressionStatement",
                        "src": "4948:26:13"
                      }
                    ]
                  },
                  "functionSelector": "3e5beab9",
                  "id": 2123,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "4845:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2110,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4874:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "4865:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 2109,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2108,
                            "name": "IAccount",
                            "nameLocations": [
                              "4865:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "4865:8:13"
                          },
                          "referencedDeclaration": 3505,
                          "src": "4865:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4854:34:13"
                  },
                  "returnParameters": {
                    "id": 2115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2114,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "4931:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "4912:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 2113,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2112,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "4912:5:13",
                              "4918:12:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "4912:18:13"
                          },
                          "referencedDeclaration": 4101,
                          "src": "4912:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4911:25:13"
                  },
                  "scope": 2274,
                  "src": "4836:146:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3676
                  ],
                  "body": {
                    "id": 2133,
                    "nodeType": "Block",
                    "src": "5053:39:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2129,
                            "name": "feeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2127,
                            "src": "5064:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1556",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2130,
                            "name": "_feeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1718,
                            "src": "5075:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1556",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "5064:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1556",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2132,
                        "nodeType": "ExpressionStatement",
                        "src": "5064:20:13"
                      }
                    ]
                  },
                  "functionSelector": "ca709a25",
                  "id": 2134,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeToken",
                  "nameLocation": "4999:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5010:2:13"
                  },
                  "returnParameters": {
                    "id": 2128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2127,
                        "mutability": "mutable",
                        "name": "feeToken",
                        "nameLocation": "5043:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2134,
                        "src": "5036:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1556",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2126,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2125,
                            "name": "IERC20",
                            "nameLocations": [
                              "5036:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1556,
                            "src": "5036:6:13"
                          },
                          "referencedDeclaration": 1556,
                          "src": "5036:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1556",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5035:17:13"
                  },
                  "scope": 2274,
                  "src": "4990:102:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3685
                  ],
                  "body": {
                    "id": 2209,
                    "nodeType": "Block",
                    "src": "5205:870:13",
                    "statements": [
                      {
                        "assignments": [
                          2147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2147,
                            "mutability": "mutable",
                            "name": "accountFlag",
                            "nameLocation": "5235:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2209,
                            "src": "5216:30:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            },
                            "typeName": {
                              "id": 2146,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2145,
                                "name": "Enums.ApprovalFlag",
                                "nameLocations": [
                                  "5216:5:13",
                                  "5222:12:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4101,
                                "src": "5216:18:13"
                              },
                              "referencedDeclaration": 4101,
                              "src": "5216:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2151,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2148,
                            "name": "_approvals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1727,
                            "src": "5249:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$",
                              "typeString": "mapping(contract IAccount => enum Enums.ApprovalFlag)"
                            }
                          },
                          "id": 2150,
                          "indexExpression": {
                            "id": 2149,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2137,
                            "src": "5260:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAccount_$3505",
                              "typeString": "contract IAccount"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5249:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5216:52:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          },
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2152,
                            "name": "accountFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2147,
                            "src": "5333:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2153,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4106,
                                "src": "5348:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 2154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5354:12:13",
                              "memberName": "ApprovalFlag",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4101,
                              "src": "5348:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                "typeString": "type(enum Enums.ApprovalFlag)"
                              }
                            },
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5367:4:13",
                            "memberName": "None",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4097,
                            "src": "5348:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            }
                          },
                          "src": "5333:38:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2162,
                        "nodeType": "IfStatement",
                        "src": "5329:98:13",
                        "trueBody": {
                          "id": 2161,
                          "nodeType": "Block",
                          "src": "5373:54:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "55736572206e6f7420617070726f766564",
                                    "id": 2158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5395:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ed2f2fab5396dfeed9b474c41cea0ea1a9b61e1563de3f6ca8beae276160c8c4",
                                      "typeString": "literal_string \"User not approved\""
                                    },
                                    "value": "User not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_ed2f2fab5396dfeed9b474c41cea0ea1a9b61e1563de3f6ca8beae276160c8c4",
                                      "typeString": "literal_string \"User not approved\""
                                    }
                                  ],
                                  "id": 2157,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "5388:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 2159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5388:27:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2160,
                              "nodeType": "ExpressionStatement",
                              "src": "5388:27:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              },
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2163,
                                "name": "flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2140,
                                "src": "5530:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2164,
                                    "name": "Enums",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4106,
                                    "src": "5538:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                      "typeString": "type(library Enums)"
                                    }
                                  },
                                  "id": 2165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5544:12:13",
                                  "memberName": "ApprovalFlag",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4101,
                                  "src": "5538:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                    "typeString": "type(enum Enums.ApprovalFlag)"
                                  }
                                },
                                "id": 2166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5557:7:13",
                                "memberName": "Deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4098,
                                "src": "5538:26:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "src": "5530:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              },
                              "id": 2172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2168,
                                "name": "accountFlag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2147,
                                "src": "5581:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2169,
                                    "name": "Enums",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4106,
                                    "src": "5596:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                      "typeString": "type(library Enums)"
                                    }
                                  },
                                  "id": 2170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5602:12:13",
                                  "memberName": "ApprovalFlag",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4101,
                                  "src": "5596:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                    "typeString": "type(enum Enums.ApprovalFlag)"
                                  }
                                },
                                "id": 2171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5615:7:13",
                                "memberName": "Deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4098,
                                "src": "5596:26:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "src": "5581:41:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5530:92:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            },
                            "id": 2178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2174,
                              "name": "accountFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2147,
                              "src": "5639:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2175,
                                  "name": "Enums",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4106,
                                  "src": "5654:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                    "typeString": "type(library Enums)"
                                  }
                                },
                                "id": 2176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5660:12:13",
                                "memberName": "ApprovalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4101,
                                "src": "5654:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                  "typeString": "type(enum Enums.ApprovalFlag)"
                                }
                              },
                              "id": 2177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5673:3:13",
                              "memberName": "All",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4100,
                              "src": "5654:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            },
                            "src": "5639:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5530:146:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2185,
                        "nodeType": "IfStatement",
                        "src": "5512:233:13",
                        "trueBody": {
                          "id": 2184,
                          "nodeType": "Block",
                          "src": "5688:57:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4465706f736974206e6f7420617070726f766564",
                                    "id": 2181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5710:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_17b7aa222ff84b33ad57e66206e712039bb4dd443f40ab8549d66b539db2548a",
                                      "typeString": "literal_string \"Deposit not approved\""
                                    },
                                    "value": "Deposit not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_17b7aa222ff84b33ad57e66206e712039bb4dd443f40ab8549d66b539db2548a",
                                      "typeString": "literal_string \"Deposit not approved\""
                                    }
                                  ],
                                  "id": 2180,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "5703:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 2182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5703:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2183,
                              "nodeType": "ExpressionStatement",
                              "src": "5703:30:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              },
                              "id": 2190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2186,
                                "name": "flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2140,
                                "src": "5850:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2187,
                                    "name": "Enums",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4106,
                                    "src": "5858:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                      "typeString": "type(library Enums)"
                                    }
                                  },
                                  "id": 2188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5864:12:13",
                                  "memberName": "ApprovalFlag",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4101,
                                  "src": "5858:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                    "typeString": "type(enum Enums.ApprovalFlag)"
                                  }
                                },
                                "id": 2189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5877:8:13",
                                "memberName": "Withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4099,
                                "src": "5858:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "src": "5850:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              },
                              "id": 2195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2191,
                                "name": "accountFlag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2147,
                                "src": "5902:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2192,
                                    "name": "Enums",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4106,
                                    "src": "5917:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                      "typeString": "type(library Enums)"
                                    }
                                  },
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5923:12:13",
                                  "memberName": "ApprovalFlag",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4101,
                                  "src": "5917:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                    "typeString": "type(enum Enums.ApprovalFlag)"
                                  }
                                },
                                "id": 2194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5936:8:13",
                                "memberName": "Withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4099,
                                "src": "5917:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                  "typeString": "enum Enums.ApprovalFlag"
                                }
                              },
                              "src": "5902:42:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5850:94:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                              "typeString": "enum Enums.ApprovalFlag"
                            },
                            "id": 2201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2197,
                              "name": "accountFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2147,
                              "src": "5961:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2198,
                                  "name": "Enums",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4106,
                                  "src": "5976:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                    "typeString": "type(library Enums)"
                                  }
                                },
                                "id": 2199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5982:12:13",
                                "memberName": "ApprovalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4101,
                                "src": "5976:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                  "typeString": "type(enum Enums.ApprovalFlag)"
                                }
                              },
                              "id": 2200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5995:3:13",
                              "memberName": "All",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4100,
                              "src": "5976:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            },
                            "src": "5961:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5850:148:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2208,
                        "nodeType": "IfStatement",
                        "src": "5832:236:13",
                        "trueBody": {
                          "id": 2207,
                          "nodeType": "Block",
                          "src": "6010:58:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "5769746864726177206e6f7420617070726f766564",
                                    "id": 2204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6032:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_adafdf07c61d944b56ae9b1922c31113dcb0ebbd1aa104048795fd30e437cf04",
                                      "typeString": "literal_string \"Withdraw not approved\""
                                    },
                                    "value": "Withdraw not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_adafdf07c61d944b56ae9b1922c31113dcb0ebbd1aa104048795fd30e437cf04",
                                      "typeString": "literal_string \"Withdraw not approved\""
                                    }
                                  ],
                                  "id": 2203,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "6025:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 2205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6025:31:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2206,
                              "nodeType": "ExpressionStatement",
                              "src": "6025:31:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "f887cf00",
                  "id": 2210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkApproval",
                  "nameLocation": "5109:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2137,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "5142:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2210,
                        "src": "5133:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 2136,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2135,
                            "name": "IAccount",
                            "nameLocations": [
                              "5133:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "5133:8:13"
                          },
                          "referencedDeclaration": 3505,
                          "src": "5133:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2140,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "5179:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2210,
                        "src": "5160:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 2139,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2138,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "5160:5:13",
                              "5166:12:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "5160:18:13"
                          },
                          "referencedDeclaration": 4101,
                          "src": "5160:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5122:68:13"
                  },
                  "returnParameters": {
                    "id": 2142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5205:0:13"
                  },
                  "scope": 2274,
                  "src": "5100:975:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2254,
                    "nodeType": "Block",
                    "src": "6131:345:13",
                    "statements": [
                      {
                        "assignments": [
                          2217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2217,
                            "mutability": "mutable",
                            "name": "hasFunds",
                            "nameLocation": "6147:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2254,
                            "src": "6142:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2216,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6142:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2227,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2222,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2213,
                                    "src": "6186:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAccount_$3505",
                                      "typeString": "contract IAccount"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IAccount_$3505",
                                      "typeString": "contract IAccount"
                                    }
                                  ],
                                  "id": 2221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6178:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2220,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6178:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6178:16:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2218,
                                "name": "_feeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1718,
                                "src": "6158:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1556",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6168:9:13",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1513,
                              "src": "6158:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6158:37:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2225,
                            "name": "_feePerTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "6199:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6158:52:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6142:68:13"
                      },
                      {
                        "condition": {
                          "id": 2228,
                          "name": "hasFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "6227:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2241,
                        "nodeType": "IfStatement",
                        "src": "6223:175:13",
                        "trueBody": {
                          "id": 2240,
                          "nodeType": "Block",
                          "src": "6237:161:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2234,
                                        "name": "account",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2213,
                                        "src": "6301:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IAccount_$3505",
                                          "typeString": "contract IAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IAccount_$3505",
                                          "typeString": "contract IAccount"
                                        }
                                      ],
                                      "id": 2233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6293:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2232,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6293:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6293:16:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2236,
                                    "name": "_feeCollector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1715,
                                    "src": "6328:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2237,
                                    "name": "_feePerTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1713,
                                    "src": "6360:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2229,
                                    "name": "_feeToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1718,
                                    "src": "6252:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1556",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6262:12:13",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1555,
                                  "src": "6252:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6252:134:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2239,
                              "nodeType": "ExpressionStatement",
                              "src": "6252:134:13"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2245,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2213,
                                  "src": "6434:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                ],
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6426:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2243,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6426:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6426:16:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2249,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6452:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Agent_$2274",
                                    "typeString": "contract Agent"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Agent_$2274",
                                    "typeString": "contract Agent"
                                  }
                                ],
                                "id": 2248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6444:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2247,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6444:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6444:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2251,
                              "name": "hasFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "6459:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2242,
                            "name": "BeforeTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3603,
                            "src": "6415:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 2252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6415:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2253,
                        "nodeType": "EmitStatement",
                        "src": "6410:58:13"
                      }
                    ]
                  },
                  "id": 2255,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeTask",
                  "nameLocation": "6092:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2213,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6113:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2255,
                        "src": "6104:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 2212,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2211,
                            "name": "IAccount",
                            "nameLocations": [
                              "6104:8:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "6104:8:13"
                          },
                          "referencedDeclaration": 3505,
                          "src": "6104:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6103:18:13"
                  },
                  "returnParameters": {
                    "id": 2215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6131:0:13"
                  },
                  "scope": 2274,
                  "src": "6083:393:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2272,
                    "nodeType": "Block",
                    "src": "6509:142:13",
                    "statements": [
                      {
                        "assignments": [
                          2258
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2258,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "6528:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2272,
                            "src": "6520:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2257,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6520:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2261,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2259,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "6537:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6537:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6520:29:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2263,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2258,
                                "src": "6568:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2264,
                                    "name": "_provider",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1721,
                                    "src": "6578:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAddressesProvider_$3553",
                                      "typeString": "contract IAddressesProvider"
                                    }
                                  },
                                  "id": 2265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6588:22:13",
                                  "memberName": "getAfterYieldFunctions",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3542,
                                  "src": "6578:32:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 2266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6578:34:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6568:44:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792066756e6374696f6e73",
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6614:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad731618f4e5b30136a4824b2ad53c6ad11c0ba59c31ea62e714421fd1d90bc6",
                                "typeString": "literal_string \"Only functions\""
                              },
                              "value": "Only functions"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad731618f4e5b30136a4824b2ad53c6ad11c0ba59c31ea62e714421fd1d90bc6",
                                "typeString": "literal_string \"Only functions\""
                              }
                            ],
                            "id": 2262,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6560:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6560:71:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2270,
                        "nodeType": "ExpressionStatement",
                        "src": "6560:71:13"
                      },
                      {
                        "id": 2271,
                        "nodeType": "PlaceholderStatement",
                        "src": "6642:1:13"
                      }
                    ]
                  },
                  "id": 2273,
                  "name": "onlyFunctions",
                  "nameLocation": "6493:13:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2256,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6506:2:13"
                  },
                  "src": "6484:167:13",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2275,
              "src": "789:5865:13",
              "usedErrors": [
                1207,
                1212
              ],
              "usedEvents": [
                1218,
                3595,
                3603
              ]
            }
          ],
          "src": "40:6616:13"
        },
        "id": 13
      },
      "contracts/VaultUpgradeable.sol": {
        "ast": {
          "absolutePath": "contracts/VaultUpgradeable.sol",
          "exportedSymbols": {
            "Consts": [
              4091
            ],
            "ERC20Upgradeable": [
              1147
            ],
            "Enums": [
              4106
            ],
            "IAccount": [
              3505
            ],
            "IAgent": [
              3686
            ],
            "IERC20": [
              1556
            ],
            "IStrategy": [
              3943
            ],
            "IVault": [
              4070
            ],
            "OwnableUpgradeable": [
              262
            ],
            "ReentrancyGuard": [
              1681
            ],
            "VaultUpgradeable": [
              3433
            ]
          },
          "id": 3434,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2276,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:14"
            },
            {
              "absolutePath": "contracts/libs/Enums.sol",
              "file": "./libs/Enums.sol",
              "id": 2278,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 4107,
              "src": "68:39:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2277,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "76:5:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Consts.sol",
              "file": "./libs/Consts.sol",
              "id": 2280,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 4092,
              "src": "109:41:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2279,
                    "name": "Consts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4091,
                    "src": "117:6:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IVault.sol",
              "file": "./interfaces/IVault.sol",
              "id": 2282,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 4071,
              "src": "152:47:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2281,
                    "name": "IVault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4070,
                    "src": "160:6:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAccount.sol",
              "file": "./interfaces/IAccount.sol",
              "id": 2284,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 3506,
              "src": "201:51:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2283,
                    "name": "IAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "209:8:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAgent.sol",
              "file": "./interfaces/IAgent.sol",
              "id": 2286,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 3687,
              "src": "254:47:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2285,
                    "name": "IAgent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3686,
                    "src": "262:6:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStrategy.sol",
              "file": "./interfaces/IStrategy.sol",
              "id": 2288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 3944,
              "src": "303:53:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2287,
                    "name": "IStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3943,
                    "src": "311:9:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 1557,
              "src": "358:70:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2289,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "366:6:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 2292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 1682,
              "src": "430:82:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2291,
                    "name": "ReentrancyGuard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1681,
                    "src": "438:15:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "id": 2294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 263,
              "src": "514:101:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2293,
                    "name": "OwnableUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 262,
                    "src": "522:18:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "id": 2296,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3434,
              "sourceUnit": 1148,
              "src": "617:102:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2295,
                    "name": "ERC20Upgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1147,
                    "src": "625:16:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2297,
                    "name": "IVault",
                    "nameLocations": [
                      "757:6:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4070,
                    "src": "757:6:14"
                  },
                  "id": 2298,
                  "nodeType": "InheritanceSpecifier",
                  "src": "757:6:14"
                },
                {
                  "baseName": {
                    "id": 2299,
                    "name": "OwnableUpgradeable",
                    "nameLocations": [
                      "770:18:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 262,
                    "src": "770:18:14"
                  },
                  "id": 2300,
                  "nodeType": "InheritanceSpecifier",
                  "src": "770:18:14"
                },
                {
                  "baseName": {
                    "id": 2301,
                    "name": "ERC20Upgradeable",
                    "nameLocations": [
                      "795:16:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1147,
                    "src": "795:16:14"
                  },
                  "id": 2302,
                  "nodeType": "InheritanceSpecifier",
                  "src": "795:16:14"
                },
                {
                  "baseName": {
                    "id": 2303,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "818:15:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1681,
                    "src": "818:15:14"
                  },
                  "id": 2304,
                  "nodeType": "InheritanceSpecifier",
                  "src": "818:15:14"
                }
              ],
              "canonicalName": "VaultUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3433,
              "linearizedBaseContracts": [
                3433,
                1681,
                1147,
                1383,
                1582,
                262,
                4070,
                1556,
                1193,
                530
              ],
              "name": "VaultUpgradeable",
              "nameLocation": "732:16:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "_allowedAsset",
                  "nameLocation": "859:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "842:30:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2310,
                  "mutability": "mutable",
                  "name": "_strategies",
                  "nameLocation": "900:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "879:32:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2308,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2307,
                        "name": "IStrategy",
                        "nameLocations": [
                          "879:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3943,
                        "src": "879:9:14"
                      },
                      "referencedDeclaration": 3943,
                      "src": "879:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 2309,
                    "nodeType": "ArrayTypeName",
                    "src": "879:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "_allocations",
                  "nameLocation": "957:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "918:51:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                    "typeString": "mapping(contract IStrategy => uint256)"
                  },
                  "typeName": {
                    "id": 2314,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2312,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2311,
                        "name": "IStrategy",
                        "nameLocations": [
                          "926:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3943,
                        "src": "926:9:14"
                      },
                      "referencedDeclaration": 3943,
                      "src": "926:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "918:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                      "typeString": "mapping(contract IStrategy => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2313,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "939:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "992:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "976:22:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAgent_$3686",
                    "typeString": "contract IAgent"
                  },
                  "typeName": {
                    "id": 2317,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2316,
                      "name": "IAgent",
                      "nameLocations": [
                        "976:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3686,
                      "src": "976:6:14"
                    },
                    "referencedDeclaration": 3686,
                    "src": "976:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAgent_$3686",
                      "typeString": "contract IAgent"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "_lastHarvest",
                  "nameLocation": "1022:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "1005:29:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2354,
                    "nodeType": "Block",
                    "src": "1212:152:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2337,
                                  "name": "agent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2329,
                                  "src": "1246:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAgent_$3686",
                                    "typeString": "contract IAgent"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAgent_$3686",
                                    "typeString": "contract IAgent"
                                  }
                                ],
                                "id": 2336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1238:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2335,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1238:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1238:14:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2334,
                            "name": "__Ownable_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "1223:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:30:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2340,
                        "nodeType": "ExpressionStatement",
                        "src": "1223:30:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2342,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2322,
                              "src": "1277:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2343,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "1283:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2341,
                            "name": "__ERC20_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "1264:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 2344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1264:26:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2345,
                        "nodeType": "ExpressionStatement",
                        "src": "1264:26:14"
                      },
                      {
                        "expression": {
                          "id": 2348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2346,
                            "name": "_allowedAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2306,
                            "src": "1303:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2347,
                            "name": "allowedAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2326,
                            "src": "1319:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1303:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2349,
                        "nodeType": "ExpressionStatement",
                        "src": "1303:28:14"
                      },
                      {
                        "expression": {
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2350,
                            "name": "_agent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2318,
                            "src": "1342:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgent_$3686",
                              "typeString": "contract IAgent"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2351,
                            "name": "agent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2329,
                            "src": "1351:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgent_$3686",
                              "typeString": "contract IAgent"
                            }
                          },
                          "src": "1342:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAgent_$3686",
                            "typeString": "contract IAgent"
                          }
                        },
                        "id": 2353,
                        "nodeType": "ExpressionStatement",
                        "src": "1342:14:14"
                      }
                    ]
                  },
                  "id": 2355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2332,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2331,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1195:16:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 425,
                        "src": "1195:16:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1195:16:14"
                    }
                  ],
                  "name": "__Vault_init",
                  "nameLocation": "1052:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2322,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "1089:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1075:18:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2324,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "1118:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1104:20:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2326,
                        "mutability": "mutable",
                        "name": "allowedAsset",
                        "nameLocation": "1143:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1135:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1135:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2329,
                        "mutability": "mutable",
                        "name": "agent",
                        "nameLocation": "1173:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1166:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgent_$3686",
                          "typeString": "contract IAgent"
                        },
                        "typeName": {
                          "id": 2328,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2327,
                            "name": "IAgent",
                            "nameLocations": [
                              "1166:6:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3686,
                            "src": "1166:6:14"
                          },
                          "referencedDeclaration": 3686,
                          "src": "1166:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAgent_$3686",
                            "typeString": "contract IAgent"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1064:121:14"
                  },
                  "returnParameters": {
                    "id": 2333,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1212:0:14"
                  },
                  "scope": 3433,
                  "src": "1043:321:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    3960
                  ],
                  "body": {
                    "id": 2426,
                    "nodeType": "Block",
                    "src": "1476:516:14",
                    "statements": [
                      {
                        "assignments": [
                          2365
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2365,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "1495:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2426,
                            "src": "1487:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2364,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1487:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2368,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2366,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "1504:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1504:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1487:29:14"
                      },
                      {
                        "assignments": [
                          2370
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2370,
                            "mutability": "mutable",
                            "name": "balanceBefore",
                            "nameLocation": "1537:13:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2426,
                            "src": "1529:21:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2369,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1529:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2373,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2371,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "1553:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1553:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1529:36:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2378,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2365,
                              "src": "1613:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2381,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1629:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                    "typeString": "contract VaultUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                    "typeString": "contract VaultUpgradeable"
                                  }
                                ],
                                "id": 2380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1621:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2379,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1621:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1621:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2383,
                              "name": "amountScaled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2357,
                              "src": "1636:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2375,
                                  "name": "_allowedAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2306,
                                  "src": "1585:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2374,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1556,
                                "src": "1578:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1556_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1578:21:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1556",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1600:12:14",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1555,
                            "src": "1578:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:71:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2385,
                        "nodeType": "ExpressionStatement",
                        "src": "1578:71:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2386,
                            "name": "earn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "1662:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1662:6:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2388,
                        "nodeType": "ExpressionStatement",
                        "src": "1662:6:14"
                      },
                      {
                        "assignments": [
                          2390
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2390,
                            "mutability": "mutable",
                            "name": "balanceAfter",
                            "nameLocation": "1689:12:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2426,
                            "src": "1681:20:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2389,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1681:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2393,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2391,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "1704:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1681:35:14"
                      },
                      {
                        "expression": {
                          "id": 2398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2394,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "1729:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2395,
                              "name": "balanceAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2390,
                              "src": "1744:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2396,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2370,
                              "src": "1759:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1744:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1729:43:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2399,
                        "nodeType": "ExpressionStatement",
                        "src": "1729:43:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2400,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "1789:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1789:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1806:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1789:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2419,
                          "nodeType": "Block",
                          "src": "1865:84:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2409,
                                  "name": "lpMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "1880:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2413,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2410,
                                          "name": "amountScaled",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2357,
                                          "src": "1892:12:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 2411,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 683,
                                            "src": "1907:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 2412,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1907:13:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1892:28:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2414,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1891:30:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 2415,
                                    "name": "balanceBefore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2370,
                                    "src": "1924:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1891:46:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1880:57:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2418,
                              "nodeType": "ExpressionStatement",
                              "src": "1880:57:14"
                            }
                          ]
                        },
                        "id": 2420,
                        "nodeType": "IfStatement",
                        "src": "1785:164:14",
                        "trueBody": {
                          "id": 2408,
                          "nodeType": "Block",
                          "src": "1809:50:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2404,
                                  "name": "lpMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "1824:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2405,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2357,
                                  "src": "1835:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1824:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2407,
                              "nodeType": "ExpressionStatement",
                              "src": "1824:23:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2422,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2365,
                              "src": "1967:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2423,
                              "name": "lpMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2362,
                              "src": "1975:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2421,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "1961:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1961:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2425,
                        "nodeType": "ExpressionStatement",
                        "src": "1961:23:14"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 2427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2360,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2359,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1436:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1645,
                        "src": "1436:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1436:12:14"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1381:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2357,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "1407:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2427,
                        "src": "1399:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1399:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1388:38:14"
                  },
                  "returnParameters": {
                    "id": 2363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2362,
                        "mutability": "mutable",
                        "name": "lpMinted",
                        "nameLocation": "1466:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2427,
                        "src": "1458:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1458:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1457:18:14"
                  },
                  "scope": 3433,
                  "src": "1372:620:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2510,
                    "nodeType": "Block",
                    "src": "2023:640:14",
                    "statements": [
                      {
                        "assignments": [
                          2431
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2431,
                            "mutability": "mutable",
                            "name": "available",
                            "nameLocation": "2042:9:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2510,
                            "src": "2034:17:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2430,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2034:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2434,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2432,
                            "name": "getAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3367,
                            "src": "2054:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2054:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2034:34:14"
                      },
                      {
                        "body": {
                          "id": 2508,
                          "nodeType": "Block",
                          "src": "2130:526:14",
                          "statements": [
                            {
                              "assignments": [
                                2448
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2448,
                                  "mutability": "mutable",
                                  "name": "strategy",
                                  "nameLocation": "2155:8:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2508,
                                  "src": "2145:18:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  },
                                  "typeName": {
                                    "id": 2447,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2446,
                                      "name": "IStrategy",
                                      "nameLocations": [
                                        "2145:9:14"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3943,
                                      "src": "2145:9:14"
                                    },
                                    "referencedDeclaration": 3943,
                                    "src": "2145:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2452,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2449,
                                  "name": "_strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "2166:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 2451,
                                "indexExpression": {
                                  "id": 2450,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2436,
                                  "src": "2178:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2166:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$3943",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2145:35:14"
                            },
                            {
                              "assignments": [
                                2454
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2454,
                                  "mutability": "mutable",
                                  "name": "allocation",
                                  "nameLocation": "2203:10:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2508,
                                  "src": "2195:18:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2453,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2195:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2458,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2455,
                                  "name": "_allocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2315,
                                  "src": "2216:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                                    "typeString": "mapping(contract IStrategy => uint256)"
                                  }
                                },
                                "id": 2457,
                                "indexExpression": {
                                  "id": 2456,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2448,
                                  "src": "2229:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2216:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2195:43:14"
                            },
                            {
                              "assignments": [
                                2460
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2460,
                                  "mutability": "mutable",
                                  "name": "share",
                                  "nameLocation": "2263:5:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2508,
                                  "src": "2255:13:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2459,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2255:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2468,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2461,
                                        "name": "available",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2431,
                                        "src": "2272:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2462,
                                        "name": "allocation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2454,
                                        "src": "2284:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2272:22:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2464,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2271:24:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2465,
                                    "name": "Consts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4091,
                                    "src": "2315:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                      "typeString": "type(library Consts)"
                                    }
                                  },
                                  "id": 2466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2322:23:14",
                                  "memberName": "STRATEGY_ALLOCATION_MAX",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4090,
                                  "src": "2315:30:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2271:74:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2255:90:14"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2469,
                                  "name": "share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2460,
                                  "src": "2366:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2375:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2366:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2473,
                              "nodeType": "IfStatement",
                              "src": "2362:24:14",
                              "trueBody": {
                                "id": 2472,
                                "nodeType": "Continue",
                                "src": "2378:8:14"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2474,
                                  "name": "_allowedAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2306,
                                  "src": "2407:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2475,
                                    "name": "Consts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4091,
                                    "src": "2424:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                      "typeString": "type(library Consts)"
                                    }
                                  },
                                  "id": 2476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2431:3:14",
                                  "memberName": "ETH",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4078,
                                  "src": "2424:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2407:27:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2501,
                                "nodeType": "Block",
                                "src": "2519:91:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 2496,
                                              "name": "strategy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2448,
                                              "src": "2577:8:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                                "typeString": "contract IStrategy"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                                "typeString": "contract IStrategy"
                                              }
                                            ],
                                            "id": 2495,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2569:7:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2494,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2569:7:14",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2497,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2569:17:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2498,
                                          "name": "share",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2460,
                                          "src": "2588:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2491,
                                              "name": "_allowedAsset",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2306,
                                              "src": "2545:13:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2490,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1556,
                                            "src": "2538:6:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1556_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2492,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2538:21:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1556",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2493,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2560:8:14",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1523,
                                        "src": "2538:30:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 2499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2538:56:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2500,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2538:56:14"
                                  }
                                ]
                              },
                              "id": 2502,
                              "nodeType": "IfStatement",
                              "src": "2403:207:14",
                              "trueBody": {
                                "id": 2489,
                                "nodeType": "Block",
                                "src": "2436:77:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2486,
                                          "name": "share",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2460,
                                          "src": "2491:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 2482,
                                                  "name": "strategy",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2448,
                                                  "src": "2471:8:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                                    "typeString": "contract IStrategy"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                                    "typeString": "contract IStrategy"
                                                  }
                                                ],
                                                "id": 2481,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2463:7:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 2480,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "2463:7:14",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2483,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2463:17:14",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2479,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2455:8:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 2478,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2455:8:14",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2484,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2455:26:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 2485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2482:8:14",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "2455:35:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 2487,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2455:42:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2488,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2455:42:14"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2503,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2448,
                                    "src": "2626:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "id": 2505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2635:7:14",
                                  "memberName": "deposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3870,
                                  "src": "2626:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 2506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2626:18:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2507,
                              "nodeType": "ExpressionStatement",
                              "src": "2626:18:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2439,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2436,
                            "src": "2101:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2440,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "2105:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 2441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2117:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2105:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2101:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2509,
                        "initializationExpression": {
                          "assignments": [
                            2436
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2436,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2094:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 2509,
                              "src": "2086:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2435,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2086:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2438,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2098:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2086:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2125:3:14",
                            "subExpression": {
                              "id": 2443,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2436,
                              "src": "2125:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2445,
                          "nodeType": "ExpressionStatement",
                          "src": "2125:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "2081:575:14"
                      }
                    ]
                  },
                  "functionSelector": "d389800f",
                  "id": 2511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "earn",
                  "nameLocation": "2009:4:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2013:2:14"
                  },
                  "returnParameters": {
                    "id": 2429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2023:0:14"
                  },
                  "scope": 3433,
                  "src": "2000:663:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3967
                  ],
                  "body": {
                    "id": 2660,
                    "nodeType": "Block",
                    "src": "2745:1360:14",
                    "statements": [
                      {
                        "assignments": [
                          2519
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2519,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "2764:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2660,
                            "src": "2756:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2518,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2756:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2522,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2520,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "2773:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2773:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2756:29:14"
                      },
                      {
                        "assignments": [
                          2524
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2524,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "2806:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2660,
                            "src": "2798:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2523,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2798:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2527,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2525,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "2816:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2816:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2798:30:14"
                      },
                      {
                        "expression": {
                          "id": 2536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2528,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "2841:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2529,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2524,
                                    "src": "2857:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2530,
                                    "name": "lpAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2513,
                                    "src": "2867:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2857:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2532,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2856:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2533,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "2879:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2879:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2856:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2841:51:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2537,
                        "nodeType": "ExpressionStatement",
                        "src": "2841:51:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2539,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2519,
                              "src": "2909:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2540,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2513,
                              "src": "2917:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2538,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "2903:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2542,
                        "nodeType": "ExpressionStatement",
                        "src": "2903:23:14"
                      },
                      {
                        "assignments": [
                          2544
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2544,
                            "mutability": "mutable",
                            "name": "availableBefore",
                            "nameLocation": "2947:15:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2660,
                            "src": "2939:23:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2543,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2939:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2547,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2545,
                            "name": "getAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3367,
                            "src": "2965:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2965:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2939:40:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2548,
                            "name": "availableBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2544,
                            "src": "2996:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2549,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "3014:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2996:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2636,
                        "nodeType": "IfStatement",
                        "src": "2992:911:14",
                        "trueBody": {
                          "id": 2635,
                          "nodeType": "Block",
                          "src": "3028:875:14",
                          "statements": [
                            {
                              "assignments": [
                                2552
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2552,
                                  "mutability": "mutable",
                                  "name": "remaining",
                                  "nameLocation": "3051:9:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2635,
                                  "src": "3043:17:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2551,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3043:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2556,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2553,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2516,
                                  "src": "3063:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2554,
                                  "name": "availableBefore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2544,
                                  "src": "3078:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3063:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3043:50:14"
                            },
                            {
                              "body": {
                                "id": 2615,
                                "nodeType": "Block",
                                "src": "3176:479:14",
                                "statements": [
                                  {
                                    "assignments": [
                                      2574
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2574,
                                        "mutability": "mutable",
                                        "name": "strategy",
                                        "nameLocation": "3205:8:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2615,
                                        "src": "3195:18:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                                          "typeString": "contract IStrategy"
                                        },
                                        "typeName": {
                                          "id": 2573,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2572,
                                            "name": "IStrategy",
                                            "nameLocations": [
                                              "3195:9:14"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 3943,
                                            "src": "3195:9:14"
                                          },
                                          "referencedDeclaration": 3943,
                                          "src": "3195:9:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2578,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 2575,
                                        "name": "_strategies",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2310,
                                        "src": "3216:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                          "typeString": "contract IStrategy[] storage ref"
                                        }
                                      },
                                      "id": 2577,
                                      "indexExpression": {
                                        "id": 2576,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2558,
                                        "src": "3228:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3216:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3195:35:14"
                                  },
                                  {
                                    "assignments": [
                                      2580
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2580,
                                        "mutability": "mutable",
                                        "name": "strategyBalance",
                                        "nameLocation": "3257:15:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2615,
                                        "src": "3249:23:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2579,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3249:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2584,
                                    "initialValue": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 2581,
                                          "name": "strategy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2574,
                                          "src": "3275:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "id": 2582,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3284:12:14",
                                        "memberName": "getBalanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3927,
                                        "src": "3275:21:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view external returns (uint256)"
                                        }
                                      },
                                      "id": 2583,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3275:23:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3249:49:14"
                                  },
                                  {
                                    "assignments": [
                                      2586
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2586,
                                        "mutability": "mutable",
                                        "name": "strategyShare",
                                        "nameLocation": "3327:13:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2615,
                                        "src": "3319:21:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2585,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3319:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2594,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2589,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2587,
                                              "name": "strategyBalance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2580,
                                              "src": "3344:15:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2588,
                                              "name": "lpAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2513,
                                              "src": "3362:8:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "3344:26:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2590,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3343:28:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 2591,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 683,
                                          "src": "3395:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 2592,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3395:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3343:65:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3319:89:14"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2595,
                                        "name": "strategyShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2586,
                                        "src": "3431:13:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 2596,
                                        "name": "remaining",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2552,
                                        "src": "3447:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3431:25:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2603,
                                    "nodeType": "IfStatement",
                                    "src": "3427:99:14",
                                    "trueBody": {
                                      "id": 2602,
                                      "nodeType": "Block",
                                      "src": "3458:68:14",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2600,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2598,
                                              "name": "strategyShare",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2586,
                                              "src": "3481:13:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 2599,
                                              "name": "remaining",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2552,
                                              "src": "3497:9:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "3481:25:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2601,
                                          "nodeType": "ExpressionStatement",
                                          "src": "3481:25:14"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "assignments": [
                                      2605
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2605,
                                        "mutability": "mutable",
                                        "name": "withdrawn",
                                        "nameLocation": "3554:9:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2615,
                                        "src": "3546:17:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2604,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3546:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2610,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2608,
                                          "name": "strategyShare",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2586,
                                          "src": "3584:13:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2606,
                                          "name": "strategy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2574,
                                          "src": "3566:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "id": 2607,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3575:8:14",
                                        "memberName": "withdraw",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3877,
                                        "src": "3566:17:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) external returns (uint256)"
                                        }
                                      },
                                      "id": 2609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3566:32:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3546:52:14"
                                  },
                                  {
                                    "expression": {
                                      "id": 2613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2611,
                                        "name": "remaining",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2552,
                                        "src": "3617:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 2612,
                                        "name": "withdrawn",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2605,
                                        "src": "3630:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3617:22:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2614,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3617:22:14"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2561,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2558,
                                    "src": "3130:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2562,
                                      "name": "_strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2310,
                                      "src": "3134:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                        "typeString": "contract IStrategy[] storage ref"
                                      }
                                    },
                                    "id": 2563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3146:6:14",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "3134:18:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3130:22:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2565,
                                    "name": "remaining",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2552,
                                    "src": "3156:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3168:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "3156:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3130:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2616,
                              "initializationExpression": {
                                "assignments": [
                                  2558
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2558,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "3123:1:14",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2616,
                                    "src": "3115:9:14",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2557,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3115:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2560,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3127:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "3115:13:14"
                              },
                              "isSimpleCounterLoop": false,
                              "loopExpression": {
                                "expression": {
                                  "id": 2570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "3171:3:14",
                                  "subExpression": {
                                    "id": 2569,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2558,
                                    "src": "3171:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2571,
                                "nodeType": "ExpressionStatement",
                                "src": "3171:3:14"
                              },
                              "nodeType": "ForStatement",
                              "src": "3110:545:14"
                            },
                            {
                              "assignments": [
                                2618
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2618,
                                  "mutability": "mutable",
                                  "name": "afterAvailable",
                                  "nameLocation": "3679:14:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2635,
                                  "src": "3671:22:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2617,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3671:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2621,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2619,
                                  "name": "getAvailable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3367,
                                  "src": "3696:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3696:14:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3671:39:14"
                            },
                            {
                              "assignments": [
                                2623
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2623,
                                  "mutability": "mutable",
                                  "name": "maxWithdrawable",
                                  "nameLocation": "3733:15:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2635,
                                  "src": "3725:23:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2622,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3725:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2630,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2624,
                                    "name": "afterAvailable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2618,
                                    "src": "3751:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "id": 2625,
                                    "name": "amountScaled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "3768:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3751:29:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "id": 2628,
                                  "name": "afterAvailable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2618,
                                  "src": "3832:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "3751:95:14",
                                "trueExpression": {
                                  "id": 2627,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2516,
                                  "src": "3800:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3725:121:14"
                            },
                            {
                              "expression": {
                                "id": 2633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2631,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2516,
                                  "src": "3861:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2632,
                                  "name": "maxWithdrawable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2623,
                                  "src": "3876:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3861:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2634,
                              "nodeType": "ExpressionStatement",
                              "src": "3861:30:14"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2637,
                            "name": "_allowedAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2306,
                            "src": "3919:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2638,
                              "name": "Consts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "3936:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                "typeString": "type(library Consts)"
                              }
                            },
                            "id": 2639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3943:3:14",
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4078,
                            "src": "3936:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3919:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2658,
                          "nodeType": "Block",
                          "src": "4019:79:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2654,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2519,
                                    "src": "4065:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2655,
                                    "name": "amountScaled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "4073:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2651,
                                        "name": "_allowedAsset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2306,
                                        "src": "4041:13:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2650,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1556,
                                      "src": "4034:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1556_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4034:21:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1556",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4056:8:14",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1523,
                                  "src": "4034:30:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4034:52:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2657,
                              "nodeType": "ExpressionStatement",
                              "src": "4034:52:14"
                            }
                          ]
                        },
                        "id": 2659,
                        "nodeType": "IfStatement",
                        "src": "3915:183:14",
                        "trueBody": {
                          "id": 2649,
                          "nodeType": "Block",
                          "src": "3948:65:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2646,
                                    "name": "amountScaled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "3988:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2643,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2519,
                                        "src": "3971:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2642,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3963:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 2641,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3963:8:14",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3963:15:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 2645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3979:8:14",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3963:24:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3963:38:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2648,
                              "nodeType": "ExpressionStatement",
                              "src": "3963:38:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 2661,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "2680:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2513,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "2697:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2661,
                        "src": "2689:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2689:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2688:18:14"
                  },
                  "returnParameters": {
                    "id": 2517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2516,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "2731:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2661,
                        "src": "2723:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2723:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2722:22:14"
                  },
                  "scope": 3433,
                  "src": "2671:1434:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3972
                  ],
                  "body": {
                    "id": 2677,
                    "nodeType": "Block",
                    "src": "4176:93:14",
                    "statements": [
                      {
                        "assignments": [
                          2667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2667,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "4195:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2677,
                            "src": "4187:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2666,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4187:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2670,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2668,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "4204:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4204:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4187:29:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2673,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2667,
                                  "src": "4253:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2672,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 703,
                                "src": "4243:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4243:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2671,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2661,
                            "src": "4234:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4234:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2665,
                        "id": 2676,
                        "nodeType": "Return",
                        "src": "4227:34:14"
                      }
                    ]
                  },
                  "functionSelector": "853828b6",
                  "id": 2678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAll",
                  "nameLocation": "4122:11:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2662,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4133:2:14"
                  },
                  "returnParameters": {
                    "id": 2665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2664,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "4162:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2678,
                        "src": "4154:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4154:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4153:22:14"
                  },
                  "scope": 3433,
                  "src": "4113:156:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3982
                  ],
                  "body": {
                    "id": 2762,
                    "nodeType": "Block",
                    "src": "4429:590:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2695,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2683,
                              "src": "4461:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 2696,
                                  "name": "Enums",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4106,
                                  "src": "4470:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                    "typeString": "type(library Enums)"
                                  }
                                },
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4476:12:14",
                                "memberName": "ApprovalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4101,
                                "src": "4470:18:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                  "typeString": "type(enum Enums.ApprovalFlag)"
                                }
                              },
                              "id": 2698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4489:7:14",
                              "memberName": "Deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4098,
                              "src": "4470:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              },
                              {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            ],
                            "expression": {
                              "id": 2692,
                              "name": "_agent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2318,
                              "src": "4440:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgent_$3686",
                                "typeString": "contract IAgent"
                              }
                            },
                            "id": 2694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4447:13:14",
                            "memberName": "checkApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3685,
                            "src": "4440:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$returns$__$",
                              "typeString": "function (contract IAccount,enum Enums.ApprovalFlag) view external"
                            }
                          },
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4440:57:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2700,
                        "nodeType": "ExpressionStatement",
                        "src": "4440:57:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2704,
                                  "name": "_agent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2318,
                                  "src": "4539:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAgent_$3686",
                                    "typeString": "contract IAgent"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAgent_$3686",
                                    "typeString": "contract IAgent"
                                  }
                                ],
                                "expression": {
                                  "id": 2702,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2683,
                                  "src": "4518:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                },
                                "id": 2703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4526:12:14",
                                "memberName": "checkIsAgent",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3499,
                                "src": "4518:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_contract$_IAgent_$3686_$returns$_t_bool_$",
                                  "typeString": "function (contract IAgent) view external returns (bool)"
                                }
                              },
                              "id": 2705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4518:28:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 2706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4548:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 2701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4510:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:55:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2708,
                        "nodeType": "ExpressionStatement",
                        "src": "4510:55:14"
                      },
                      {
                        "assignments": [
                          2710
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2710,
                            "mutability": "mutable",
                            "name": "balanceBefore",
                            "nameLocation": "4586:13:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2762,
                            "src": "4578:21:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2709,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4578:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2713,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2711,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "4602:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4602:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4578:36:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2717,
                              "name": "amountScaled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "4651:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2714,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2683,
                              "src": "4627:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            },
                            "id": 2716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4635:15:14",
                            "memberName": "withdrawToVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3470,
                            "src": "4627:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4627:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2719,
                        "nodeType": "ExpressionStatement",
                        "src": "4627:37:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2720,
                            "name": "earn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "4677:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4677:6:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2722,
                        "nodeType": "ExpressionStatement",
                        "src": "4677:6:14"
                      },
                      {
                        "assignments": [
                          2724
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2724,
                            "mutability": "mutable",
                            "name": "balanceAfter",
                            "nameLocation": "4704:12:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2762,
                            "src": "4696:20:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2723,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4696:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2727,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2725,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "4719:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4719:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4696:35:14"
                      },
                      {
                        "expression": {
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2728,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2680,
                            "src": "4744:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2729,
                              "name": "balanceAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2724,
                              "src": "4759:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2730,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2710,
                              "src": "4774:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4759:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4744:43:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2733,
                        "nodeType": "ExpressionStatement",
                        "src": "4744:43:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2734,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "4804:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4804:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4821:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4804:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2753,
                          "nodeType": "Block",
                          "src": "4880:84:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2743,
                                  "name": "lpMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "4895:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2744,
                                          "name": "amountScaled",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2680,
                                          "src": "4907:12:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 2745,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 683,
                                            "src": "4922:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 2746,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4922:13:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4907:28:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2748,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4906:30:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 2749,
                                    "name": "balanceBefore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2710,
                                    "src": "4939:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4906:46:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4895:57:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2752,
                              "nodeType": "ExpressionStatement",
                              "src": "4895:57:14"
                            }
                          ]
                        },
                        "id": 2754,
                        "nodeType": "IfStatement",
                        "src": "4800:164:14",
                        "trueBody": {
                          "id": 2742,
                          "nodeType": "Block",
                          "src": "4824:50:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2738,
                                  "name": "lpMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "4839:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2739,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2680,
                                  "src": "4850:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4839:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2741,
                              "nodeType": "ExpressionStatement",
                              "src": "4839:23:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2756,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2683,
                                  "src": "4982:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                },
                                "id": 2757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4990:8:14",
                                "memberName": "getOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3504,
                                "src": "4982:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4982:18:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2759,
                              "name": "lpMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "5002:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2755,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "4976:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4976:35:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2761,
                        "nodeType": "ExpressionStatement",
                        "src": "4976:35:14"
                      }
                    ]
                  },
                  "functionSelector": "b76e07cc",
                  "id": 2763,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2686,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2685,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4379:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "4379:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4379:9:14"
                    },
                    {
                      "id": 2688,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2687,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4389:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1645,
                        "src": "4389:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4389:12:14"
                    }
                  ],
                  "name": "depositFromAccount",
                  "nameLocation": "4286:18:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2680,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "4323:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2763,
                        "src": "4315:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2679,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4315:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2683,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4355:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2763,
                        "src": "4346:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 2682,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2681,
                            "name": "IAccount",
                            "nameLocations": [
                              "4346:8:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "4346:8:14"
                          },
                          "referencedDeclaration": 3505,
                          "src": "4346:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4304:65:14"
                  },
                  "returnParameters": {
                    "id": 2691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2690,
                        "mutability": "mutable",
                        "name": "lpMinted",
                        "nameLocation": "4419:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2763,
                        "src": "4411:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4411:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4410:18:14"
                  },
                  "scope": 3433,
                  "src": "4277:742:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3992
                  ],
                  "body": {
                    "id": 2937,
                    "nodeType": "Block",
                    "src": "5163:1487:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2778,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2768,
                              "src": "5195:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 2779,
                                  "name": "Enums",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4106,
                                  "src": "5204:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enums_$4106_$",
                                    "typeString": "type(library Enums)"
                                  }
                                },
                                "id": 2780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5210:12:14",
                                "memberName": "ApprovalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4101,
                                "src": "5204:18:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ApprovalFlag_$4101_$",
                                  "typeString": "type(enum Enums.ApprovalFlag)"
                                }
                              },
                              "id": 2781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5223:8:14",
                              "memberName": "Withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4099,
                              "src": "5204:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              },
                              {
                                "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                                "typeString": "enum Enums.ApprovalFlag"
                              }
                            ],
                            "expression": {
                              "id": 2775,
                              "name": "_agent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2318,
                              "src": "5174:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgent_$3686",
                                "typeString": "contract IAgent"
                              }
                            },
                            "id": 2777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5181:13:14",
                            "memberName": "checkApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3685,
                            "src": "5174:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_IAccount_$3505_$_t_enum$_ApprovalFlag_$4101_$returns$__$",
                              "typeString": "function (contract IAccount,enum Enums.ApprovalFlag) view external"
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5174:58:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2783,
                        "nodeType": "ExpressionStatement",
                        "src": "5174:58:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2787,
                                  "name": "_agent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2318,
                                  "src": "5274:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAgent_$3686",
                                    "typeString": "contract IAgent"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAgent_$3686",
                                    "typeString": "contract IAgent"
                                  }
                                ],
                                "expression": {
                                  "id": 2785,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "5253:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                },
                                "id": 2786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5261:12:14",
                                "memberName": "checkIsAgent",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3499,
                                "src": "5253:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_contract$_IAgent_$3686_$returns$_t_bool_$",
                                  "typeString": "function (contract IAgent) view external returns (bool)"
                                }
                              },
                              "id": 2788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5253:28:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 2789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5283:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 2784,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5245:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5245:55:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2791,
                        "nodeType": "ExpressionStatement",
                        "src": "5245:55:14"
                      },
                      {
                        "assignments": [
                          2793
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2793,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "5321:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2937,
                            "src": "5313:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2792,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5313:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2796,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2794,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "5331:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5331:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5313:30:14"
                      },
                      {
                        "expression": {
                          "id": 2805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2797,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2773,
                            "src": "5354:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2798,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2793,
                                    "src": "5370:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2799,
                                    "name": "lpAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2765,
                                    "src": "5380:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5370:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2801,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5369:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2802,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "5392:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5392:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5369:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5354:51:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2806,
                        "nodeType": "ExpressionStatement",
                        "src": "5354:51:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2808,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "5422:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAccount_$3505",
                                    "typeString": "contract IAccount"
                                  }
                                },
                                "id": 2809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5430:8:14",
                                "memberName": "getOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3504,
                                "src": "5422:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5422:18:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2811,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2765,
                              "src": "5442:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2807,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "5416:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5416:35:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2813,
                        "nodeType": "ExpressionStatement",
                        "src": "5416:35:14"
                      },
                      {
                        "assignments": [
                          2815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2815,
                            "mutability": "mutable",
                            "name": "availableBefore",
                            "nameLocation": "5472:15:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2937,
                            "src": "5464:23:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2814,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5464:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2818,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2816,
                            "name": "getAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3367,
                            "src": "5490:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5490:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5464:40:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2819,
                            "name": "availableBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2815,
                            "src": "5521:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2820,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2773,
                            "src": "5539:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5521:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2907,
                        "nodeType": "IfStatement",
                        "src": "5517:911:14",
                        "trueBody": {
                          "id": 2906,
                          "nodeType": "Block",
                          "src": "5553:875:14",
                          "statements": [
                            {
                              "assignments": [
                                2823
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2823,
                                  "mutability": "mutable",
                                  "name": "remaining",
                                  "nameLocation": "5576:9:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2906,
                                  "src": "5568:17:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2822,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5568:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2827,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2824,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2773,
                                  "src": "5588:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2825,
                                  "name": "availableBefore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2815,
                                  "src": "5603:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5588:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5568:50:14"
                            },
                            {
                              "body": {
                                "id": 2886,
                                "nodeType": "Block",
                                "src": "5701:479:14",
                                "statements": [
                                  {
                                    "assignments": [
                                      2845
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2845,
                                        "mutability": "mutable",
                                        "name": "strategy",
                                        "nameLocation": "5730:8:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2886,
                                        "src": "5720:18:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                                          "typeString": "contract IStrategy"
                                        },
                                        "typeName": {
                                          "id": 2844,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2843,
                                            "name": "IStrategy",
                                            "nameLocations": [
                                              "5720:9:14"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 3943,
                                            "src": "5720:9:14"
                                          },
                                          "referencedDeclaration": 3943,
                                          "src": "5720:9:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2849,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 2846,
                                        "name": "_strategies",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2310,
                                        "src": "5741:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                          "typeString": "contract IStrategy[] storage ref"
                                        }
                                      },
                                      "id": 2848,
                                      "indexExpression": {
                                        "id": 2847,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2829,
                                        "src": "5753:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5741:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5720:35:14"
                                  },
                                  {
                                    "assignments": [
                                      2851
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2851,
                                        "mutability": "mutable",
                                        "name": "strategyBalance",
                                        "nameLocation": "5782:15:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2886,
                                        "src": "5774:23:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2850,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5774:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2855,
                                    "initialValue": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 2852,
                                          "name": "strategy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2845,
                                          "src": "5800:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "id": 2853,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5809:12:14",
                                        "memberName": "getBalanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3927,
                                        "src": "5800:21:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view external returns (uint256)"
                                        }
                                      },
                                      "id": 2854,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5800:23:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5774:49:14"
                                  },
                                  {
                                    "assignments": [
                                      2857
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2857,
                                        "mutability": "mutable",
                                        "name": "strategyShare",
                                        "nameLocation": "5852:13:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2886,
                                        "src": "5844:21:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2856,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5844:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2865,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2864,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2860,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2858,
                                              "name": "strategyBalance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2851,
                                              "src": "5869:15:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2859,
                                              "name": "lpAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2765,
                                              "src": "5887:8:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5869:26:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2861,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5868:28:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 2862,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 683,
                                          "src": "5920:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 2863,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5920:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5868:65:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5844:89:14"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2868,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2866,
                                        "name": "strategyShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2857,
                                        "src": "5956:13:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 2867,
                                        "name": "remaining",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2823,
                                        "src": "5972:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5956:25:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2874,
                                    "nodeType": "IfStatement",
                                    "src": "5952:99:14",
                                    "trueBody": {
                                      "id": 2873,
                                      "nodeType": "Block",
                                      "src": "5983:68:14",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2871,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2869,
                                              "name": "strategyShare",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2857,
                                              "src": "6006:13:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 2870,
                                              "name": "remaining",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2823,
                                              "src": "6022:9:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "6006:25:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2872,
                                          "nodeType": "ExpressionStatement",
                                          "src": "6006:25:14"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "assignments": [
                                      2876
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2876,
                                        "mutability": "mutable",
                                        "name": "withdrawn",
                                        "nameLocation": "6079:9:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2886,
                                        "src": "6071:17:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2875,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6071:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2881,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2879,
                                          "name": "strategyShare",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2857,
                                          "src": "6109:13:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2877,
                                          "name": "strategy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2845,
                                          "src": "6091:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "id": 2878,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6100:8:14",
                                        "memberName": "withdraw",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3877,
                                        "src": "6091:17:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) external returns (uint256)"
                                        }
                                      },
                                      "id": 2880,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6091:32:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6071:52:14"
                                  },
                                  {
                                    "expression": {
                                      "id": 2884,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2882,
                                        "name": "remaining",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2823,
                                        "src": "6142:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 2883,
                                        "name": "withdrawn",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2876,
                                        "src": "6155:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6142:22:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2885,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6142:22:14"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2835,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2832,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2829,
                                    "src": "5655:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2833,
                                      "name": "_strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2310,
                                      "src": "5659:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                        "typeString": "contract IStrategy[] storage ref"
                                      }
                                    },
                                    "id": 2834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5671:6:14",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5659:18:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5655:22:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2838,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2836,
                                    "name": "remaining",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2823,
                                    "src": "5681:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2837,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5693:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5681:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5655:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2887,
                              "initializationExpression": {
                                "assignments": [
                                  2829
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2829,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "5648:1:14",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2887,
                                    "src": "5640:9:14",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2828,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5640:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2831,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5652:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "5640:13:14"
                              },
                              "isSimpleCounterLoop": false,
                              "loopExpression": {
                                "expression": {
                                  "id": 2841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "5696:3:14",
                                  "subExpression": {
                                    "id": 2840,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2829,
                                    "src": "5696:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2842,
                                "nodeType": "ExpressionStatement",
                                "src": "5696:3:14"
                              },
                              "nodeType": "ForStatement",
                              "src": "5635:545:14"
                            },
                            {
                              "assignments": [
                                2889
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2889,
                                  "mutability": "mutable",
                                  "name": "afterAvailable",
                                  "nameLocation": "6204:14:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2906,
                                  "src": "6196:22:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2888,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6196:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2892,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2890,
                                  "name": "getAvailable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3367,
                                  "src": "6221:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6221:14:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6196:39:14"
                            },
                            {
                              "assignments": [
                                2894
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2894,
                                  "mutability": "mutable",
                                  "name": "maxWithdrawable",
                                  "nameLocation": "6258:15:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2906,
                                  "src": "6250:23:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2893,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6250:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2901,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2895,
                                    "name": "afterAvailable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2889,
                                    "src": "6276:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "id": 2896,
                                    "name": "amountScaled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2773,
                                    "src": "6293:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6276:29:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "id": 2899,
                                  "name": "afterAvailable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2889,
                                  "src": "6357:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "6276:95:14",
                                "trueExpression": {
                                  "id": 2898,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2773,
                                  "src": "6325:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6250:121:14"
                            },
                            {
                              "expression": {
                                "id": 2904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2902,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2773,
                                  "src": "6386:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2903,
                                  "name": "maxWithdrawable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2894,
                                  "src": "6401:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6386:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2905,
                              "nodeType": "ExpressionStatement",
                              "src": "6386:30:14"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2908,
                            "name": "_allowedAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2306,
                            "src": "6444:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2909,
                              "name": "Consts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "6461:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                "typeString": "type(library Consts)"
                              }
                            },
                            "id": 2910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6468:3:14",
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4078,
                            "src": "6461:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6444:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2935,
                          "nodeType": "Block",
                          "src": "6554:89:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2930,
                                        "name": "account",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2768,
                                        "src": "6608:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IAccount_$3505",
                                          "typeString": "contract IAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IAccount_$3505",
                                          "typeString": "contract IAccount"
                                        }
                                      ],
                                      "id": 2929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6600:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2928,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6600:7:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2931,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6600:16:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2932,
                                    "name": "amountScaled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2773,
                                    "src": "6618:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2925,
                                        "name": "_allowedAsset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2306,
                                        "src": "6576:13:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2924,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1556,
                                      "src": "6569:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1556_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6569:21:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1556",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6591:8:14",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1523,
                                  "src": "6569:30:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6569:62:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2934,
                              "nodeType": "ExpressionStatement",
                              "src": "6569:62:14"
                            }
                          ]
                        },
                        "id": 2936,
                        "nodeType": "IfStatement",
                        "src": "6440:203:14",
                        "trueBody": {
                          "id": 2923,
                          "nodeType": "Block",
                          "src": "6473:75:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2920,
                                    "name": "amountScaled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2773,
                                    "src": "6523:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 2916,
                                            "name": "account",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2768,
                                            "src": "6504:7:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IAccount_$3505",
                                              "typeString": "contract IAccount"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IAccount_$3505",
                                              "typeString": "contract IAccount"
                                            }
                                          ],
                                          "id": 2915,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6496:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 2914,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6496:7:14",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2917,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6496:16:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2913,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6488:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 2912,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6488:8:14",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2918,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6488:25:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 2919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6514:8:14",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "6488:34:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6488:48:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2922,
                              "nodeType": "ExpressionStatement",
                              "src": "6488:48:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "a49b5cb4",
                  "id": 2938,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2771,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2770,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5122:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "5122:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5122:9:14"
                    }
                  ],
                  "name": "withdrawToAccount",
                  "nameLocation": "5036:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2765,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "5072:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2938,
                        "src": "5064:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2764,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5064:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2768,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "5100:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2938,
                        "src": "5091:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 2767,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2766,
                            "name": "IAccount",
                            "nameLocations": [
                              "5091:8:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "5091:8:14"
                          },
                          "referencedDeclaration": 3505,
                          "src": "5091:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5053:61:14"
                  },
                  "returnParameters": {
                    "id": 2774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2773,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "5149:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2938,
                        "src": "5141:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5141:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5140:22:14"
                  },
                  "scope": 3433,
                  "src": "5027:1623:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4000
                  ],
                  "body": {
                    "id": 2957,
                    "nodeType": "Block",
                    "src": "6772:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2950,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2941,
                                      "src": "6818:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAccount_$3505",
                                        "typeString": "contract IAccount"
                                      }
                                    },
                                    "id": 2951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6826:8:14",
                                    "memberName": "getOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3504,
                                    "src": "6818:16:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 2952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6818:18:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2949,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 703,
                                "src": "6808:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6808:29:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2954,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2941,
                              "src": "6839:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IAccount_$3505",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 2948,
                            "name": "withdrawToAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2938,
                            "src": "6790:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_IAccount_$3505_$returns$_t_uint256_$",
                              "typeString": "function (uint256,contract IAccount) returns (uint256)"
                            }
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6790:57:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2947,
                        "id": 2956,
                        "nodeType": "Return",
                        "src": "6783:64:14"
                      }
                    ]
                  },
                  "functionSelector": "c07e866e",
                  "id": 2958,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2944,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2943,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6731:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "6731:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6731:9:14"
                    }
                  ],
                  "name": "withdrawAllToAccount",
                  "nameLocation": "6667:20:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2942,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2941,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6707:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2958,
                        "src": "6698:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 2940,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2939,
                            "name": "IAccount",
                            "nameLocations": [
                              "6698:8:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "6698:8:14"
                          },
                          "referencedDeclaration": 3505,
                          "src": "6698:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6687:34:14"
                  },
                  "returnParameters": {
                    "id": 2947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2946,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "6758:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2958,
                        "src": "6750:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6750:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6749:22:14"
                  },
                  "scope": 3433,
                  "src": "6658:197:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4006
                  ],
                  "body": {
                    "id": 3011,
                    "nodeType": "Block",
                    "src": "6926:375:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2969,
                                    "name": "newStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2961,
                                    "src": "6953:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 2968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6945:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2967,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6945:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6945:20:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6977:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6969:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2971,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6969:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6969:10:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6945:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207374726174656779",
                              "id": 2976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6981:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e36c9815fa5ee93ecbe725014b04a3053894ed5dd81fc3c00f9ba863a53470ed",
                                "typeString": "literal_string \"Invalid strategy\""
                              },
                              "value": "Invalid strategy"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e36c9815fa5ee93ecbe725014b04a3053894ed5dd81fc3c00f9ba863a53470ed",
                                "typeString": "literal_string \"Invalid strategy\""
                              }
                            ],
                            "id": 2966,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6937:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6937:63:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2978,
                        "nodeType": "ExpressionStatement",
                        "src": "6937:63:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7019:26:14",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 2981,
                                    "name": "newStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2961,
                                    "src": "7033:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 2980,
                                  "name": "_hasStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3168,
                                  "src": "7020:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_contract$_IStrategy_$3943_$returns$_t_bool_$",
                                    "typeString": "function (contract IStrategy) view returns (bool)"
                                  }
                                },
                                "id": 2982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7020:25:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537472617465677920616c726561647920657869737473",
                              "id": 2984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7047:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_82c15d8a3c3b6c1dcdb940e9fbe25174ba57d2026ca1922ed96cd2e7018018f7",
                                "typeString": "literal_string \"Strategy already exists\""
                              },
                              "value": "Strategy already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_82c15d8a3c3b6c1dcdb940e9fbe25174ba57d2026ca1922ed96cd2e7018018f7",
                                "typeString": "literal_string \"Strategy already exists\""
                              }
                            ],
                            "id": 2979,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7011:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7011:62:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2986,
                        "nodeType": "ExpressionStatement",
                        "src": "7011:62:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 2990,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7116:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                        "typeString": "contract VaultUpgradeable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                        "typeString": "contract VaultUpgradeable"
                                      }
                                    ],
                                    "id": 2989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7108:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2988,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7108:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7108:13:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2992,
                                      "name": "newStrategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2961,
                                      "src": "7125:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 2993,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7137:8:14",
                                    "memberName": "getVault",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3799,
                                    "src": "7125:20:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 2994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7125:22:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7108:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2996,
                                  "name": "_allowedAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2306,
                                  "src": "7168:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2997,
                                      "name": "newStrategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2961,
                                      "src": "7185:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 2998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7197:8:14",
                                    "memberName": "getAsset",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3922,
                                    "src": "7185:20:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 2999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7185:22:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7168:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7108:99:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207374726174656779",
                              "id": 3002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7222:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e36c9815fa5ee93ecbe725014b04a3053894ed5dd81fc3c00f9ba863a53470ed",
                                "typeString": "literal_string \"Invalid strategy\""
                              },
                              "value": "Invalid strategy"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e36c9815fa5ee93ecbe725014b04a3053894ed5dd81fc3c00f9ba863a53470ed",
                                "typeString": "literal_string \"Invalid strategy\""
                              }
                            ],
                            "id": 2987,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7086:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7086:165:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3004,
                        "nodeType": "ExpressionStatement",
                        "src": "7086:165:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3008,
                              "name": "newStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2961,
                              "src": "7281:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "expression": {
                              "id": 3005,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "7264:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7276:4:14",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7264:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr_$_t_contract$_IStrategy_$3943_$returns$__$attached_to$_t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr_$",
                              "typeString": "function (contract IStrategy[] storage pointer,contract IStrategy)"
                            }
                          },
                          "id": 3009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7264:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3010,
                        "nodeType": "ExpressionStatement",
                        "src": "7264:29:14"
                      }
                    ]
                  },
                  "functionSelector": "223e5479",
                  "id": 3012,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2964,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2963,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6916:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "6916:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6916:9:14"
                    }
                  ],
                  "name": "addStrategy",
                  "nameLocation": "6872:11:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2961,
                        "mutability": "mutable",
                        "name": "newStrategy",
                        "nameLocation": "6894:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3012,
                        "src": "6884:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 2960,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2959,
                            "name": "IStrategy",
                            "nameLocations": [
                              "6884:9:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "6884:9:14"
                          },
                          "referencedDeclaration": 3943,
                          "src": "6884:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6883:23:14"
                  },
                  "returnParameters": {
                    "id": 2965,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6926:0:14"
                  },
                  "scope": 3433,
                  "src": "6863:438:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4012
                  ],
                  "body": {
                    "id": 3078,
                    "nodeType": "Block",
                    "src": "7380:475:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3022,
                                  "name": "strategyToRemove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3015,
                                  "src": "7412:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                ],
                                "id": 3021,
                                "name": "_hasStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3168,
                                "src": "7399:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_contract$_IStrategy_$3943_$returns$_t_bool_$",
                                  "typeString": "function (contract IStrategy) view returns (bool)"
                                }
                              },
                              "id": 3023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7399:30:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374726174656779206e6f7420666f756e64",
                              "id": 3024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7431:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbe8c7007fde497a66e47fc993ed71ea2a9ae29d94ed977e1b935f9f2df46c0a",
                                "typeString": "literal_string \"Strategy not found\""
                              },
                              "value": "Strategy not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbe8c7007fde497a66e47fc993ed71ea2a9ae29d94ed977e1b935f9f2df46c0a",
                                "typeString": "literal_string \"Strategy not found\""
                              }
                            ],
                            "id": 3020,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7391:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7391:61:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3026,
                        "nodeType": "ExpressionStatement",
                        "src": "7391:61:14"
                      },
                      {
                        "assignments": [
                          3028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3028,
                            "mutability": "mutable",
                            "name": "len",
                            "nameLocation": "7473:3:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3078,
                            "src": "7465:11:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3027,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7465:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3031,
                        "initialValue": {
                          "expression": {
                            "id": 3029,
                            "name": "_strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2310,
                            "src": "7479:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                              "typeString": "contract IStrategy[] storage ref"
                            }
                          },
                          "id": 3030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7491:6:14",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7479:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7465:32:14"
                      },
                      {
                        "body": {
                          "id": 3076,
                          "nodeType": "Block",
                          "src": "7542:306:14",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IStrategy_$3943",
                                  "typeString": "contract IStrategy"
                                },
                                "id": 3046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 3042,
                                    "name": "_strategies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2310,
                                    "src": "7561:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                      "typeString": "contract IStrategy[] storage ref"
                                    }
                                  },
                                  "id": 3044,
                                  "indexExpression": {
                                    "id": 3043,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3033,
                                    "src": "7573:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7561:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3045,
                                  "name": "strategyToRemove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3015,
                                  "src": "7579:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "7561:34:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3075,
                              "nodeType": "IfStatement",
                              "src": "7557:280:14",
                              "trueBody": {
                                "id": 3074,
                                "nodeType": "Block",
                                "src": "7597:240:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 3048,
                                            "name": "_strategies",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2310,
                                            "src": "7634:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                              "typeString": "contract IStrategy[] storage ref"
                                            }
                                          },
                                          "id": 3050,
                                          "indexExpression": {
                                            "id": 3049,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3033,
                                            "src": "7646:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7634:14:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        ],
                                        "id": 3047,
                                        "name": "_onRemoveStrategy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3253,
                                        "src": "7616:17:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IStrategy_$3943_$returns$__$",
                                          "typeString": "function (contract IStrategy)"
                                        }
                                      },
                                      "id": 3051,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7616:33:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3052,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7616:33:14"
                                  },
                                  {
                                    "expression": {
                                      "id": 3061,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3053,
                                          "name": "_strategies",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2310,
                                          "src": "7668:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                            "typeString": "contract IStrategy[] storage ref"
                                          }
                                        },
                                        "id": 3055,
                                        "indexExpression": {
                                          "id": 3054,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3033,
                                          "src": "7680:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "7668:14:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 3056,
                                          "name": "_strategies",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2310,
                                          "src": "7685:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                            "typeString": "contract IStrategy[] storage ref"
                                          }
                                        },
                                        "id": 3060,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3059,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 3057,
                                            "name": "len",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3028,
                                            "src": "7697:3:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 3058,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7703:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "7697:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7685:20:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "src": "7668:37:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 3062,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7668:37:14"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 3063,
                                          "name": "_strategies",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2310,
                                          "src": "7724:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                            "typeString": "contract IStrategy[] storage ref"
                                          }
                                        },
                                        "id": 3065,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7736:3:14",
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "7724:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr_$",
                                          "typeString": "function (contract IStrategy[] storage pointer)"
                                        }
                                      },
                                      "id": 3066,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7724:17:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3067,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7724:17:14"
                                  },
                                  {
                                    "expression": {
                                      "id": 3071,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "delete",
                                      "prefix": true,
                                      "src": "7760:37:14",
                                      "subExpression": {
                                        "baseExpression": {
                                          "id": 3068,
                                          "name": "_allocations",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2315,
                                          "src": "7767:12:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                                            "typeString": "mapping(contract IStrategy => uint256)"
                                          }
                                        },
                                        "id": 3070,
                                        "indexExpression": {
                                          "id": 3069,
                                          "name": "strategyToRemove",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3015,
                                          "src": "7780:16:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "7767:30:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3072,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7760:37:14"
                                  },
                                  {
                                    "id": 3073,
                                    "nodeType": "Break",
                                    "src": "7816:5:14"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3036,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3033,
                            "src": "7528:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3037,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3028,
                            "src": "7532:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7528:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3077,
                        "initializationExpression": {
                          "assignments": [
                            3033
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3033,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7521:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3077,
                              "src": "7513:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3032,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7513:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3035,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7525:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7513:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7537:3:14",
                            "subExpression": {
                              "id": 3039,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3033,
                              "src": "7537:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3041,
                          "nodeType": "ExpressionStatement",
                          "src": "7537:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "7508:340:14"
                      }
                    ]
                  },
                  "functionSelector": "175188e8",
                  "id": 3079,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3018,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3017,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7370:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "7370:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7370:9:14"
                    }
                  ],
                  "name": "removeStrategy",
                  "nameLocation": "7318:14:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3015,
                        "mutability": "mutable",
                        "name": "strategyToRemove",
                        "nameLocation": "7343:16:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3079,
                        "src": "7333:26:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 3014,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3013,
                            "name": "IStrategy",
                            "nameLocations": [
                              "7333:9:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "7333:9:14"
                          },
                          "referencedDeclaration": 3943,
                          "src": "7333:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7332:28:14"
                  },
                  "returnParameters": {
                    "id": 3019,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7380:0:14"
                  },
                  "scope": 3433,
                  "src": "7309:546:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4018
                  ],
                  "body": {
                    "id": 3134,
                    "nodeType": "Block",
                    "src": "7932:413:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3088,
                                  "name": "_strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "7965:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 3089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7977:6:14",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7965:18:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3090,
                                  "name": "allocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3082,
                                  "src": "7987:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7999:6:14",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7987:18:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7965:40:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d69736d617463686564206172726179206c656e67746873",
                              "id": 3093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8020:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
                                "typeString": "literal_string \"Mismatched array lengths\""
                              },
                              "value": "Mismatched array lengths"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
                                "typeString": "literal_string \"Mismatched array lengths\""
                              }
                            ],
                            "id": 3087,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7943:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7943:114:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3095,
                        "nodeType": "ExpressionStatement",
                        "src": "7943:114:14"
                      },
                      {
                        "body": {
                          "id": 3129,
                          "nodeType": "Block",
                          "src": "8119:184:14",
                          "statements": [
                            {
                              "assignments": [
                                3109
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3109,
                                  "mutability": "mutable",
                                  "name": "strategy",
                                  "nameLocation": "8144:8:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3129,
                                  "src": "8134:18:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  },
                                  "typeName": {
                                    "id": 3108,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3107,
                                      "name": "IStrategy",
                                      "nameLocations": [
                                        "8134:9:14"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3943,
                                      "src": "8134:9:14"
                                    },
                                    "referencedDeclaration": 3943,
                                    "src": "8134:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3113,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3110,
                                  "name": "_strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "8155:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 3112,
                                "indexExpression": {
                                  "id": 3111,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3097,
                                  "src": "8167:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8155:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$3943",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8134:35:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3116,
                                        "name": "strategy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3109,
                                        "src": "8205:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                                          "typeString": "contract IStrategy"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                                          "typeString": "contract IStrategy"
                                        }
                                      ],
                                      "id": 3115,
                                      "name": "_hasStrategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3168,
                                      "src": "8192:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_contract$_IStrategy_$3943_$returns$_t_bool_$",
                                        "typeString": "function (contract IStrategy) view returns (bool)"
                                      }
                                    },
                                    "id": 3117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8192:22:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5374726174656779206e6f7420666f756e64",
                                    "id": 3118,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8216:20:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bbe8c7007fde497a66e47fc993ed71ea2a9ae29d94ed977e1b935f9f2df46c0a",
                                      "typeString": "literal_string \"Strategy not found\""
                                    },
                                    "value": "Strategy not found"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_bbe8c7007fde497a66e47fc993ed71ea2a9ae29d94ed977e1b935f9f2df46c0a",
                                      "typeString": "literal_string \"Strategy not found\""
                                    }
                                  ],
                                  "id": 3114,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8184:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8184:53:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3120,
                              "nodeType": "ExpressionStatement",
                              "src": "8184:53:14"
                            },
                            {
                              "expression": {
                                "id": 3127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3121,
                                    "name": "_allocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2315,
                                    "src": "8252:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                                      "typeString": "mapping(contract IStrategy => uint256)"
                                    }
                                  },
                                  "id": 3123,
                                  "indexExpression": {
                                    "id": 3122,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3109,
                                    "src": "8265:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8252:22:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3124,
                                    "name": "allocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3082,
                                    "src": "8277:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3126,
                                  "indexExpression": {
                                    "id": 3125,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3097,
                                    "src": "8289:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8277:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8252:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3128,
                              "nodeType": "ExpressionStatement",
                              "src": "8252:39:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3100,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3097,
                            "src": "8090:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3101,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "8094:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8106:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8094:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8090:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3130,
                        "initializationExpression": {
                          "assignments": [
                            3097
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3097,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8083:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3130,
                              "src": "8075:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3096,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8075:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3099,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8087:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8075:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8114:3:14",
                            "subExpression": {
                              "id": 3104,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3097,
                              "src": "8114:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3106,
                          "nodeType": "ExpressionStatement",
                          "src": "8114:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "8070:233:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3131,
                            "name": "_onAllocationChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3238,
                            "src": "8315:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8315:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3133,
                        "nodeType": "ExpressionStatement",
                        "src": "8315:22:14"
                      }
                    ]
                  },
                  "functionSelector": "ee6ce925",
                  "id": 3135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3085,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3084,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7922:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 157,
                        "src": "7922:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7922:9:14"
                    }
                  ],
                  "name": "reallocate",
                  "nameLocation": "7872:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3082,
                        "mutability": "mutable",
                        "name": "allocations",
                        "nameLocation": "7900:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3135,
                        "src": "7883:28:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3080,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7883:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3081,
                          "nodeType": "ArrayTypeName",
                          "src": "7883:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7882:30:14"
                  },
                  "returnParameters": {
                    "id": 3086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7932:0:14"
                  },
                  "scope": 3433,
                  "src": "7863:482:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3167,
                    "nodeType": "Block",
                    "src": "8424:194:14",
                    "statements": [
                      {
                        "body": {
                          "id": 3163,
                          "nodeType": "Block",
                          "src": "8484:104:14",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IStrategy_$3943",
                                  "typeString": "contract IStrategy"
                                },
                                "id": 3158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 3154,
                                    "name": "_strategies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2310,
                                    "src": "8503:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                      "typeString": "contract IStrategy[] storage ref"
                                    }
                                  },
                                  "id": 3156,
                                  "indexExpression": {
                                    "id": 3155,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3144,
                                    "src": "8515:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8503:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3157,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3138,
                                  "src": "8521:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "8503:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3162,
                              "nodeType": "IfStatement",
                              "src": "8499:78:14",
                              "trueBody": {
                                "id": 3161,
                                "nodeType": "Block",
                                "src": "8531:46:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "74727565",
                                      "id": 3159,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8557:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 3142,
                                    "id": 3160,
                                    "nodeType": "Return",
                                    "src": "8550:11:14"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3147,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "8455:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3148,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "8459:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8471:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8459:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8455:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3164,
                        "initializationExpression": {
                          "assignments": [
                            3144
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3144,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8448:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3164,
                              "src": "8440:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3143,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8440:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3146,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8452:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8440:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8479:3:14",
                            "subExpression": {
                              "id": 3151,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3144,
                              "src": "8479:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3153,
                          "nodeType": "ExpressionStatement",
                          "src": "8479:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "8435:153:14"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 3165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8605:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3142,
                        "id": 3166,
                        "nodeType": "Return",
                        "src": "8598:12:14"
                      }
                    ]
                  },
                  "id": 3168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_hasStrategy",
                  "nameLocation": "8362:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3138,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "8385:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3168,
                        "src": "8375:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 3137,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3136,
                            "name": "IStrategy",
                            "nameLocations": [
                              "8375:9:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "8375:9:14"
                          },
                          "referencedDeclaration": 3943,
                          "src": "8375:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8374:20:14"
                  },
                  "returnParameters": {
                    "id": 3142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3141,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3168,
                        "src": "8418:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3140,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8418:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8417:6:14"
                  },
                  "scope": 3433,
                  "src": "8353:265:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3202,
                    "nodeType": "Block",
                    "src": "8693:255:14",
                    "statements": [
                      {
                        "body": {
                          "id": 3192,
                          "nodeType": "Block",
                          "src": "8753:64:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 3190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3184,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3171,
                                  "src": "8768:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3185,
                                    "name": "_allocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2315,
                                    "src": "8777:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                                      "typeString": "mapping(contract IStrategy => uint256)"
                                    }
                                  },
                                  "id": 3189,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 3186,
                                      "name": "_strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2310,
                                      "src": "8790:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                        "typeString": "contract IStrategy[] storage ref"
                                      }
                                    },
                                    "id": 3188,
                                    "indexExpression": {
                                      "id": 3187,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3174,
                                      "src": "8802:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8790:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8777:28:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8768:37:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3191,
                              "nodeType": "ExpressionStatement",
                              "src": "8768:37:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3177,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3174,
                            "src": "8724:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3178,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "8728:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8740:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8728:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8724:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3193,
                        "initializationExpression": {
                          "assignments": [
                            3174
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3174,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8717:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3193,
                              "src": "8709:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3173,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8709:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3176,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8721:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8709:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8748:3:14",
                            "subExpression": {
                              "id": 3181,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3174,
                              "src": "8748:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3183,
                          "nodeType": "ExpressionStatement",
                          "src": "8748:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "8704:113:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3195,
                                "name": "total",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3171,
                                "src": "8851:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3196,
                                  "name": "Consts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4091,
                                  "src": "8860:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                    "typeString": "type(library Consts)"
                                  }
                                },
                                "id": 3197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8867:23:14",
                                "memberName": "STRATEGY_ALLOCATION_MAX",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4090,
                                "src": "8860:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8851:39:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c6c6f636174696f6e2065786365656473206d6178",
                              "id": 3199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8905:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cbaba8f519a39e9168d284fe3fa5c9cf7f69f3e30c0a5958a552771220980cef",
                                "typeString": "literal_string \"Allocation exceeds max\""
                              },
                              "value": "Allocation exceeds max"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cbaba8f519a39e9168d284fe3fa5c9cf7f69f3e30c0a5958a552771220980cef",
                                "typeString": "literal_string \"Allocation exceeds max\""
                              }
                            ],
                            "id": 3194,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8829:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8829:111:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3201,
                        "nodeType": "ExpressionStatement",
                        "src": "8829:111:14"
                      }
                    ]
                  },
                  "id": 3203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkAllocations",
                  "nameLocation": "8635:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8652:2:14"
                  },
                  "returnParameters": {
                    "id": 3172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3171,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "8686:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3203,
                        "src": "8678:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8678:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8677:15:14"
                  },
                  "scope": 3433,
                  "src": "8626:322:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3237,
                    "nodeType": "Block",
                    "src": "8997:218:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3206,
                            "name": "_checkAllocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3203,
                            "src": "9008:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9008:19:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3208,
                        "nodeType": "ExpressionStatement",
                        "src": "9008:19:14"
                      },
                      {
                        "body": {
                          "id": 3232,
                          "nodeType": "Block",
                          "src": "9089:100:14",
                          "statements": [
                            {
                              "assignments": [
                                3222
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3222,
                                  "mutability": "mutable",
                                  "name": "strategy",
                                  "nameLocation": "9114:8:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3232,
                                  "src": "9104:18:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$3943",
                                    "typeString": "contract IStrategy"
                                  },
                                  "typeName": {
                                    "id": 3221,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3220,
                                      "name": "IStrategy",
                                      "nameLocations": [
                                        "9104:9:14"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3943,
                                      "src": "9104:9:14"
                                    },
                                    "referencedDeclaration": 3943,
                                    "src": "9104:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3226,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3223,
                                  "name": "_strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "9125:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 3225,
                                "indexExpression": {
                                  "id": 3224,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3210,
                                  "src": "9137:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9125:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$3943",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9104:35:14"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 3227,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3222,
                                    "src": "9154:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "id": 3229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9163:12:14",
                                  "memberName": "exitStrategy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3896,
                                  "src": "9154:21:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 3230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9154:23:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3231,
                              "nodeType": "ExpressionStatement",
                              "src": "9154:23:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3213,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3210,
                            "src": "9060:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3214,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "9064:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9076:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9064:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9060:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3233,
                        "initializationExpression": {
                          "assignments": [
                            3210
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3210,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9053:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3233,
                              "src": "9045:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3209,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9045:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3212,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9057:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9045:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9084:3:14",
                            "subExpression": {
                              "id": 3217,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3210,
                              "src": "9084:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3219,
                          "nodeType": "ExpressionStatement",
                          "src": "9084:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "9040:149:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3234,
                            "name": "earn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "9201:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9201:6:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3236,
                        "nodeType": "ExpressionStatement",
                        "src": "9201:6:14"
                      }
                    ]
                  },
                  "id": 3238,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_onAllocationChanged",
                  "nameLocation": "8965:20:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3204,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8985:2:14"
                  },
                  "returnParameters": {
                    "id": 3205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8997:0:14"
                  },
                  "scope": 3433,
                  "src": "8956:259:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3252,
                    "nodeType": "Block",
                    "src": "9279:59:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3244,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3241,
                              "src": "9290:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9299:12:14",
                            "memberName": "exitStrategy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3896,
                            "src": "9290:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9290:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3248,
                        "nodeType": "ExpressionStatement",
                        "src": "9290:23:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3249,
                            "name": "earn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "9324:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9324:6:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3251,
                        "nodeType": "ExpressionStatement",
                        "src": "9324:6:14"
                      }
                    ]
                  },
                  "id": 3253,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_onRemoveStrategy",
                  "nameLocation": "9232:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3241,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "9260:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3253,
                        "src": "9250:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 3240,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3239,
                            "name": "IStrategy",
                            "nameLocations": [
                              "9250:9:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "9250:9:14"
                          },
                          "referencedDeclaration": 3943,
                          "src": "9250:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9249:20:14"
                  },
                  "returnParameters": {
                    "id": 3243,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9279:0:14"
                  },
                  "scope": 3433,
                  "src": "9223:115:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    4025
                  ],
                  "body": {
                    "id": 3268,
                    "nodeType": "Block",
                    "src": "9453:76:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3260,
                            "name": "lastHarvest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3258,
                            "src": "9464:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 3261,
                                  "name": "_strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "9478:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 3263,
                                "indexExpression": {
                                  "id": 3262,
                                  "name": "strategyIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3255,
                                  "src": "9490:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9478:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$3943",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 3264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9505:14:14",
                              "memberName": "getLastHarvest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3917,
                              "src": "9478:41:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9478:43:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9464:57:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3267,
                        "nodeType": "ExpressionStatement",
                        "src": "9464:57:14"
                      }
                    ]
                  },
                  "functionSelector": "a29b3c90",
                  "id": 3269,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLastHarvest",
                  "nameLocation": "9355:14:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3255,
                        "mutability": "mutable",
                        "name": "strategyIndex",
                        "nameLocation": "9388:13:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3269,
                        "src": "9380:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9380:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9369:39:14"
                  },
                  "returnParameters": {
                    "id": 3259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3258,
                        "mutability": "mutable",
                        "name": "lastHarvest",
                        "nameLocation": "9440:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3269,
                        "src": "9432:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9432:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9431:21:14"
                  },
                  "scope": 3433,
                  "src": "9346:183:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4030
                  ],
                  "body": {
                    "id": 3278,
                    "nodeType": "Block",
                    "src": "9595:40:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3274,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3272,
                            "src": "9606:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3275,
                            "name": "_allowedAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2306,
                            "src": "9614:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9606:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3277,
                        "nodeType": "ExpressionStatement",
                        "src": "9606:21:14"
                      }
                    ]
                  },
                  "functionSelector": "5c222bad",
                  "id": 3279,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAsset",
                  "nameLocation": "9546:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9554:2:14"
                  },
                  "returnParameters": {
                    "id": 3273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3272,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "9588:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3279,
                        "src": "9580:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9580:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9579:15:14"
                  },
                  "scope": 3433,
                  "src": "9537:98:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4037
                  ],
                  "body": {
                    "id": 3301,
                    "nodeType": "Block",
                    "src": "9741:111:14",
                    "statements": [
                      {
                        "assignments": [
                          3287
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3287,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "9760:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3301,
                            "src": "9752:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3286,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9752:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3290,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3288,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "9770:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9770:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9752:30:14"
                      },
                      {
                        "expression": {
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3291,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3284,
                            "src": "9793:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3292,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3287,
                                    "src": "9809:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 3293,
                                    "name": "lpAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3281,
                                    "src": "9819:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9809:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3295,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9808:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3296,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "9831:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 3297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9831:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9808:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9793:51:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3300,
                        "nodeType": "ExpressionStatement",
                        "src": "9793:51:14"
                      }
                    ]
                  },
                  "functionSelector": "6f7267b7",
                  "id": 3302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getShares",
                  "nameLocation": "9652:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3281,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "9680:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3302,
                        "src": "9672:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9672:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9661:34:14"
                  },
                  "returnParameters": {
                    "id": 3285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3284,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "9727:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3302,
                        "src": "9719:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9719:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9718:22:14"
                  },
                  "scope": 3433,
                  "src": "9643:209:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4042
                  ],
                  "body": {
                    "id": 3333,
                    "nodeType": "Block",
                    "src": "9925:179:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3307,
                            "name": "amountScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3305,
                            "src": "9936:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3308,
                              "name": "getAvailable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3367,
                              "src": "9951:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 3309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9951:14:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9936:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3311,
                        "nodeType": "ExpressionStatement",
                        "src": "9936:29:14"
                      },
                      {
                        "body": {
                          "id": 3331,
                          "nodeType": "Block",
                          "src": "10025:72:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 3329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3323,
                                  "name": "amountScaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3305,
                                  "src": "10040:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3324,
                                        "name": "_strategies",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2310,
                                        "src": "10056:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                          "typeString": "contract IStrategy[] storage ref"
                                        }
                                      },
                                      "id": 3326,
                                      "indexExpression": {
                                        "id": 3325,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3313,
                                        "src": "10068:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10056:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$3943",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 3327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10071:12:14",
                                    "memberName": "getBalanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3927,
                                    "src": "10056:27:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 3328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10056:29:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10040:45:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3330,
                              "nodeType": "ExpressionStatement",
                              "src": "10040:45:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3316,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "9996:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3317,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "10000:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10012:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10000:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9996:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3332,
                        "initializationExpression": {
                          "assignments": [
                            3313
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3313,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9989:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3332,
                              "src": "9981:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3312,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9981:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3315,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9993:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9981:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10020:3:14",
                            "subExpression": {
                              "id": 3320,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3313,
                              "src": "10020:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3322,
                          "nodeType": "ExpressionStatement",
                          "src": "10020:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "9976:121:14"
                      }
                    ]
                  },
                  "functionSelector": "12065fe0",
                  "id": 3334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalance",
                  "nameLocation": "9869:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9879:2:14"
                  },
                  "returnParameters": {
                    "id": 3306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3305,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "9911:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3334,
                        "src": "9903:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9903:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9902:22:14"
                  },
                  "scope": 3433,
                  "src": "9860:244:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4047
                  ],
                  "body": {
                    "id": 3366,
                    "nodeType": "Block",
                    "src": "10176:202:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3339,
                            "name": "_allowedAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2306,
                            "src": "10191:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3340,
                              "name": "Consts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "10208:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                "typeString": "type(library Consts)"
                              }
                            },
                            "id": 3341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10215:3:14",
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4078,
                            "src": "10208:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10191:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3364,
                          "nodeType": "Block",
                          "src": "10286:85:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 3362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3352,
                                  "name": "available",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3337,
                                  "src": "10301:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 3359,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "10353:4:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                            "typeString": "contract VaultUpgradeable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                            "typeString": "contract VaultUpgradeable"
                                          }
                                        ],
                                        "id": 3358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10345:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3357,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10345:7:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10345:13:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3354,
                                          "name": "_allowedAsset",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2306,
                                          "src": "10320:13:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3353,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1556,
                                        "src": "10313:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1556_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 3355,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10313:21:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1556",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 3356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10335:9:14",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1513,
                                    "src": "10313:31:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 3361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10313:46:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10301:58:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3363,
                              "nodeType": "ExpressionStatement",
                              "src": "10301:58:14"
                            }
                          ]
                        },
                        "id": 3365,
                        "nodeType": "IfStatement",
                        "src": "10187:184:14",
                        "trueBody": {
                          "id": 3351,
                          "nodeType": "Block",
                          "src": "10220:60:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 3349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3343,
                                  "name": "available",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3337,
                                  "src": "10235:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3346,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10255:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                          "typeString": "contract VaultUpgradeable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_VaultUpgradeable_$3433",
                                          "typeString": "contract VaultUpgradeable"
                                        }
                                      ],
                                      "id": 3345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10247:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3344,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10247:7:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10247:13:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10261:7:14",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "10247:21:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10235:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3350,
                              "nodeType": "ExpressionStatement",
                              "src": "10235:33:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "f9cc0605",
                  "id": 3367,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAvailable",
                  "nameLocation": "10121:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10133:2:14"
                  },
                  "returnParameters": {
                    "id": 3338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3337,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "10165:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3367,
                        "src": "10157:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10157:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10156:19:14"
                  },
                  "scope": 3433,
                  "src": "10112:266:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4055
                  ],
                  "body": {
                    "id": 3381,
                    "nodeType": "Block",
                    "src": "10488:54:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3375,
                            "name": "allocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3373,
                            "src": "10499:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 3376,
                              "name": "_allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2315,
                              "src": "10512:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                                "typeString": "mapping(contract IStrategy => uint256)"
                              }
                            },
                            "id": 3378,
                            "indexExpression": {
                              "id": 3377,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3370,
                              "src": "10525:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$3943",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10512:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10499:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3380,
                        "nodeType": "ExpressionStatement",
                        "src": "10499:35:14"
                      }
                    ]
                  },
                  "functionSelector": "0e022923",
                  "id": 3382,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllocation",
                  "nameLocation": "10395:13:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3370,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "10429:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3382,
                        "src": "10419:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 3369,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3368,
                            "name": "IStrategy",
                            "nameLocations": [
                              "10419:9:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "10419:9:14"
                          },
                          "referencedDeclaration": 3943,
                          "src": "10419:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10408:36:14"
                  },
                  "returnParameters": {
                    "id": 3374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3373,
                        "mutability": "mutable",
                        "name": "allocation",
                        "nameLocation": "10476:10:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3382,
                        "src": "10468:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10468:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10467:20:14"
                  },
                  "scope": 3433,
                  "src": "10386:156:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4062
                  ],
                  "body": {
                    "id": 3421,
                    "nodeType": "Block",
                    "src": "10660:219:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3389,
                            "name": "allocated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3385,
                            "src": "10671:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10683:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10671:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3392,
                        "nodeType": "ExpressionStatement",
                        "src": "10671:13:14"
                      },
                      {
                        "body": {
                          "id": 3412,
                          "nodeType": "Block",
                          "src": "10744:68:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 3410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3404,
                                  "name": "allocated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3385,
                                  "src": "10759:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3405,
                                    "name": "_allocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2315,
                                    "src": "10772:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$3943_$_t_uint256_$",
                                      "typeString": "mapping(contract IStrategy => uint256)"
                                    }
                                  },
                                  "id": 3409,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 3406,
                                      "name": "_strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2310,
                                      "src": "10785:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                        "typeString": "contract IStrategy[] storage ref"
                                      }
                                    },
                                    "id": 3408,
                                    "indexExpression": {
                                      "id": 3407,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3394,
                                      "src": "10797:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10785:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$3943",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10772:28:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10759:41:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3411,
                              "nodeType": "ExpressionStatement",
                              "src": "10759:41:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3397,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3394,
                            "src": "10715:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3398,
                              "name": "_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
                              "src": "10719:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 3399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10731:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10719:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10715:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3413,
                        "initializationExpression": {
                          "assignments": [
                            3394
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3394,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10708:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 3413,
                              "src": "10700:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3393,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10700:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3396,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10712:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10700:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10739:3:14",
                            "subExpression": {
                              "id": 3401,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3394,
                              "src": "10739:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3403,
                          "nodeType": "ExpressionStatement",
                          "src": "10739:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "10695:117:14"
                      },
                      {
                        "expression": {
                          "id": 3419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3414,
                            "name": "idle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3387,
                            "src": "10822:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3415,
                                "name": "Consts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4091,
                                "src": "10829:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Consts_$4091_$",
                                  "typeString": "type(library Consts)"
                                }
                              },
                              "id": 3416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10836:23:14",
                              "memberName": "STRATEGY_ALLOCATION_MAX",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4090,
                              "src": "10829:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3417,
                              "name": "allocated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3385,
                              "src": "10862:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10829:42:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10822:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3420,
                        "nodeType": "ExpressionStatement",
                        "src": "10822:49:14"
                      }
                    ]
                  },
                  "functionSelector": "4051ddac",
                  "id": 3422,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSummary",
                  "nameLocation": "10559:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10569:2:14"
                  },
                  "returnParameters": {
                    "id": 3388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3385,
                        "mutability": "mutable",
                        "name": "allocated",
                        "nameLocation": "10630:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3422,
                        "src": "10622:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3384,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10622:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3387,
                        "mutability": "mutable",
                        "name": "idle",
                        "nameLocation": "10649:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3422,
                        "src": "10641:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10641:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10621:33:14"
                  },
                  "scope": 3433,
                  "src": "10550:329:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4069
                  ],
                  "body": {
                    "id": 3431,
                    "nodeType": "Block",
                    "src": "10998:37:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3429,
                          "name": "_strategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2310,
                          "src": "11016:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage",
                            "typeString": "contract IStrategy[] storage ref"
                          }
                        },
                        "functionReturnParameters": 3428,
                        "id": 3430,
                        "nodeType": "Return",
                        "src": "11009:18:14"
                      }
                    ]
                  },
                  "functionSelector": "b49a60bb",
                  "id": 3432,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStrategies",
                  "nameLocation": "10896:13:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10909:2:14"
                  },
                  "returnParameters": {
                    "id": 3428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3427,
                        "mutability": "mutable",
                        "name": "strategies",
                        "nameLocation": "10981:10:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3432,
                        "src": "10962:29:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3425,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3424,
                              "name": "IStrategy",
                              "nameLocations": [
                                "10962:9:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3943,
                              "src": "10962:9:14"
                            },
                            "referencedDeclaration": 3943,
                            "src": "10962:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$3943",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "id": 3426,
                          "nodeType": "ArrayTypeName",
                          "src": "10962:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr",
                            "typeString": "contract IStrategy[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10961:31:14"
                  },
                  "scope": 3433,
                  "src": "10887:148:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3434,
              "src": "723:10315:14",
              "usedErrors": [
                98,
                103,
                279,
                282,
                1353,
                1358,
                1363,
                1372,
                1377,
                1382,
                1626
              ],
              "usedEvents": [
                109,
                287,
                1490,
                1499
              ]
            }
          ],
          "src": "40:11000:14"
        },
        "id": 14
      },
      "contracts/interfaces/IAccount.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAccount.sol",
          "exportedSymbols": {
            "Enums": [
              4106
            ],
            "IAccount": [
              3505
            ],
            "IAgent": [
              3686
            ],
            "IVault": [
              4070
            ]
          },
          "id": 3506,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3435,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:15"
            },
            {
              "absolutePath": "contracts/interfaces/IVault.sol",
              "file": "./IVault.sol",
              "id": 3437,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3506,
              "sourceUnit": 4071,
              "src": "68:36:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3436,
                    "name": "IVault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4070,
                    "src": "76:6:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAgent.sol",
              "file": "./IAgent.sol",
              "id": 3439,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3506,
              "sourceUnit": 3687,
              "src": "106:36:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3438,
                    "name": "IAgent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3686,
                    "src": "114:6:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Enums.sol",
              "file": "../libs/Enums.sol",
              "id": 3441,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3506,
              "sourceUnit": 4107,
              "src": "144:40:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3440,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "152:5:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccount",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3505,
              "linearizedBaseContracts": [
                3505
              ],
              "name": "IAccount",
              "nameLocation": "198:8:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "2d66f07f",
                  "id": 3449,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setModeFor",
                  "nameLocation": "223:10:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3443,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "242:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3449,
                        "src": "234:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "234:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3446,
                        "mutability": "mutable",
                        "name": "mode",
                        "nameLocation": "269:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3449,
                        "src": "249:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AutoPilotMode_$4096",
                          "typeString": "enum Enums.AutoPilotMode"
                        },
                        "typeName": {
                          "id": 3445,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3444,
                            "name": "Enums.AutoPilotMode",
                            "nameLocations": [
                              "249:5:15",
                              "255:13:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4096,
                            "src": "249:19:15"
                          },
                          "referencedDeclaration": 4096,
                          "src": "249:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AutoPilotMode_$4096",
                            "typeString": "enum Enums.AutoPilotMode"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "233:41:15"
                  },
                  "returnParameters": {
                    "id": 3448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "283:0:15"
                  },
                  "scope": 3505,
                  "src": "214:70:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "47e7ef24",
                  "id": 3456,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "301:7:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3451,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "317:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3456,
                        "src": "309:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3453,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "332:12:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3456,
                        "src": "324:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3452,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "308:37:15"
                  },
                  "returnParameters": {
                    "id": 3455,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "362:0:15"
                  },
                  "scope": 3505,
                  "src": "292:71:15",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "de6d6d96",
                  "id": 3465,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "380:8:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3459,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "416:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3465,
                        "src": "399:23:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3457,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "399:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3458,
                          "nodeType": "ArrayTypeName",
                          "src": "399:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3462,
                        "mutability": "mutable",
                        "name": "amountsScaled",
                        "nameLocation": "450:13:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3465,
                        "src": "433:30:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3460,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "433:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3461,
                          "nodeType": "ArrayTypeName",
                          "src": "433:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "388:82:15"
                  },
                  "returnParameters": {
                    "id": 3464,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "479:0:15"
                  },
                  "scope": 3505,
                  "src": "371:109:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ce8c42e8",
                  "id": 3470,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToVault",
                  "nameLocation": "497:15:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3468,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3467,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "521:12:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3470,
                        "src": "513:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3466,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "513:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "512:22:15"
                  },
                  "returnParameters": {
                    "id": 3469,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "543:0:15"
                  },
                  "scope": 3505,
                  "src": "488:56:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d570e954",
                  "id": 3477,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addAgents",
                  "nameLocation": "561:9:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3475,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3474,
                        "mutability": "mutable",
                        "name": "agentsToAdd",
                        "nameLocation": "587:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3477,
                        "src": "571:27:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAgent_$3686_$dyn_memory_ptr",
                          "typeString": "contract IAgent[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3472,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3471,
                              "name": "IAgent",
                              "nameLocations": [
                                "571:6:15"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3686,
                              "src": "571:6:15"
                            },
                            "referencedDeclaration": 3686,
                            "src": "571:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgent_$3686",
                              "typeString": "contract IAgent"
                            }
                          },
                          "id": 3473,
                          "nodeType": "ArrayTypeName",
                          "src": "571:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAgent_$3686_$dyn_storage_ptr",
                            "typeString": "contract IAgent[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "570:29:15"
                  },
                  "returnParameters": {
                    "id": 3476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "608:0:15"
                  },
                  "scope": 3505,
                  "src": "552:57:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "93a9f24d",
                  "id": 3484,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeAgents",
                  "nameLocation": "626:12:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3481,
                        "mutability": "mutable",
                        "name": "agentsToRemove",
                        "nameLocation": "655:14:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3484,
                        "src": "639:30:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAgent_$3686_$dyn_memory_ptr",
                          "typeString": "contract IAgent[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3479,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3478,
                              "name": "IAgent",
                              "nameLocations": [
                                "639:6:15"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3686,
                              "src": "639:6:15"
                            },
                            "referencedDeclaration": 3686,
                            "src": "639:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgent_$3686",
                              "typeString": "contract IAgent"
                            }
                          },
                          "id": 3480,
                          "nodeType": "ArrayTypeName",
                          "src": "639:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAgent_$3686_$dyn_storage_ptr",
                            "typeString": "contract IAgent[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "638:32:15"
                  },
                  "returnParameters": {
                    "id": 3483,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "679:0:15"
                  },
                  "scope": 3505,
                  "src": "617:63:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "eac3fda4",
                  "id": 3491,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgents",
                  "nameLocation": "697:9:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3485,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "706:2:15"
                  },
                  "returnParameters": {
                    "id": 3490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3489,
                        "mutability": "mutable",
                        "name": "agents",
                        "nameLocation": "748:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3491,
                        "src": "732:22:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAgent_$3686_$dyn_memory_ptr",
                          "typeString": "contract IAgent[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3487,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3486,
                              "name": "IAgent",
                              "nameLocations": [
                                "732:6:15"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3686,
                              "src": "732:6:15"
                            },
                            "referencedDeclaration": 3686,
                            "src": "732:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgent_$3686",
                              "typeString": "contract IAgent"
                            }
                          },
                          "id": 3488,
                          "nodeType": "ArrayTypeName",
                          "src": "732:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAgent_$3686_$dyn_storage_ptr",
                            "typeString": "contract IAgent[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "731:24:15"
                  },
                  "scope": 3505,
                  "src": "688:68:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2cde49f4",
                  "id": 3499,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkIsAgent",
                  "nameLocation": "773:12:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3494,
                        "mutability": "mutable",
                        "name": "agent",
                        "nameLocation": "793:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3499,
                        "src": "786:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgent_$3686",
                          "typeString": "contract IAgent"
                        },
                        "typeName": {
                          "id": 3493,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3492,
                            "name": "IAgent",
                            "nameLocations": [
                              "786:6:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3686,
                            "src": "786:6:15"
                          },
                          "referencedDeclaration": 3686,
                          "src": "786:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAgent_$3686",
                            "typeString": "contract IAgent"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "785:14:15"
                  },
                  "returnParameters": {
                    "id": 3498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3497,
                        "mutability": "mutable",
                        "name": "isAgent",
                        "nameLocation": "828:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3499,
                        "src": "823:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3496,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:14:15"
                  },
                  "scope": 3505,
                  "src": "764:73:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "893d20e8",
                  "id": 3504,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOwner",
                  "nameLocation": "854:8:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "862:2:15"
                  },
                  "returnParameters": {
                    "id": 3503,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3502,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "896:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3504,
                        "src": "888:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "887:17:15"
                  },
                  "scope": 3505,
                  "src": "845:60:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3506,
              "src": "188:720:15",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:870:15"
        },
        "id": 15
      },
      "contracts/interfaces/IAccountFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAccountFactory.sol",
          "exportedSymbols": {
            "IAccount": [
              3505
            ],
            "IAccountFactory": [
              3530
            ]
          },
          "id": 3531,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3507,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:16"
            },
            {
              "absolutePath": "contracts/interfaces/IAccount.sol",
              "file": "./IAccount.sol",
              "id": 3509,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3531,
              "sourceUnit": 3506,
              "src": "68:40:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3508,
                    "name": "IAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "76:8:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccountFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3530,
              "linearizedBaseContracts": [
                3530
              ],
              "name": "IAccountFactory",
              "nameLocation": "122:15:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "ac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc8",
                  "id": 3515,
                  "name": "AccountCreated",
                  "nameLocation": "151:14:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3511,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "182:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3515,
                        "src": "166:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3510,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "166:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3513,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "197:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3515,
                        "src": "189:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "189:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "165:40:16"
                  },
                  "src": "145:61:16"
                },
                {
                  "functionSelector": "9dca362f",
                  "id": 3521,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createAccount",
                  "nameLocation": "223:13:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "236:2:16"
                  },
                  "returnParameters": {
                    "id": 3520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3519,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "266:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3521,
                        "src": "257:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3518,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3517,
                            "name": "IAccount",
                            "nameLocations": [
                              "257:8:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "257:8:16"
                          },
                          "referencedDeclaration": 3505,
                          "src": "257:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "256:18:16"
                  },
                  "scope": 3530,
                  "src": "214:61:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fbcbc0f1",
                  "id": 3529,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAccount",
                  "nameLocation": "292:10:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3523,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "311:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3529,
                        "src": "303:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:15:16"
                  },
                  "returnParameters": {
                    "id": 3528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3527,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "350:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3529,
                        "src": "341:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3526,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3525,
                            "name": "IAccount",
                            "nameLocations": [
                              "341:8:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "341:8:16"
                          },
                          "referencedDeclaration": 3505,
                          "src": "341:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "340:18:16"
                  },
                  "scope": 3530,
                  "src": "283:76:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3531,
              "src": "112:250:16",
              "usedErrors": [],
              "usedEvents": [
                3515
              ]
            }
          ],
          "src": "40:324:16"
        },
        "id": 16
      },
      "contracts/interfaces/IAddressesProvider.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAddressesProvider.sol",
          "exportedSymbols": {
            "IAddressesProvider": [
              3553
            ]
          },
          "id": 3554,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3532,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAddressesProvider",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3553,
              "linearizedBaseContracts": [
                3553
              ],
              "name": "IAddressesProvider",
              "nameLocation": "78:18:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4a812284",
                  "id": 3537,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAfterYieldOracle",
                  "nameLocation": "113:19:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3533,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "132:2:17"
                  },
                  "returnParameters": {
                    "id": 3536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3535,
                        "mutability": "mutable",
                        "name": "afterYieldFunctions",
                        "nameLocation": "193:19:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3537,
                        "src": "185:27:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "184:29:17"
                  },
                  "scope": 3553,
                  "src": "104:110:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0f63be01",
                  "id": 3542,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAfterYieldFunctions",
                  "nameLocation": "231:22:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "253:2:17"
                  },
                  "returnParameters": {
                    "id": 3541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3540,
                        "mutability": "mutable",
                        "name": "afterYieldOracle",
                        "nameLocation": "314:16:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3542,
                        "src": "306:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "306:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "305:26:17"
                  },
                  "scope": 3553,
                  "src": "222:110:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9068a868",
                  "id": 3547,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAccountFactory",
                  "nameLocation": "349:17:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "366:2:17"
                  },
                  "returnParameters": {
                    "id": 3546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3545,
                        "mutability": "mutable",
                        "name": "accountFactory",
                        "nameLocation": "400:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3547,
                        "src": "392:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "392:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "391:24:17"
                  },
                  "scope": 3553,
                  "src": "340:76:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "12fde4b7",
                  "id": 3552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeCollector",
                  "nameLocation": "433:15:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3548,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "448:2:17"
                  },
                  "returnParameters": {
                    "id": 3551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3550,
                        "mutability": "mutable",
                        "name": "feeCollector",
                        "nameLocation": "482:12:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3552,
                        "src": "474:20:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "474:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "473:22:17"
                  },
                  "scope": 3553,
                  "src": "424:72:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3554,
              "src": "68:431:17",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:461:17"
        },
        "id": 17
      },
      "contracts/interfaces/IAfterYieldFunctions.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAfterYieldFunctions.sol",
          "exportedSymbols": {
            "Enums": [
              4106
            ],
            "IAfterYieldFunctions": [
              3578
            ]
          },
          "id": 3579,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3555,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:18"
            },
            {
              "absolutePath": "contracts/libs/Enums.sol",
              "file": "../libs/Enums.sol",
              "id": 3557,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3579,
              "sourceUnit": 4107,
              "src": "68:40:18",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3556,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "76:5:18",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAfterYieldFunctions",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3578,
              "linearizedBaseContracts": [
                3578
              ],
              "name": "IAfterYieldFunctions",
              "nameLocation": "122:20:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "7bab0ec163b5c132c72b8146ac4d6e067e82ed58f8b131150aa71c9258911562",
                  "id": 3565,
                  "name": "OCRResponse",
                  "nameLocation": "156:11:18",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3559,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "184:9:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3565,
                        "src": "168:25:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3558,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "168:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3561,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "201:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3565,
                        "src": "195:12:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3560,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3563,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "215:3:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3565,
                        "src": "209:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3562,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "209:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "167:52:18"
                  },
                  "src": "150:70:18"
                },
                {
                  "functionSelector": "72642f2b",
                  "id": 3577,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "makeRequest",
                  "nameLocation": "237:11:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3568,
                        "mutability": "mutable",
                        "name": "taskType",
                        "nameLocation": "274:8:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3577,
                        "src": "259:23:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TaskType_$4105",
                          "typeString": "enum Enums.TaskType"
                        },
                        "typeName": {
                          "id": 3567,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3566,
                            "name": "Enums.TaskType",
                            "nameLocations": [
                              "259:5:18",
                              "265:8:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4105,
                            "src": "259:14:18"
                          },
                          "referencedDeclaration": 4105,
                          "src": "259:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TaskType_$4105",
                            "typeString": "enum Enums.TaskType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3570,
                        "mutability": "mutable",
                        "name": "subscriptionId",
                        "nameLocation": "300:14:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3577,
                        "src": "293:21:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 3569,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "293:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3572,
                        "mutability": "mutable",
                        "name": "gasLimit",
                        "nameLocation": "332:8:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3577,
                        "src": "325:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 3571,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "325:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "248:99:18"
                  },
                  "returnParameters": {
                    "id": 3576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3575,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "374:9:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 3577,
                        "src": "366:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3574,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "366:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "365:19:18"
                  },
                  "scope": 3578,
                  "src": "228:157:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3579,
              "src": "112:276:18",
              "usedErrors": [],
              "usedEvents": [
                3565
              ]
            }
          ],
          "src": "40:350:18"
        },
        "id": 18
      },
      "contracts/interfaces/IAgent.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAgent.sol",
          "exportedSymbols": {
            "Enums": [
              4106
            ],
            "IAccount": [
              3505
            ],
            "IAgent": [
              3686
            ],
            "IERC20": [
              1556
            ],
            "IVault": [
              4070
            ]
          },
          "id": 3687,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3580,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:19"
            },
            {
              "absolutePath": "contracts/interfaces/IVault.sol",
              "file": "./IVault.sol",
              "id": 3582,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3687,
              "sourceUnit": 4071,
              "src": "68:36:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3581,
                    "name": "IVault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4070,
                    "src": "76:6:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAccount.sol",
              "file": "./IAccount.sol",
              "id": 3584,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3687,
              "sourceUnit": 3506,
              "src": "106:40:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3583,
                    "name": "IAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "114:8:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Enums.sol",
              "file": "../libs/Enums.sol",
              "id": 3586,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3687,
              "sourceUnit": 4107,
              "src": "148:40:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3585,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "156:5:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3588,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3687,
              "sourceUnit": 1557,
              "src": "190:70:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3587,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "198:6:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAgent",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3686,
              "linearizedBaseContracts": [
                3686
              ],
              "name": "IAgent",
              "nameLocation": "274:6:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "af80aa5cc016b82830abf03e3110890fcd831f57410495acdf9cc3b3973129e9",
                  "id": 3595,
                  "name": "Approval",
                  "nameLocation": "294:8:19",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3590,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "311:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3595,
                        "src": "303:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3593,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "339:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3595,
                        "src": "320:23:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 3592,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3591,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "320:5:19",
                              "326:12:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "320:18:19"
                          },
                          "referencedDeclaration": 4101,
                          "src": "320:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:42:19"
                  },
                  "src": "288:57:19"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4b07b434919e25d56e2425b6a75582bf959a6da1da0d8f1d7e47c77267a35e6b",
                  "id": 3603,
                  "name": "BeforeTask",
                  "nameLocation": "357:10:19",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3597,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "376:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3603,
                        "src": "368:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "368:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3599,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agent",
                        "nameLocation": "393:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3603,
                        "src": "385:13:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "385:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3601,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "hasFunds",
                        "nameLocation": "405:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3603,
                        "src": "400:13:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3600,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "400:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "367:47:19"
                  },
                  "src": "351:64:19"
                },
                {
                  "functionSelector": "e76e8cad",
                  "id": 3616,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositFromAccount",
                  "nameLocation": "432:18:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3606,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "468:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3616,
                        "src": "461:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$4070",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 3605,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3604,
                            "name": "IVault",
                            "nameLocations": [
                              "461:6:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4070,
                            "src": "461:6:19"
                          },
                          "referencedDeclaration": 4070,
                          "src": "461:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$4070",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3608,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "492:12:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3616,
                        "src": "484:20:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3607,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "484:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3611,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "524:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3616,
                        "src": "515:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3610,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3609,
                            "name": "IAccount",
                            "nameLocations": [
                              "515:8:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "515:8:19"
                          },
                          "referencedDeclaration": 3505,
                          "src": "515:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "450:88:19"
                  },
                  "returnParameters": {
                    "id": 3615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3614,
                        "mutability": "mutable",
                        "name": "lpMinted",
                        "nameLocation": "565:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3616,
                        "src": "557:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3613,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "557:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "556:18:19"
                  },
                  "scope": 3686,
                  "src": "423:152:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0ff199de",
                  "id": 3629,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToAccount",
                  "nameLocation": "592:17:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3619,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "627:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3629,
                        "src": "620:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$4070",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 3618,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3617,
                            "name": "IVault",
                            "nameLocations": [
                              "620:6:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4070,
                            "src": "620:6:19"
                          },
                          "referencedDeclaration": 4070,
                          "src": "620:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$4070",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3621,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "651:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3629,
                        "src": "643:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3624,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "679:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3629,
                        "src": "670:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3623,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3622,
                            "name": "IAccount",
                            "nameLocations": [
                              "670:8:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "670:8:19"
                          },
                          "referencedDeclaration": 3505,
                          "src": "670:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "609:84:19"
                  },
                  "returnParameters": {
                    "id": 3628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3627,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "720:12:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3629,
                        "src": "712:20:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "712:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "711:22:19"
                  },
                  "scope": 3686,
                  "src": "583:151:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4a86e1a6",
                  "id": 3640,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAllToAccount",
                  "nameLocation": "751:20:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3632,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "789:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3640,
                        "src": "782:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$4070",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 3631,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3630,
                            "name": "IVault",
                            "nameLocations": [
                              "782:6:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4070,
                            "src": "782:6:19"
                          },
                          "referencedDeclaration": 4070,
                          "src": "782:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$4070",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3635,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "814:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3640,
                        "src": "805:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3634,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3633,
                            "name": "IAccount",
                            "nameLocations": [
                              "805:8:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "805:8:19"
                          },
                          "referencedDeclaration": 3505,
                          "src": "805:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "771:57:19"
                  },
                  "returnParameters": {
                    "id": 3639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3638,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "855:12:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3640,
                        "src": "847:20:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "846:22:19"
                  },
                  "scope": 3686,
                  "src": "742:127:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4b837649",
                  "id": 3645,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addStrategy",
                  "nameLocation": "886:11:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3642,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "911:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3645,
                        "src": "898:21:19",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3641,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "898:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "897:23:19"
                  },
                  "returnParameters": {
                    "id": 3644,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "929:0:19"
                  },
                  "scope": 3686,
                  "src": "877:53:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "47a471a1",
                  "id": 3650,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeStrategy",
                  "nameLocation": "947:14:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3648,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3647,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "975:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3650,
                        "src": "962:21:19",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3646,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "962:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "961:23:19"
                  },
                  "returnParameters": {
                    "id": 3649,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "993:0:19"
                  },
                  "scope": 3686,
                  "src": "938:56:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e0ab4650",
                  "id": 3655,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "reallocation",
                  "nameLocation": "1011:12:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3652,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "1037:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3655,
                        "src": "1024:21:19",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3651,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1024:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1023:23:19"
                  },
                  "returnParameters": {
                    "id": 3654,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1055:0:19"
                  },
                  "scope": 3686,
                  "src": "1002:54:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fca0025d",
                  "id": 3661,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1073:7:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3658,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "1100:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3661,
                        "src": "1081:23:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 3657,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3656,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "1081:5:19",
                              "1087:12:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "1081:18:19"
                          },
                          "referencedDeclaration": 4101,
                          "src": "1081:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1080:25:19"
                  },
                  "returnParameters": {
                    "id": 3660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1114:0:19"
                  },
                  "scope": 3686,
                  "src": "1064:51:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3e5beab9",
                  "id": 3670,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1132:9:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3664,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1161:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3670,
                        "src": "1152:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3663,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3662,
                            "name": "IAccount",
                            "nameLocations": [
                              "1152:8:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "1152:8:19"
                          },
                          "referencedDeclaration": 3505,
                          "src": "1152:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1141:34:19"
                  },
                  "returnParameters": {
                    "id": 3669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3668,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "1218:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3670,
                        "src": "1199:23:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 3667,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3666,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "1199:5:19",
                              "1205:12:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "1199:18:19"
                          },
                          "referencedDeclaration": 4101,
                          "src": "1199:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1198:25:19"
                  },
                  "scope": 3686,
                  "src": "1123:101:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ca709a25",
                  "id": 3676,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeToken",
                  "nameLocation": "1241:11:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1252:2:19"
                  },
                  "returnParameters": {
                    "id": 3675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3674,
                        "mutability": "mutable",
                        "name": "feeToken",
                        "nameLocation": "1285:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3676,
                        "src": "1278:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1556",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 3673,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3672,
                            "name": "IERC20",
                            "nameLocations": [
                              "1278:6:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1556,
                            "src": "1278:6:19"
                          },
                          "referencedDeclaration": 1556,
                          "src": "1278:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1556",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1277:17:19"
                  },
                  "scope": 3686,
                  "src": "1232:63:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f887cf00",
                  "id": 3685,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkApproval",
                  "nameLocation": "1312:13:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3679,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1345:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3685,
                        "src": "1336:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3678,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3677,
                            "name": "IAccount",
                            "nameLocations": [
                              "1336:8:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "1336:8:19"
                          },
                          "referencedDeclaration": 3505,
                          "src": "1336:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3682,
                        "mutability": "mutable",
                        "name": "flag",
                        "nameLocation": "1382:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 3685,
                        "src": "1363:23:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                          "typeString": "enum Enums.ApprovalFlag"
                        },
                        "typeName": {
                          "id": 3681,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3680,
                            "name": "Enums.ApprovalFlag",
                            "nameLocations": [
                              "1363:5:19",
                              "1369:12:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4101,
                            "src": "1363:18:19"
                          },
                          "referencedDeclaration": 4101,
                          "src": "1363:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ApprovalFlag_$4101",
                            "typeString": "enum Enums.ApprovalFlag"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1325:68:19"
                  },
                  "returnParameters": {
                    "id": 3684,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1407:0:19"
                  },
                  "scope": 3686,
                  "src": "1303:105:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3687,
              "src": "264:1147:19",
              "usedErrors": [],
              "usedEvents": [
                3595,
                3603
              ]
            }
          ],
          "src": "40:1373:19"
        },
        "id": 19
      },
      "contracts/interfaces/IBaseStrategy.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IBaseStrategy.sol",
          "exportedSymbols": {
            "IBaseStrategy": [
              3815
            ],
            "IERC20": [
              1556
            ],
            "IFeeCollector": [
              3859
            ]
          },
          "id": 3816,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3688,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:20"
            },
            {
              "absolutePath": "contracts/interfaces/IFeeCollector.sol",
              "file": "./IFeeCollector.sol",
              "id": 3690,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3816,
              "sourceUnit": 3860,
              "src": "68:50:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3689,
                    "name": "IFeeCollector",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3859,
                    "src": "76:13:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3692,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3816,
              "sourceUnit": 1557,
              "src": "120:70:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3691,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "128:6:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBaseStrategy",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3815,
              "linearizedBaseContracts": [
                3815
              ],
              "name": "IBaseStrategy",
              "nameLocation": "204:13:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426",
                  "id": 3696,
                  "name": "Deposit",
                  "nameLocation": "231:7:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3694,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "247:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3696,
                        "src": "239:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3693,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "239:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "238:22:20"
                  },
                  "src": "225:36:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d",
                  "id": 3700,
                  "name": "Withdraw",
                  "nameLocation": "273:8:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3699,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3698,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "290:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3700,
                        "src": "282:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3697,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "282:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "281:22:20"
                  },
                  "src": "267:37:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "818d6ac90c5da038e3ce97fe5c8cbd5c3720fdc8e5a6c1665d601628794b0114",
                  "id": 3704,
                  "name": "VaultSetted",
                  "nameLocation": "316:11:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3702,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "336:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3704,
                        "src": "328:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3701,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "328:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "327:15:20"
                  },
                  "src": "310:33:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "efa2ab35845db19854512f0064b524dec97aa8fbf004e0c505dc9ff691340c98",
                  "id": 3708,
                  "name": "StrategyFeeIdSetted",
                  "nameLocation": "355:19:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3706,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeId",
                        "nameLocation": "383:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3708,
                        "src": "375:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3705,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "375:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "374:15:20"
                  },
                  "src": "349:41:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b6b745e6274b3b4bddb8f8e1abe1780e23715ae20e9e98871bbaaafa71117b82",
                  "id": 3712,
                  "name": "WithdrawalFeeSetted",
                  "nameLocation": "402:19:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3710,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "430:3:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3712,
                        "src": "422:11:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "422:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "421:13:20"
                  },
                  "src": "396:39:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e619ee6c13633271d53eb38d623fa8b077c06e8443c914af1ec745aaf3c9f9a8",
                  "id": 3716,
                  "name": "SwapRouterSetted",
                  "nameLocation": "447:16:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3714,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "router",
                        "nameLocation": "472:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3716,
                        "src": "464:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3713,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "463:16:20"
                  },
                  "src": "441:39:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cacb29288aca892f0969d6cda0607946bb31ef78b004e541423b04da5bc8842e",
                  "id": 3720,
                  "name": "ManagerSetted",
                  "nameLocation": "492:13:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3719,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3718,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "manager",
                        "nameLocation": "514:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3720,
                        "src": "506:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "506:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "505:17:20"
                  },
                  "src": "486:37:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5f5efa858752444f35895d1a3a466db6cf3e319d27bac0a5b9bfe359fe49c4e0",
                  "id": 3724,
                  "name": "StrategistSetted",
                  "nameLocation": "535:16:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3722,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "manager",
                        "nameLocation": "560:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3724,
                        "src": "552:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3721,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "552:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "551:17:20"
                  },
                  "src": "529:40:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b4fd7c525e4699047ffa750e100b105a6cb7ef166a17f93af958ed73cc44668d",
                  "id": 3728,
                  "name": "FeeRecipientSetted",
                  "nameLocation": "581:18:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3726,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeRecipient",
                        "nameLocation": "608:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "600:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "600:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "599:22:20"
                  },
                  "src": "575:47:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9c845dd2e74c50b3e7ff8a9624a1239f2f8b1f4ccb10e7f93f87e2bef841887f",
                  "id": 3732,
                  "name": "FeeCollectorSetted",
                  "nameLocation": "634:18:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3731,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3730,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeCollector",
                        "nameLocation": "661:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3732,
                        "src": "653:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "653:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "652:22:20"
                  },
                  "src": "628:47:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "51e908723a339cd8d3fd3d8a2e4f2bdde81ddb7d26ca1753f1f515e0b07a513b",
                  "id": 3740,
                  "name": "StrategyHarvest",
                  "nameLocation": "687:15:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3734,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "harvester",
                        "nameLocation": "721:9:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3740,
                        "src": "713:17:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3733,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "713:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3736,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "assetHarvested",
                        "nameLocation": "749:14:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3740,
                        "src": "741:22:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3735,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3738,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tvl",
                        "nameLocation": "782:3:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3740,
                        "src": "774:11:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "774:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "702:90:20"
                  },
                  "src": "681:112:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d255b592c7f268a73e534da5219a60ff911b4cf6daae21c7d20527dd657bd99a",
                  "id": 3748,
                  "name": "ChargedFees",
                  "nameLocation": "805:11:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3742,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "callFeeAmount",
                        "nameLocation": "835:13:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3748,
                        "src": "827:21:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "827:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3744,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeAmount",
                        "nameLocation": "867:9:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3748,
                        "src": "859:17:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3743,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3746,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "strategistFeeAmount",
                        "nameLocation": "895:19:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3748,
                        "src": "887:27:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:105:20"
                  },
                  "src": "799:123:20"
                },
                {
                  "functionSelector": "19a501ad",
                  "id": 3753,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setStrategyFeeId",
                  "nameLocation": "939:16:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3750,
                        "mutability": "mutable",
                        "name": "newFeeId",
                        "nameLocation": "964:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3753,
                        "src": "956:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "956:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "955:18:20"
                  },
                  "returnParameters": {
                    "id": 3752,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "982:0:20"
                  },
                  "scope": 3815,
                  "src": "930:53:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ac1e5025",
                  "id": 3758,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setWithdrawalFee",
                  "nameLocation": "1000:16:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3755,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "1025:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3758,
                        "src": "1017:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3754,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:16:20"
                  },
                  "returnParameters": {
                    "id": 3757,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1041:0:20"
                  },
                  "scope": 3815,
                  "src": "991:51:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6817031b",
                  "id": 3763,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setVault",
                  "nameLocation": "1059:8:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3760,
                        "mutability": "mutable",
                        "name": "newVault",
                        "nameLocation": "1076:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3763,
                        "src": "1068:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1067:18:20"
                  },
                  "returnParameters": {
                    "id": 3762,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1094:0:20"
                  },
                  "scope": 3815,
                  "src": "1050:45:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "41273657",
                  "id": 3768,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSwapRouter",
                  "nameLocation": "1112:13:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3766,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3765,
                        "mutability": "mutable",
                        "name": "newRouter",
                        "nameLocation": "1134:9:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3768,
                        "src": "1126:17:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1126:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1125:19:20"
                  },
                  "returnParameters": {
                    "id": 3767,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1153:0:20"
                  },
                  "scope": 3815,
                  "src": "1103:51:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d0ebdbe7",
                  "id": 3773,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setManager",
                  "nameLocation": "1171:10:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3770,
                        "mutability": "mutable",
                        "name": "newManager",
                        "nameLocation": "1190:10:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3773,
                        "src": "1182:18:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1182:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1181:20:20"
                  },
                  "returnParameters": {
                    "id": 3772,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1210:0:20"
                  },
                  "scope": 3815,
                  "src": "1162:49:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c7b9d530",
                  "id": 3778,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setStrategist",
                  "nameLocation": "1228:13:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3776,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3775,
                        "mutability": "mutable",
                        "name": "newStrategist",
                        "nameLocation": "1250:13:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3778,
                        "src": "1242:21:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3774,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1242:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1241:23:20"
                  },
                  "returnParameters": {
                    "id": 3777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1273:0:20"
                  },
                  "scope": 3815,
                  "src": "1219:55:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e74b981b",
                  "id": 3783,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeRecipient",
                  "nameLocation": "1291:15:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3780,
                        "mutability": "mutable",
                        "name": "newFeeRecipient",
                        "nameLocation": "1315:15:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3783,
                        "src": "1307:23:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1307:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1306:25:20"
                  },
                  "returnParameters": {
                    "id": 3782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1340:0:20"
                  },
                  "scope": 3815,
                  "src": "1282:59:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a42dce80",
                  "id": 3789,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeCollector",
                  "nameLocation": "1358:15:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3787,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3786,
                        "mutability": "mutable",
                        "name": "newFeeCollector",
                        "nameLocation": "1388:15:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3789,
                        "src": "1374:29:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFeeCollector_$3859",
                          "typeString": "contract IFeeCollector"
                        },
                        "typeName": {
                          "id": 3785,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3784,
                            "name": "IFeeCollector",
                            "nameLocations": [
                              "1374:13:20"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3859,
                            "src": "1374:13:20"
                          },
                          "referencedDeclaration": 3859,
                          "src": "1374:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFeeCollector_$3859",
                            "typeString": "contract IFeeCollector"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1373:31:20"
                  },
                  "returnParameters": {
                    "id": 3788,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1413:0:20"
                  },
                  "scope": 3815,
                  "src": "1349:65:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e4580a3c",
                  "id": 3794,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStrategyFeeId",
                  "nameLocation": "1431:16:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1447:2:20"
                  },
                  "returnParameters": {
                    "id": 3793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3792,
                        "mutability": "mutable",
                        "name": "strategyFeeId",
                        "nameLocation": "1481:13:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3794,
                        "src": "1473:21:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1473:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1472:23:20"
                  },
                  "scope": 3815,
                  "src": "1422:74:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8d928af8",
                  "id": 3799,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVault",
                  "nameLocation": "1513:8:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3795,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1521:2:20"
                  },
                  "returnParameters": {
                    "id": 3798,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3797,
                        "mutability": "mutable",
                        "name": "vault",
                        "nameLocation": "1555:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3799,
                        "src": "1547:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3796,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1546:15:20"
                  },
                  "scope": 3815,
                  "src": "1504:58:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c31c9c07",
                  "id": 3804,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapRouter",
                  "nameLocation": "1579:10:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3800,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1589:2:20"
                  },
                  "returnParameters": {
                    "id": 3803,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3802,
                        "mutability": "mutable",
                        "name": "router",
                        "nameLocation": "1623:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3804,
                        "src": "1615:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3801,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1614:16:20"
                  },
                  "scope": 3815,
                  "src": "1570:61:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0de705b5",
                  "id": 3809,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositFee",
                  "nameLocation": "1648:13:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3805,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1661:2:20"
                  },
                  "returnParameters": {
                    "id": 3808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3807,
                        "mutability": "mutable",
                        "name": "depositFee",
                        "nameLocation": "1695:10:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3809,
                        "src": "1687:18:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1687:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1686:20:20"
                  },
                  "scope": 3815,
                  "src": "1639:68:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1540aa89",
                  "id": 3814,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWithdrawFee",
                  "nameLocation": "1724:14:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3810,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1738:2:20"
                  },
                  "returnParameters": {
                    "id": 3813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3812,
                        "mutability": "mutable",
                        "name": "withdrawFee",
                        "nameLocation": "1772:11:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3814,
                        "src": "1764:19:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1764:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1763:21:20"
                  },
                  "scope": 3815,
                  "src": "1715:70:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3816,
              "src": "194:1594:20",
              "usedErrors": [],
              "usedEvents": [
                3696,
                3700,
                3704,
                3708,
                3712,
                3716,
                3720,
                3724,
                3728,
                3732,
                3740,
                3748
              ]
            }
          ],
          "src": "40:1750:20"
        },
        "id": 20
      },
      "contracts/interfaces/IFeeCollector.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IFeeCollector.sol",
          "exportedSymbols": {
            "IFeeCollector": [
              3859
            ]
          },
          "id": 3860,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3817,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:21"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFeeCollector",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3859,
              "linearizedBaseContracts": [
                3859
              ],
              "name": "IFeeCollector",
              "nameLocation": "78:13:21",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IFeeCollector.FeeCategory",
                  "id": 3830,
                  "members": [
                    {
                      "constant": false,
                      "id": 3819,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "137:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3830,
                      "src": "129:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "129:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3821,
                      "mutability": "mutable",
                      "name": "protocol",
                      "nameLocation": "161:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3830,
                      "src": "153:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3820,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "153:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3823,
                      "mutability": "mutable",
                      "name": "call",
                      "nameLocation": "188:4:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3830,
                      "src": "180:12:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "180:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3825,
                      "mutability": "mutable",
                      "name": "strategist",
                      "nameLocation": "211:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3830,
                      "src": "203:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3824,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "203:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3827,
                      "mutability": "mutable",
                      "name": "label",
                      "nameLocation": "239:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3830,
                      "src": "232:12:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3826,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "232:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3829,
                      "mutability": "mutable",
                      "name": "active",
                      "nameLocation": "260:6:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3830,
                      "src": "255:11:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3828,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "255:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeCategory",
                  "nameLocation": "106:11:21",
                  "nodeType": "StructDefinition",
                  "scope": 3859,
                  "src": "99:175:21",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IFeeCollector.AllFees",
                  "id": 3838,
                  "members": [
                    {
                      "constant": false,
                      "id": 3833,
                      "mutability": "mutable",
                      "name": "performance",
                      "nameLocation": "320:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3838,
                      "src": "308:23:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeCategory_$3830_storage_ptr",
                        "typeString": "struct IFeeCollector.FeeCategory"
                      },
                      "typeName": {
                        "id": 3832,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3831,
                          "name": "FeeCategory",
                          "nameLocations": [
                            "308:11:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3830,
                          "src": "308:11:21"
                        },
                        "referencedDeclaration": 3830,
                        "src": "308:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeCategory_$3830_storage_ptr",
                          "typeString": "struct IFeeCollector.FeeCategory"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3835,
                      "mutability": "mutable",
                      "name": "deposit",
                      "nameLocation": "350:7:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3838,
                      "src": "342:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3834,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "342:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3837,
                      "mutability": "mutable",
                      "name": "withdraw",
                      "nameLocation": "376:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3838,
                      "src": "368:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3836,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "368:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AllFees",
                  "nameLocation": "289:7:21",
                  "nodeType": "StructDefinition",
                  "scope": 3859,
                  "src": "282:110:21",
                  "visibility": "public"
                },
                {
                  "functionSelector": "19a501ad",
                  "id": 3843,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setStrategyFeeId",
                  "nameLocation": "409:16:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3840,
                        "mutability": "mutable",
                        "name": "feeId",
                        "nameLocation": "434:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3843,
                        "src": "426:13:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "425:15:21"
                  },
                  "returnParameters": {
                    "id": 3842,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "449:0:21"
                  },
                  "scope": 3859,
                  "src": "400:50:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9af608c9",
                  "id": 3851,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFees",
                  "nameLocation": "467:7:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3845,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "493:8:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3851,
                        "src": "485:16:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "485:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "474:34:21"
                  },
                  "returnParameters": {
                    "id": 3850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3849,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3851,
                        "src": "532:18:21",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeCategory_$3830_memory_ptr",
                          "typeString": "struct IFeeCollector.FeeCategory"
                        },
                        "typeName": {
                          "id": 3848,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3847,
                            "name": "FeeCategory",
                            "nameLocations": [
                              "532:11:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3830,
                            "src": "532:11:21"
                          },
                          "referencedDeclaration": 3830,
                          "src": "532:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeCategory_$3830_storage_ptr",
                            "typeString": "struct IFeeCollector.FeeCategory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "531:20:21"
                  },
                  "scope": 3859,
                  "src": "458:94:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a5ed4175",
                  "id": 3858,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "strategyFeeId",
                  "nameLocation": "569:13:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3853,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "591:8:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3858,
                        "src": "583:16:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "582:18:21"
                  },
                  "returnParameters": {
                    "id": 3857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3856,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3858,
                        "src": "624:7:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3855,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "623:9:21"
                  },
                  "scope": 3859,
                  "src": "560:73:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3860,
              "src": "68:568:21",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:598:21"
        },
        "id": 21
      },
      "contracts/interfaces/IStrategy.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IStrategy.sol",
          "exportedSymbols": {
            "IBaseStrategy": [
              3815
            ],
            "IERC20": [
              1556
            ],
            "IStrategy": [
              3943
            ]
          },
          "id": 3944,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3861,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:22"
            },
            {
              "absolutePath": "contracts/interfaces/IBaseStrategy.sol",
              "file": "./IBaseStrategy.sol",
              "id": 3863,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3944,
              "sourceUnit": 3816,
              "src": "68:50:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3862,
                    "name": "IBaseStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3815,
                    "src": "76:13:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3865,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3944,
              "sourceUnit": 1557,
              "src": "120:70:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3864,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "128:6:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3866,
                    "name": "IBaseStrategy",
                    "nameLocations": [
                      "217:13:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3815,
                    "src": "217:13:22"
                  },
                  "id": 3867,
                  "nodeType": "InheritanceSpecifier",
                  "src": "217:13:22"
                }
              ],
              "canonicalName": "IStrategy",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3943,
              "linearizedBaseContracts": [
                3943,
                3815
              ],
              "name": "IStrategy",
              "nameLocation": "204:9:22",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "d0e30db0",
                  "id": 3870,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "247:7:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3868,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "254:2:22"
                  },
                  "returnParameters": {
                    "id": 3869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "265:0:22"
                  },
                  "scope": 3943,
                  "src": "238:28:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 3877,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "283:8:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3872,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "310:12:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3877,
                        "src": "302:20:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3871,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "302:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "291:38:22"
                  },
                  "returnParameters": {
                    "id": 3876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3875,
                        "mutability": "mutable",
                        "name": "withdrawn",
                        "nameLocation": "356:9:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3877,
                        "src": "348:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "348:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "347:19:22"
                  },
                  "scope": 3943,
                  "src": "274:93:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4641257d",
                  "id": 3880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "harvest",
                  "nameLocation": "384:7:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:22"
                  },
                  "returnParameters": {
                    "id": 3879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "402:0:22"
                  },
                  "scope": 3943,
                  "src": "375:28:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "623d8bd2",
                  "id": 3885,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "harvestWithCallFeeRecipient",
                  "nameLocation": "420:27:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3882,
                        "mutability": "mutable",
                        "name": "callFeeRecipient",
                        "nameLocation": "456:16:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3885,
                        "src": "448:24:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "447:26:22"
                  },
                  "returnParameters": {
                    "id": 3884,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "482:0:22"
                  },
                  "scope": 3943,
                  "src": "411:72:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d801d946",
                  "id": 3888,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "managerHarvest",
                  "nameLocation": "500:14:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:22"
                  },
                  "returnParameters": {
                    "id": 3887,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "525:0:22"
                  },
                  "scope": 3943,
                  "src": "491:35:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0e8fbb5a",
                  "id": 3893,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setHarvestOnDeposit",
                  "nameLocation": "543:19:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3890,
                        "mutability": "mutable",
                        "name": "newHarvestOnDeposit",
                        "nameLocation": "568:19:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3893,
                        "src": "563:24:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3889,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "563:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "562:26:22"
                  },
                  "returnParameters": {
                    "id": 3892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "597:0:22"
                  },
                  "scope": 3943,
                  "src": "534:64:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7c6ab208",
                  "id": 3896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exitStrategy",
                  "nameLocation": "615:12:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3894,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "627:2:22"
                  },
                  "returnParameters": {
                    "id": 3895,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "638:0:22"
                  },
                  "scope": 3943,
                  "src": "606:33:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4700d305",
                  "id": 3899,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "panic",
                  "nameLocation": "656:5:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3897,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "661:2:22"
                  },
                  "returnParameters": {
                    "id": 3898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "672:0:22"
                  },
                  "scope": 3943,
                  "src": "647:26:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e5932c40",
                  "id": 3904,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setReward",
                  "nameLocation": "690:9:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3901,
                        "mutability": "mutable",
                        "name": "newReward",
                        "nameLocation": "708:9:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3904,
                        "src": "700:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3900,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "700:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "699:19:22"
                  },
                  "returnParameters": {
                    "id": 3903,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "727:0:22"
                  },
                  "scope": 3943,
                  "src": "681:47:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad29f5da",
                  "id": 3907,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "resetRewards",
                  "nameLocation": "745:12:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "757:2:22"
                  },
                  "returnParameters": {
                    "id": 3906,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "768:0:22"
                  },
                  "scope": 3943,
                  "src": "736:33:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3a6462e4",
                  "id": 3912,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRewarder",
                  "nameLocation": "786:11:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3909,
                        "mutability": "mutable",
                        "name": "newRewarder",
                        "nameLocation": "806:11:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3912,
                        "src": "798:19:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "798:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "797:21:22"
                  },
                  "returnParameters": {
                    "id": 3911,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "827:0:22"
                  },
                  "scope": 3943,
                  "src": "777:51:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "affd80b0",
                  "id": 3917,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLastHarvest",
                  "nameLocation": "845:14:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3913,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "859:2:22"
                  },
                  "returnParameters": {
                    "id": 3916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3915,
                        "mutability": "mutable",
                        "name": "lastHarvest",
                        "nameLocation": "893:11:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3917,
                        "src": "885:19:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "884:21:22"
                  },
                  "scope": 3943,
                  "src": "836:70:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c222bad",
                  "id": 3922,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAsset",
                  "nameLocation": "923:8:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3918,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "931:2:22"
                  },
                  "returnParameters": {
                    "id": 3921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3920,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "965:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3922,
                        "src": "957:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3919,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "957:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "956:15:22"
                  },
                  "scope": 3943,
                  "src": "914:58:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ecbde5e6",
                  "id": 3927,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalanceOf",
                  "nameLocation": "989:12:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3923,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1001:2:22"
                  },
                  "returnParameters": {
                    "id": 3926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3925,
                        "mutability": "mutable",
                        "name": "balanceOf",
                        "nameLocation": "1035:9:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3927,
                        "src": "1027:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3924,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:19:22"
                  },
                  "scope": 3943,
                  "src": "980:66:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "df390305",
                  "id": 3932,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalanceOfAsset",
                  "nameLocation": "1063:17:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3928,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1080:2:22"
                  },
                  "returnParameters": {
                    "id": 3931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3930,
                        "mutability": "mutable",
                        "name": "balanceOfAsset",
                        "nameLocation": "1114:14:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3932,
                        "src": "1106:22:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1106:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1105:24:22"
                  },
                  "scope": 3943,
                  "src": "1054:76:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f8b3c21e",
                  "id": 3937,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalanceOfPool",
                  "nameLocation": "1147:16:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3933,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1163:2:22"
                  },
                  "returnParameters": {
                    "id": 3936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3935,
                        "mutability": "mutable",
                        "name": "balanceOfPool",
                        "nameLocation": "1197:13:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3937,
                        "src": "1189:21:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3934,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1189:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1188:23:22"
                  },
                  "scope": 3943,
                  "src": "1138:74:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b655d0c4",
                  "id": 3942,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBaseRate",
                  "nameLocation": "1229:11:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3938,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1240:2:22"
                  },
                  "returnParameters": {
                    "id": 3941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3940,
                        "mutability": "mutable",
                        "name": "baseRate",
                        "nameLocation": "1274:8:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3942,
                        "src": "1266:16:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:18:22"
                  },
                  "scope": 3943,
                  "src": "1220:64:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3944,
              "src": "194:1093:22",
              "usedErrors": [],
              "usedEvents": [
                3696,
                3700,
                3704,
                3708,
                3712,
                3716,
                3720,
                3724,
                3728,
                3732,
                3740,
                3748
              ]
            }
          ],
          "src": "40:1249:22"
        },
        "id": 22
      },
      "contracts/interfaces/IVault.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IVault.sol",
          "exportedSymbols": {
            "IAccount": [
              3505
            ],
            "IERC20": [
              1556
            ],
            "IStrategy": [
              3943
            ],
            "IVault": [
              4070
            ]
          },
          "id": 4071,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3945,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:23"
            },
            {
              "absolutePath": "contracts/interfaces/IAccount.sol",
              "file": "./IAccount.sol",
              "id": 3947,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4071,
              "sourceUnit": 3506,
              "src": "68:40:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3946,
                    "name": "IAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "76:8:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStrategy.sol",
              "file": "./IStrategy.sol",
              "id": 3949,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4071,
              "sourceUnit": 3944,
              "src": "110:42:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3948,
                    "name": "IStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3943,
                    "src": "118:9:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3951,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4071,
              "sourceUnit": 1557,
              "src": "154:70:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3950,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "162:6:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3952,
                    "name": "IERC20",
                    "nameLocations": [
                      "248:6:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1556,
                    "src": "248:6:23"
                  },
                  "id": 3953,
                  "nodeType": "InheritanceSpecifier",
                  "src": "248:6:23"
                }
              ],
              "canonicalName": "IVault",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4070,
              "linearizedBaseContracts": [
                4070,
                1556
              ],
              "name": "IVault",
              "nameLocation": "238:6:23",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "b6b55f25",
                  "id": 3960,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "271:7:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3955,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "287:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3960,
                        "src": "279:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3954,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "279:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "278:22:23"
                  },
                  "returnParameters": {
                    "id": 3959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3958,
                        "mutability": "mutable",
                        "name": "lpMinted",
                        "nameLocation": "327:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3960,
                        "src": "319:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "319:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "318:18:23"
                  },
                  "scope": 4070,
                  "src": "262:75:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 3967,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "354:8:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3962,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "371:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3967,
                        "src": "363:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3961,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "362:18:23"
                  },
                  "returnParameters": {
                    "id": 3966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3965,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "407:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3967,
                        "src": "399:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "399:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "398:22:23"
                  },
                  "scope": 4070,
                  "src": "345:76:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "853828b6",
                  "id": 3972,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAll",
                  "nameLocation": "438:11:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "449:2:23"
                  },
                  "returnParameters": {
                    "id": 3971,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3970,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "478:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3972,
                        "src": "470:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3969,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "470:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "469:22:23"
                  },
                  "scope": 4070,
                  "src": "429:63:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b76e07cc",
                  "id": 3982,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositFromAccount",
                  "nameLocation": "509:18:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3974,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "546:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3982,
                        "src": "538:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3973,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "538:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3977,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "578:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3982,
                        "src": "569:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3976,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3975,
                            "name": "IAccount",
                            "nameLocations": [
                              "569:8:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "569:8:23"
                          },
                          "referencedDeclaration": 3505,
                          "src": "569:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "527:65:23"
                  },
                  "returnParameters": {
                    "id": 3981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3980,
                        "mutability": "mutable",
                        "name": "lpMinted",
                        "nameLocation": "619:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3982,
                        "src": "611:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3979,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "610:18:23"
                  },
                  "scope": 4070,
                  "src": "500:129:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a49b5cb4",
                  "id": 3992,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToAccount",
                  "nameLocation": "646:17:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3984,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "682:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3992,
                        "src": "674:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3987,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "710:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3992,
                        "src": "701:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3986,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3985,
                            "name": "IAccount",
                            "nameLocations": [
                              "701:8:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "701:8:23"
                          },
                          "referencedDeclaration": 3505,
                          "src": "701:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:61:23"
                  },
                  "returnParameters": {
                    "id": 3991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3990,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "751:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3992,
                        "src": "743:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "743:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "742:22:23"
                  },
                  "scope": 4070,
                  "src": "637:128:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c07e866e",
                  "id": 4000,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAllToAccount",
                  "nameLocation": "782:20:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3995,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "822:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4000,
                        "src": "813:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$3505",
                          "typeString": "contract IAccount"
                        },
                        "typeName": {
                          "id": 3994,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3993,
                            "name": "IAccount",
                            "nameLocations": [
                              "813:8:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3505,
                            "src": "813:8:23"
                          },
                          "referencedDeclaration": 3505,
                          "src": "813:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAccount_$3505",
                            "typeString": "contract IAccount"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "802:34:23"
                  },
                  "returnParameters": {
                    "id": 3999,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3998,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "863:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4000,
                        "src": "855:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3997,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "855:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "854:22:23"
                  },
                  "scope": 4070,
                  "src": "773:104:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "223e5479",
                  "id": 4006,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addStrategy",
                  "nameLocation": "894:11:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4003,
                        "mutability": "mutable",
                        "name": "newStrategy",
                        "nameLocation": "916:11:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4006,
                        "src": "906:21:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 4002,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4001,
                            "name": "IStrategy",
                            "nameLocations": [
                              "906:9:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "906:9:23"
                          },
                          "referencedDeclaration": 3943,
                          "src": "906:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "905:23:23"
                  },
                  "returnParameters": {
                    "id": 4005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "937:0:23"
                  },
                  "scope": 4070,
                  "src": "885:53:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "175188e8",
                  "id": 4012,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeStrategy",
                  "nameLocation": "955:14:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4009,
                        "mutability": "mutable",
                        "name": "strategyToRemove",
                        "nameLocation": "980:16:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4012,
                        "src": "970:26:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 4008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4007,
                            "name": "IStrategy",
                            "nameLocations": [
                              "970:9:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "970:9:23"
                          },
                          "referencedDeclaration": 3943,
                          "src": "970:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:28:23"
                  },
                  "returnParameters": {
                    "id": 4011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:0:23"
                  },
                  "scope": 4070,
                  "src": "946:61:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ee6ce925",
                  "id": 4018,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "reallocate",
                  "nameLocation": "1024:10:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4015,
                        "mutability": "mutable",
                        "name": "allocations",
                        "nameLocation": "1052:11:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4018,
                        "src": "1035:28:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4013,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1035:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4014,
                          "nodeType": "ArrayTypeName",
                          "src": "1035:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1034:30:23"
                  },
                  "returnParameters": {
                    "id": 4017,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1073:0:23"
                  },
                  "scope": 4070,
                  "src": "1015:59:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a29b3c90",
                  "id": 4025,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLastHarvest",
                  "nameLocation": "1091:14:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4021,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4020,
                        "mutability": "mutable",
                        "name": "strategyIndex",
                        "nameLocation": "1124:13:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4025,
                        "src": "1116:21:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4019,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1116:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1105:39:23"
                  },
                  "returnParameters": {
                    "id": 4024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4023,
                        "mutability": "mutable",
                        "name": "lastHarvest",
                        "nameLocation": "1176:11:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4025,
                        "src": "1168:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1167:21:23"
                  },
                  "scope": 4070,
                  "src": "1082:107:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c222bad",
                  "id": 4030,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAsset",
                  "nameLocation": "1206:8:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1214:2:23"
                  },
                  "returnParameters": {
                    "id": 4029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4028,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "1248:5:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4030,
                        "src": "1240:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1240:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1239:15:23"
                  },
                  "scope": 4070,
                  "src": "1197:58:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6f7267b7",
                  "id": 4037,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getShares",
                  "nameLocation": "1272:9:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4033,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4032,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "1300:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4037,
                        "src": "1292:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4031,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1292:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1281:34:23"
                  },
                  "returnParameters": {
                    "id": 4036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4035,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "1347:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4037,
                        "src": "1339:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1339:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1338:22:23"
                  },
                  "scope": 4070,
                  "src": "1263:98:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "12065fe0",
                  "id": 4042,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalance",
                  "nameLocation": "1378:10:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4038,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1388:2:23"
                  },
                  "returnParameters": {
                    "id": 4041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4040,
                        "mutability": "mutable",
                        "name": "amountScaled",
                        "nameLocation": "1422:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4042,
                        "src": "1414:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1414:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1413:22:23"
                  },
                  "scope": 4070,
                  "src": "1369:67:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f9cc0605",
                  "id": 4047,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAvailable",
                  "nameLocation": "1453:12:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4043,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1465:2:23"
                  },
                  "returnParameters": {
                    "id": 4046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4045,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "1499:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4047,
                        "src": "1491:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1491:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1490:19:23"
                  },
                  "scope": 4070,
                  "src": "1444:66:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0e022923",
                  "id": 4055,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllocation",
                  "nameLocation": "1527:13:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4050,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "1561:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4055,
                        "src": "1551:18:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$3943",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "id": 4049,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4048,
                            "name": "IStrategy",
                            "nameLocations": [
                              "1551:9:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3943,
                            "src": "1551:9:23"
                          },
                          "referencedDeclaration": 3943,
                          "src": "1551:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$3943",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1540:36:23"
                  },
                  "returnParameters": {
                    "id": 4054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4053,
                        "mutability": "mutable",
                        "name": "allocation",
                        "nameLocation": "1608:10:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4055,
                        "src": "1600:18:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1600:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1599:20:23"
                  },
                  "scope": 4070,
                  "src": "1518:102:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4051ddac",
                  "id": 4062,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSummary",
                  "nameLocation": "1637:10:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1647:2:23"
                  },
                  "returnParameters": {
                    "id": 4061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4058,
                        "mutability": "mutable",
                        "name": "allocated",
                        "nameLocation": "1708:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "1700:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1700:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4060,
                        "mutability": "mutable",
                        "name": "idle",
                        "nameLocation": "1727:4:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "1719:12:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1719:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1699:33:23"
                  },
                  "scope": 4070,
                  "src": "1628:105:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b49a60bb",
                  "id": 4069,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStrategies",
                  "nameLocation": "1750:13:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4063,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1763:2:23"
                  },
                  "returnParameters": {
                    "id": 4068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4067,
                        "mutability": "mutable",
                        "name": "strategies",
                        "nameLocation": "1835:10:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4069,
                        "src": "1816:29:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4065,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 4064,
                              "name": "IStrategy",
                              "nameLocations": [
                                "1816:9:23"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3943,
                              "src": "1816:9:23"
                            },
                            "referencedDeclaration": 3943,
                            "src": "1816:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$3943",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "id": 4066,
                          "nodeType": "ArrayTypeName",
                          "src": "1816:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$3943_$dyn_storage_ptr",
                            "typeString": "contract IStrategy[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1815:31:23"
                  },
                  "scope": 4070,
                  "src": "1741:106:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4071,
              "src": "228:1622:23",
              "usedErrors": [],
              "usedEvents": [
                1490,
                1499
              ]
            }
          ],
          "src": "40:1812:23"
        },
        "id": 23
      },
      "contracts/libs/Consts.sol": {
        "ast": {
          "absolutePath": "contracts/libs/Consts.sol",
          "exportedSymbols": {
            "Consts": [
              4091
            ]
          },
          "id": 4092,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4072,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:24"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Consts",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 4091,
              "linearizedBaseContracts": [
                4091
              ],
              "name": "Consts",
              "nameLocation": "76:6:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "8322fff2",
                  "id": 4078,
                  "mutability": "constant",
                  "name": "ETH",
                  "nameLocation": "114:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "90:90:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "90:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "137:42:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "129:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4074,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "129:7:24",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "129:51:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3410fe6e",
                  "id": 4081,
                  "mutability": "constant",
                  "name": "DIVISOR",
                  "nameLocation": "213:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "189:38:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31653138",
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "223:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "dfbdc437",
                  "id": 4084,
                  "mutability": "constant",
                  "name": "WITHDRAWAL_FEE_CAP",
                  "nameLocation": "260:18:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "236:47:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530",
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "281:2:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50_by_1",
                      "typeString": "int_const 50"
                    },
                    "value": "50"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "54518b1a",
                  "id": 4087,
                  "mutability": "constant",
                  "name": "WITHDRAWAL_MAX",
                  "nameLocation": "314:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "290:47:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31305f303030",
                    "id": 4086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "331:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10_000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c7846006",
                  "id": 4090,
                  "mutability": "constant",
                  "name": "STRATEGY_ALLOCATION_MAX",
                  "nameLocation": "370:23:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "346:56:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31305f303030",
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "396:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10_000"
                  },
                  "visibility": "public"
                }
              ],
              "scope": 4092,
              "src": "68:338:24",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:368:24"
        },
        "id": 24
      },
      "contracts/libs/Enums.sol": {
        "ast": {
          "absolutePath": "contracts/libs/Enums.sol",
          "exportedSymbols": {
            "Enums": [
              4106
            ]
          },
          "id": 4107,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4093,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:25"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Enums",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 4106,
              "linearizedBaseContracts": [
                4106
              ],
              "name": "Enums",
              "nameLocation": "76:5:25",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Enums.AutoPilotMode",
                  "id": 4096,
                  "members": [
                    {
                      "id": 4094,
                      "name": "Off",
                      "nameLocation": "119:3:25",
                      "nodeType": "EnumValue",
                      "src": "119:3:25"
                    },
                    {
                      "id": 4095,
                      "name": "On",
                      "nameLocation": "133:2:25",
                      "nodeType": "EnumValue",
                      "src": "133:2:25"
                    }
                  ],
                  "name": "AutoPilotMode",
                  "nameLocation": "94:13:25",
                  "nodeType": "EnumDefinition",
                  "src": "89:53:25"
                },
                {
                  "canonicalName": "Enums.ApprovalFlag",
                  "id": 4101,
                  "members": [
                    {
                      "id": 4097,
                      "name": "None",
                      "nameLocation": "179:4:25",
                      "nodeType": "EnumValue",
                      "src": "179:4:25"
                    },
                    {
                      "id": 4098,
                      "name": "Deposit",
                      "nameLocation": "194:7:25",
                      "nodeType": "EnumValue",
                      "src": "194:7:25"
                    },
                    {
                      "id": 4099,
                      "name": "Withdraw",
                      "nameLocation": "212:8:25",
                      "nodeType": "EnumValue",
                      "src": "212:8:25"
                    },
                    {
                      "id": 4100,
                      "name": "All",
                      "nameLocation": "231:3:25",
                      "nodeType": "EnumValue",
                      "src": "231:3:25"
                    }
                  ],
                  "name": "ApprovalFlag",
                  "nameLocation": "155:12:25",
                  "nodeType": "EnumDefinition",
                  "src": "150:91:25"
                },
                {
                  "canonicalName": "Enums.TaskType",
                  "id": 4105,
                  "members": [
                    {
                      "id": 4102,
                      "name": "AddStrategy",
                      "nameLocation": "274:11:25",
                      "nodeType": "EnumValue",
                      "src": "274:11:25"
                    },
                    {
                      "id": 4103,
                      "name": "RemoveStrategy",
                      "nameLocation": "296:14:25",
                      "nodeType": "EnumValue",
                      "src": "296:14:25"
                    },
                    {
                      "id": 4104,
                      "name": "Reallocation",
                      "nameLocation": "321:12:25",
                      "nodeType": "EnumValue",
                      "src": "321:12:25"
                    }
                  ],
                  "name": "TaskType",
                  "nameLocation": "254:8:25",
                  "nodeType": "EnumDefinition",
                  "src": "249:91:25"
                }
              ],
              "scope": 4107,
              "src": "68:275:25",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:305:25"
        },
        "id": 25
      },
      "contracts/mocks/SimpleVault.sol": {
        "ast": {
          "absolutePath": "contracts/mocks/SimpleVault.sol",
          "exportedSymbols": {
            "Consts": [
              4091
            ],
            "Enums": [
              4106
            ],
            "IAccount": [
              3505
            ],
            "IAddressesProvider": [
              3553
            ],
            "IAgent": [
              3686
            ],
            "IERC20": [
              1556
            ],
            "IStrategy": [
              3943
            ],
            "Initializable": [
              530
            ],
            "SimpleVault": [
              4153
            ],
            "VaultUpgradeable": [
              3433
            ]
          },
          "id": 4154,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4108,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:26"
            },
            {
              "absolutePath": "contracts/VaultUpgradeable.sol",
              "file": "../VaultUpgradeable.sol",
              "id": 4110,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 3434,
              "src": "68:57:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4109,
                    "name": "VaultUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3433,
                    "src": "76:16:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Consts.sol",
              "file": "../libs/Consts.sol",
              "id": 4112,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 4092,
              "src": "127:42:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4111,
                    "name": "Consts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4091,
                    "src": "135:6:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Enums.sol",
              "file": "../libs/Enums.sol",
              "id": 4114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 4107,
              "src": "171:40:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4113,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "179:5:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAgent.sol",
              "file": "../interfaces/IAgent.sol",
              "id": 4116,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 3687,
              "src": "213:48:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4115,
                    "name": "IAgent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3686,
                    "src": "221:6:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAccount.sol",
              "file": "../interfaces/IAccount.sol",
              "id": 4118,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 3506,
              "src": "263:52:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4117,
                    "name": "IAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "271:8:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStrategy.sol",
              "file": "../interfaces/IStrategy.sol",
              "id": 4120,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 3944,
              "src": "317:54:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4119,
                    "name": "IStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3943,
                    "src": "325:9:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IAddressesProvider.sol",
              "file": "../interfaces/IAddressesProvider.sol",
              "id": 4122,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 3554,
              "src": "373:72:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4121,
                    "name": "IAddressesProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3553,
                    "src": "381:18:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 4124,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 1557,
              "src": "447:70:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4123,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1556,
                    "src": "455:6:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "id": 4126,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4154,
              "sourceUnit": 531,
              "src": "519:96:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4125,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 530,
                    "src": "527:13:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4127,
                    "name": "Initializable",
                    "nameLocations": [
                      "643:13:26"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 530,
                    "src": "643:13:26"
                  },
                  "id": 4128,
                  "nodeType": "InheritanceSpecifier",
                  "src": "643:13:26"
                },
                {
                  "baseName": {
                    "id": 4129,
                    "name": "VaultUpgradeable",
                    "nameLocations": [
                      "658:16:26"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3433,
                    "src": "658:16:26"
                  },
                  "id": 4130,
                  "nodeType": "InheritanceSpecifier",
                  "src": "658:16:26"
                }
              ],
              "canonicalName": "SimpleVault",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4153,
              "linearizedBaseContracts": [
                4153,
                3433,
                1681,
                1147,
                1383,
                1582,
                262,
                4070,
                1556,
                1193,
                530
              ],
              "name": "SimpleVault",
              "nameLocation": "628:11:26",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 4151,
                    "nodeType": "Block",
                    "src": "844:66:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4145,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4132,
                              "src": "868:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 4146,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4134,
                              "src": "874:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 4147,
                              "name": "allowedAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4136,
                              "src": "882:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4148,
                              "name": "agent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "896:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgent_$3686",
                                "typeString": "contract IAgent"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IAgent_$3686",
                                "typeString": "contract IAgent"
                              }
                            ],
                            "id": 4144,
                            "name": "__Vault_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2355,
                            "src": "855:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_contract$_IAgent_$3686_$returns$__$",
                              "typeString": "function (string memory,string memory,address,contract IAgent)"
                            }
                          },
                          "id": 4149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "855:47:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4150,
                        "nodeType": "ExpressionStatement",
                        "src": "855:47:26"
                      }
                    ]
                  },
                  "functionSelector": "8f15b414",
                  "id": 4152,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4141,
                        "name": "initializer",
                        "nameLocations": [
                          "832:11:26"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 370,
                        "src": "832:11:26"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "832:11:26"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "691:10:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4132,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "726:4:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4152,
                        "src": "712:18:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4131,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "712:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4134,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "755:6:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4152,
                        "src": "741:20:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4133,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4136,
                        "mutability": "mutable",
                        "name": "allowedAsset",
                        "nameLocation": "780:12:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4152,
                        "src": "772:20:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "772:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4139,
                        "mutability": "mutable",
                        "name": "agent",
                        "nameLocation": "810:5:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4152,
                        "src": "803:12:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgent_$3686",
                          "typeString": "contract IAgent"
                        },
                        "typeName": {
                          "id": 4138,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4137,
                            "name": "IAgent",
                            "nameLocations": [
                              "803:6:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3686,
                            "src": "803:6:26"
                          },
                          "referencedDeclaration": 3686,
                          "src": "803:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAgent_$3686",
                            "typeString": "contract IAgent"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "701:121:26"
                  },
                  "returnParameters": {
                    "id": 4143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "844:0:26"
                  },
                  "scope": 4153,
                  "src": "682:228:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4154,
              "src": "619:294:26",
              "usedErrors": [
                98,
                103,
                279,
                282,
                1353,
                1358,
                1363,
                1372,
                1377,
                1382,
                1626
              ],
              "usedEvents": [
                109,
                287,
                1490,
                1499
              ]
            }
          ],
          "src": "40:875:26"
        },
        "id": 26
      }
    },
    "contracts": {
      "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "AutomationBase": {
          "abi": [
            {
              "inputs": [],
              "name": "OnlySimulatedBackend",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220c12647598dec6fc6c6e6beb2434cfd9d17ce0459667367e0d8883056cf5387fa64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x26 SELFBALANCE MSIZE DUP14 0xEC PUSH16 0xC6C6E6BEB2434CFD9D17CE0459667367 0xE0 0xD8 DUP9 ADDRESS JUMP 0xCF MSTORE8 DUP8 STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "57:634:0:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220c12647598dec6fc6c6e6beb2434cfd9d17ce0459667367e0d8883056cf5387fa64736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x26 SELFBALANCE MSIZE DUP14 0xEC PUSH16 0xC6C6E6BEB2434CFD9D17CE0459667367 0xE0 0xD8 DUP9 ADDRESS JUMP 0xCF MSTORE8 DUP8 STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "57:634:0:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "AutomationCompatible": {
          "abi": [
            {
              "inputs": [],
              "name": "OnlySimulatedBackend",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "checkData",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "checkUpkeep(bytes)": "6e04ff0d",
              "performUpkeep(bytes)": "4585e33b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "AutomationCompatibleInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "checkData",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "checkUpkeep(bytes)": "6e04ff0d",
              "performUpkeep(bytes)": "4585e33b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "OwnableUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "ERC20Upgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ContextUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/Agent.sol": {
        "Agent": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "feePerTask",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IAddressesProvider",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "agent",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "hasFunds",
                  "type": "bool"
                }
              ],
              "name": "BeforeTask",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "_interval",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "_lastTimeStamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "addStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "name": "checkApproval",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "checkData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVault",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "depositFromAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "feeToken",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "checkData",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "reallocation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "removeStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVault",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawAllToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVault",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x130 JUMPI PUSH1 0x1F PUSH2 0x1375 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x135 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x130 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x130 JUMPI PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x130 JUMPI PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x130 JUMPI CALLER ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP7 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x36B0 PUSH1 0x7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x1229 SWAP1 DUP2 PUSH2 0x14C DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFF199DE EQ PUSH2 0xC51 JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0xC0F JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xACD JUMPI DUP1 PUSH4 0x47A471A1 EQ PUSH2 0xA72 JUMPI DUP1 PUSH4 0x4A86E1A6 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x4B837649 EQ PUSH2 0x940 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x8B0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xAA91C9C6 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0xCA709A25 EQ PUSH2 0x7DF JUMPI DUP1 PUSH4 0xE0AB4650 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xE76E8CAD EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xF887CF00 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xFABBF02C EQ PUSH2 0x28F JUMPI PUSH4 0xFCA0025D EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x28A JUMPI PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x9068A86800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x252 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP2 DUP6 SWAP2 PUSH2 0x25D JUMPI JUMPDEST POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xFBCBC0F100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x252 JUMPI DUP4 SWAP2 PUSH2 0x1EC JUMPI JUMPDEST POP PUSH32 0xAF80AA5CC016B82830ABF03E3110890FCD831F57410495ACDF9CC3B3973129E9 SWAP2 PUSH2 0x1E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP4 AND SWAP2 DUP3 DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xD31 JUMP JUMPDEST LOG1 DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x24A JUMPI JUMPDEST DUP2 PUSH2 0x207 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x246 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x246 JUMPI PUSH32 0xAF80AA5CC016B82830ABF03E3110890FCD831F57410495ACDF9CC3B3973129E9 PUSH2 0x18E JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x27D SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x283 JUMPI JUMPDEST PUSH2 0x275 DUP2 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE79 JUMP JUMPDEST CODESIZE PUSH2 0x14A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x26B JUMP JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH2 0x2C7 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x4 DUP2 LT ISZERO SWAP2 DUP3 PUSH2 0x411 JUMPI DUP2 ISZERO PUSH2 0x433 JUMPI PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x425 JUMPI JUMPDEST DUP4 DUP2 PUSH2 0x400 JUMPI JUMPDEST POP PUSH2 0x3BC JUMPI PUSH1 0x2 EQ SWAP2 DUP3 PUSH2 0x396 JUMPI JUMPDEST DUP3 PUSH2 0x370 JUMPI JUMPDEST POP POP PUSH2 0x32C JUMPI DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177206E6F7420617070726F7665640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x382 JUMPI PUSH1 0x3 EQ ISZERO CODESIZE DUP1 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 SWAP3 POP PUSH2 0x3A8 JUMPI PUSH1 0x2 DUP2 EQ ISZERO SWAP2 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420617070726F766564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH2 0x411 JUMPI PUSH1 0x3 DUP3 EQ ISZERO DUP4 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP4 SWAP3 POP PUSH1 0x1 DUP3 EQ ISZERO PUSH2 0x307 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F7420617070726F766564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x28A JUMPI PUSH2 0x4A5 PUSH2 0x11B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0x599 SWAP1 PUSH1 0x20 PUSH2 0x53A CALLDATASIZE PUSH2 0xCF7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x545 DUP4 PUSH2 0x1039 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0xB76E07CC00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP4 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5EE JUMPI SWAP1 PUSH2 0x5B6 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E6 JUMPI JUMPDEST DUP2 PUSH2 0x5D0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0x609 CALLDATASIZE PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x252 JUMPI PUSH2 0x64F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP6 SWAP2 PUSH2 0x7C0 JUMPI JUMPDEST POP AND CALLER EQ PUSH2 0xE98 JUMP JUMPDEST DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x40 DUP2 PUSH1 0x20 DUP5 ADD SWAP4 SUB SLT PUSH2 0x246 JUMPI PUSH2 0x66E PUSH1 0x20 DUP3 ADD PUSH2 0xEE3 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7BC JUMPI ADD SWAP1 DUP3 PUSH1 0x3F DUP4 ADD SLT ISZERO PUSH2 0x790 JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x7A8 JUMPI DUP4 PUSH1 0x5 SHL SWAP3 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x6BC PUSH1 0x20 DUP7 ADD DUP8 PUSH2 0xDA5 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x20 DUP1 DUP4 SWAP7 DUP4 ADD ADD ADD SWAP3 DUP4 GT PUSH2 0x7A4 JUMPI PUSH1 0x40 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x794 JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x790 JUMPI SWAP2 DUP4 DUP1 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0xEE6CE92500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP5 PUSH1 0x20 PUSH1 0x4 DUP6 ADD MSTORE MLOAD DUP1 SWAP6 MSTORE PUSH1 0x44 DUP4 ADD SWAP1 SWAP5 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x774 JUMPI POP POP DUP4 DUP1 SWAP6 POP DUP4 DUP1 SWAP3 SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x767 JUMPI PUSH2 0x759 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x762 SWAP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD SWAP7 DUP10 SWAP7 POP DUP9 SWAP6 POP SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x738 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x6D8 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH2 0x7D9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x283 JUMPI PUSH2 0x275 DUP2 DUP4 PUSH2 0xDA5 JUMP JUMPDEST CODESIZE PUSH2 0x646 JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH2 0x863 PUSH2 0x11B1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0x8BF CALLDATASIZE PUSH2 0xD54 JUMP JUMPDEST POP POP PUSH2 0x8CD PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x8E2 DUP2 DUP5 PUSH2 0xDA5 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x1F NOT DUP2 ADD CALLDATASIZE DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP4 MLOAD SWAP2 DUP3 PUSH1 0x40 DUP6 ADD MSTORE DUP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x929 JUMPI POP POP PUSH1 0x60 DUP1 SWAP5 POP DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP1 DUP7 ADD DUP3 ADD MLOAD DUP8 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP7 SWAP5 POP DUP2 ADD PUSH2 0x908 JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x4 PUSH2 0x951 CALLDATASIZE PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x996 SWAP2 PUSH2 0x99B SWAP5 DUP7 SWAP2 PUSH2 0x7C0 JUMPI POP AND CALLER EQ PUSH2 0xE98 JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH2 0x9B8 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x790 JUMPI PUSH1 0x24 PUSH1 0x20 SWAP3 PUSH2 0x9E4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH2 0x1039 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xC07E866E00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA67 JUMPI DUP3 SWAP2 PUSH2 0xA31 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA5F JUMPI JUMPDEST DUP2 PUSH2 0xA4C PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28A JUMPI PUSH1 0x20 SWAP2 POP MLOAD CODESIZE PUSH2 0xA26 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x4 PUSH2 0xA83 CALLDATASIZE PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAC8 SWAP2 PUSH2 0x99B SWAP5 DUP7 SWAP2 PUSH2 0x7C0 JUMPI POP AND CALLER EQ PUSH2 0xE98 JUMP JUMPDEST PUSH2 0xF1B JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0xADC CALLDATASIZE PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xAE8 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH2 0xAF4 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x60 SWAP2 DUP2 ADD SUB SLT PUSH2 0x28A JUMPI DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x790 JUMPI PUSH1 0x40 ADD CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x790 JUMPI PUSH1 0x4 SWAP2 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP6 DUP3 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x64 SWAP4 PUSH1 0x20 SWAP7 DUP4 SWAP2 PUSH2 0xBF2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH32 0x72642F2B00000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH2 0xBC3 JUMPI DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBEA JUMPI JUMPDEST DUP2 PUSH2 0xBDC PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28A JUMPI MLOAD DUP1 DUP3 DUP1 RETURN JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xC09 SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x283 JUMPI PUSH2 0x275 DUP2 DUP4 PUSH2 0xDA5 JUMP JUMPDEST CODESIZE PUSH2 0xB76 JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC38 PUSH2 0xCE1 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH2 0xC4F PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0xD31 JUMP JUMPDEST RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0xCC4 PUSH1 0x20 PUSH2 0xC65 CALLDATASIZE PUSH2 0xCF7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xC70 DUP4 PUSH2 0x1039 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0xA49B5CB400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP4 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA67 JUMPI DUP3 SWAP2 PUSH2 0xA31 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E1 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5E1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E1 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E1 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0xD3E JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x5E1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5E1 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x5E1 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x5E1 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5E1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5E1 JUMPI DUP2 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE33 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xDA5 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x5E1 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xE63 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E1 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E1 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE9F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792066756E6374696F6E73000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x5E1 JUMPI PUSH2 0xF18 PUSH1 0x20 PUSH2 0xF11 DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP4 ADD PUSH2 0xEE3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF37 DUP2 SWAP3 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0xEF7 JUMP JUMPDEST SWAP3 AND SWAP2 AND SWAP1 PUSH1 0x0 SWAP2 DUP2 ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI JUMPDEST PUSH2 0xFA6 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x246 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0x175188E800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH2 0xF99 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0xFA3 SWAP2 PUSH2 0xDA5 JUMP JUMPDEST POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xFCF DUP2 SWAP3 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0xEF7 JUMP JUMPDEST SWAP3 AND SWAP2 AND SWAP1 PUSH1 0x0 SWAP2 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI JUMPDEST PUSH2 0xFA6 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x246 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0x223E547900000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH2 0xF99 JUMPI POP POP JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x3 SLOAD AND SWAP2 AND SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP3 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x117D JUMPI JUMPDEST POP PUSH1 0x1 SLOAD DUP1 SWAP3 LT ISZERO SWAP2 DUP3 PUSH2 0x10D8 JUMPI JUMPDEST POP POP PUSH32 0x4B07B434919E25D56E2425B6A75582BF959A6DA1DA0D8F1D7E47C77267A35E6B SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE ADDRESS PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x64 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP11 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1139 JUMPI JUMPDEST DUP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1169 JUMPI JUMPDEST DUP2 PUSH2 0x1152 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E1 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x5E1 JUMPI CODESIZE PUSH2 0x1133 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11A9 JUMPI JUMPDEST DUP2 PUSH2 0x1199 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E1 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x108E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x118C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x11C5 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 CREATE2 TLOAD 0xC6 0x2D RETURNDATASIZE SELFBALANCE 0xE1 LOG4 0x4E BLOBHASH 0xB3 SIGNEXTEND CALLCODE 0x21 0xB3 ISZERO 0xD7 JUMPI 0xE6 SWAP16 0xAF CALLDATALOAD SWAP9 0xC8 SWAP13 TLOAD RETURNDATACOPY SWAP3 0xA9 0xA8 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "789:5865:13:-:0;;;;;;;;;;;;;-1:-1:-1;;789:5865:13;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;735:10:11;1273:26:7;1269:95;;-1:-1:-1;789:5865:13;;735:10:11;-1:-1:-1;;;;;;789:5865:13;;;;;;;;;;735:10:11;;-1:-1:-1;;;;;789:5865:13;;3052:40:7;;-1:-1:-1;3052:40:7;1140:6:13;;789:5865;;;;;;;1331:20;789:5865;;;1331:20;789:5865;;;;;;;1362:20;789:5865;;;1362:20;789:5865;;;;;;;;;1428:28;789:5865;;;1428:28;789:5865;;;;;;;;1269:95:7;1322:31;;;-1:-1:-1;1322:31:7;-1:-1:-1;1322:31:7;789:5865:13;;-1:-1:-1;1322:31:7;789:5865:13;-1:-1:-1;789:5865:13;;;;;;-1:-1:-1;789:5865:13;;;;;-1:-1:-1;789:5865:13"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 3705,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address_payable_fromMemory": {
                  "entryPoint": 3811,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_address_payablet_address_payable_fromMemory": {
                  "entryPoint": 3831,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bytes": {
                  "entryPoint": 3549,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 3412,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "abi_decode_contract_IVault": {
                  "entryPoint": 3297,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_contract_IVaultt_uint256t_contract_IAccount": {
                  "entryPoint": 3319,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 3
                },
                "abi_encode_enum_ApprovalFlag": {
                  "entryPoint": 3377,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_contract_IAccount": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3670,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3493,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_addStrategy_inner": {
                  "entryPoint": 4019,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_beforeTask": {
                  "entryPoint": 4153,
                  "id": 2255,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 4529,
                  "id": 1278,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_removeStrategy_inner": {
                  "entryPoint": 3867,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ad73": {
                  "entryPoint": 3736,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFF199DE EQ PUSH2 0xC51 JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0xC0F JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xACD JUMPI DUP1 PUSH4 0x47A471A1 EQ PUSH2 0xA72 JUMPI DUP1 PUSH4 0x4A86E1A6 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x4B837649 EQ PUSH2 0x940 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x8B0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xAA91C9C6 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0xCA709A25 EQ PUSH2 0x7DF JUMPI DUP1 PUSH4 0xE0AB4650 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xE76E8CAD EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xF887CF00 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xFABBF02C EQ PUSH2 0x28F JUMPI PUSH4 0xFCA0025D EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x28A JUMPI PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x9068A86800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x252 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP2 DUP6 SWAP2 PUSH2 0x25D JUMPI JUMPDEST POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xFBCBC0F100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x252 JUMPI DUP4 SWAP2 PUSH2 0x1EC JUMPI JUMPDEST POP PUSH32 0xAF80AA5CC016B82830ABF03E3110890FCD831F57410495ACDF9CC3B3973129E9 SWAP2 PUSH2 0x1E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP4 AND SWAP2 DUP3 DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xD31 JUMP JUMPDEST LOG1 DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x24A JUMPI JUMPDEST DUP2 PUSH2 0x207 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x246 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x246 JUMPI PUSH32 0xAF80AA5CC016B82830ABF03E3110890FCD831F57410495ACDF9CC3B3973129E9 PUSH2 0x18E JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x27D SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x283 JUMPI JUMPDEST PUSH2 0x275 DUP2 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE79 JUMP JUMPDEST CODESIZE PUSH2 0x14A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x26B JUMP JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH2 0x2C7 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x4 DUP2 LT ISZERO SWAP2 DUP3 PUSH2 0x411 JUMPI DUP2 ISZERO PUSH2 0x433 JUMPI PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x425 JUMPI JUMPDEST DUP4 DUP2 PUSH2 0x400 JUMPI JUMPDEST POP PUSH2 0x3BC JUMPI PUSH1 0x2 EQ SWAP2 DUP3 PUSH2 0x396 JUMPI JUMPDEST DUP3 PUSH2 0x370 JUMPI JUMPDEST POP POP PUSH2 0x32C JUMPI DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177206E6F7420617070726F7665640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x382 JUMPI PUSH1 0x3 EQ ISZERO CODESIZE DUP1 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 SWAP3 POP PUSH2 0x3A8 JUMPI PUSH1 0x2 DUP2 EQ ISZERO SWAP2 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420617070726F766564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH2 0x411 JUMPI PUSH1 0x3 DUP3 EQ ISZERO DUP4 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP4 SWAP3 POP PUSH1 0x1 DUP3 EQ ISZERO PUSH2 0x307 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F7420617070726F766564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x28A JUMPI PUSH2 0x4A5 PUSH2 0x11B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0x599 SWAP1 PUSH1 0x20 PUSH2 0x53A CALLDATASIZE PUSH2 0xCF7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x545 DUP4 PUSH2 0x1039 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0xB76E07CC00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP4 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5EE JUMPI SWAP1 PUSH2 0x5B6 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E6 JUMPI JUMPDEST DUP2 PUSH2 0x5D0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0x609 CALLDATASIZE PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x252 JUMPI PUSH2 0x64F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP6 SWAP2 PUSH2 0x7C0 JUMPI JUMPDEST POP AND CALLER EQ PUSH2 0xE98 JUMP JUMPDEST DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x40 DUP2 PUSH1 0x20 DUP5 ADD SWAP4 SUB SLT PUSH2 0x246 JUMPI PUSH2 0x66E PUSH1 0x20 DUP3 ADD PUSH2 0xEE3 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7BC JUMPI ADD SWAP1 DUP3 PUSH1 0x3F DUP4 ADD SLT ISZERO PUSH2 0x790 JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x7A8 JUMPI DUP4 PUSH1 0x5 SHL SWAP3 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x6BC PUSH1 0x20 DUP7 ADD DUP8 PUSH2 0xDA5 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x20 DUP1 DUP4 SWAP7 DUP4 ADD ADD ADD SWAP3 DUP4 GT PUSH2 0x7A4 JUMPI PUSH1 0x40 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x794 JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x790 JUMPI SWAP2 DUP4 DUP1 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0xEE6CE92500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP5 PUSH1 0x20 PUSH1 0x4 DUP6 ADD MSTORE MLOAD DUP1 SWAP6 MSTORE PUSH1 0x44 DUP4 ADD SWAP1 SWAP5 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x774 JUMPI POP POP DUP4 DUP1 SWAP6 POP DUP4 DUP1 SWAP3 SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x767 JUMPI PUSH2 0x759 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x762 SWAP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD SWAP7 DUP10 SWAP7 POP DUP9 SWAP6 POP SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x738 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x6D8 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH2 0x7D9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x283 JUMPI PUSH2 0x275 DUP2 DUP4 PUSH2 0xDA5 JUMP JUMPDEST CODESIZE PUSH2 0x646 JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH2 0x863 PUSH2 0x11B1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0x8BF CALLDATASIZE PUSH2 0xD54 JUMP JUMPDEST POP POP PUSH2 0x8CD PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x8E2 DUP2 DUP5 PUSH2 0xDA5 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x1F NOT DUP2 ADD CALLDATASIZE DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP4 MLOAD SWAP2 DUP3 PUSH1 0x40 DUP6 ADD MSTORE DUP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x929 JUMPI POP POP PUSH1 0x60 DUP1 SWAP5 POP DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP1 DUP7 ADD DUP3 ADD MLOAD DUP8 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP7 SWAP5 POP DUP2 ADD PUSH2 0x908 JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x4 PUSH2 0x951 CALLDATASIZE PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x996 SWAP2 PUSH2 0x99B SWAP5 DUP7 SWAP2 PUSH2 0x7C0 JUMPI POP AND CALLER EQ PUSH2 0xE98 JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH2 0x9B8 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x790 JUMPI PUSH1 0x24 PUSH1 0x20 SWAP3 PUSH2 0x9E4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH2 0x1039 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xC07E866E00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA67 JUMPI DUP3 SWAP2 PUSH2 0xA31 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA5F JUMPI JUMPDEST DUP2 PUSH2 0xA4C PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28A JUMPI PUSH1 0x20 SWAP2 POP MLOAD CODESIZE PUSH2 0xA26 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x4 PUSH2 0xA83 CALLDATASIZE PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAC8 SWAP2 PUSH2 0x99B SWAP5 DUP7 SWAP2 PUSH2 0x7C0 JUMPI POP AND CALLER EQ PUSH2 0xE98 JUMP JUMPDEST PUSH2 0xF1B JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0xADC CALLDATASIZE PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xAE8 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH2 0xAF4 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x60 SWAP2 DUP2 ADD SUB SLT PUSH2 0x28A JUMPI DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x790 JUMPI PUSH1 0x40 ADD CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x790 JUMPI PUSH1 0x4 SWAP2 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0xF63BE01 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP6 DUP3 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x64 SWAP4 PUSH1 0x20 SWAP7 DUP4 SWAP2 PUSH2 0xBF2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH32 0x72642F2B00000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH2 0xBC3 JUMPI DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBEA JUMPI JUMPDEST DUP2 PUSH2 0xBDC PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28A JUMPI MLOAD DUP1 DUP3 DUP1 RETURN JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xC09 SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x283 JUMPI PUSH2 0x275 DUP2 DUP4 PUSH2 0xDA5 JUMP JUMPDEST CODESIZE PUSH2 0xB76 JUMP JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC38 PUSH2 0xCE1 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH2 0xC4F PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0xD31 JUMP JUMPDEST RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI PUSH2 0xCC4 PUSH1 0x20 PUSH2 0xC65 CALLDATASIZE PUSH2 0xCF7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xC70 DUP4 PUSH2 0x1039 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0xA49B5CB400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP4 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA67 JUMPI DUP3 SWAP2 PUSH2 0xA31 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E1 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5E1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E1 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E1 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0xD3E JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x5E1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5E1 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x5E1 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x5E1 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5E1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5E1 JUMPI DUP2 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE33 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xDA5 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x5E1 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xE63 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E1 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E1 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE9F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792066756E6374696F6E73000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x5E1 JUMPI PUSH2 0xF18 PUSH1 0x20 PUSH2 0xF11 DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP4 ADD PUSH2 0xEE3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF37 DUP2 SWAP3 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0xEF7 JUMP JUMPDEST SWAP3 AND SWAP2 AND SWAP1 PUSH1 0x0 SWAP2 DUP2 ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI JUMPDEST PUSH2 0xFA6 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x246 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0x175188E800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH2 0xF99 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0xFA3 SWAP2 PUSH2 0xDA5 JUMP JUMPDEST POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xFCF DUP2 SWAP3 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0xEF7 JUMP JUMPDEST SWAP3 AND SWAP2 AND SWAP1 PUSH1 0x0 SWAP2 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI JUMPDEST PUSH2 0xFA6 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x246 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0x223E547900000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH2 0xF99 JUMPI POP POP JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x3 SLOAD AND SWAP2 AND SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP3 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x117D JUMPI JUMPDEST POP PUSH1 0x1 SLOAD DUP1 SWAP3 LT ISZERO SWAP2 DUP3 PUSH2 0x10D8 JUMPI JUMPDEST POP POP PUSH32 0x4B07B434919E25D56E2425B6A75582BF959A6DA1DA0D8F1D7E47C77267A35E6B SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE ADDRESS PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x64 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP11 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1139 JUMPI JUMPDEST DUP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1169 JUMPI JUMPDEST DUP2 PUSH2 0x1152 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E1 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x5E1 JUMPI CODESIZE PUSH2 0x1133 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11A9 JUMPI JUMPDEST DUP2 PUSH2 0x1199 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E1 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x108E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x118C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x11C5 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 CREATE2 TLOAD 0xC6 0x2D RETURNDATASIZE SELFBALANCE 0xE1 LOG4 0x4E BLOBHASH 0xB3 SIGNEXTEND CALLCODE 0x21 0xB3 ISZERO 0xD7 JUMPI 0xE6 SWAP16 0xAF CALLDATALOAD SWAP9 0xC8 SWAP13 TLOAD RETURNDATACOPY SWAP3 0xA9 0xA8 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "789:5865:13:-:0;;;;;;;;;;;;;;;;;;;;;;;3232:42;789:5865;3232:42;;;789:5865;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2959:47;789:5865;2959:47;;;789:5865;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;789:5865:13;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;4668:29;;;;789:5865;4668:29;;;;;;;;;-1:-1:-1;;;;;4668:29:13;789:5865;4668:29;;;;;789:5865;;4652:79;789:5865;;4652:79;;;;789:5865;4652:79;;735:10:11;789:5865:13;4652:79;;789:5865;;4652:79;;;;;;;;;;;789:5865;;4788:32;789:5865;;-1:-1:-1;;;;;789:5865:13;;;;;;;4744:10;789:5865;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4788:32;789:5865;;4652:79;;;789:5865;4652:79;;789:5865;4652:79;;;;;;789:5865;4652:79;;;:::i;:::-;;;789:5865;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;4788:32;4652:79;;789:5865;;;;4652:79;;;-1:-1:-1;4652:79:13;;;789:5865;;;;;;;;;4668:29;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;789:5865;;;;;;;;;;;;;;;;;;;1077:29;789:5865;;;;;;;;;;;;;;-1:-1:-1;;789:5865:13;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;5249:10;789:5865;;;;;;;;;;;;;;;;5333:38;;5329:98;;789:5865;5530:34;;:92;;;789:5865;5530:146;;;;789:5865;5512:233;;;5858:27;5850:35;:94;;;;789:5865;5850:148;;;789:5865;5832:236;;;;789:5865;;5832:236;6025:31;789:5865;;-1:-1:-1;;;6025:31:13;;789:5865;;6025:31;;789:5865;;;;;;;;;;;6025:31;5850:148;789:5865;;;;;5976:22;5961:37;;5850:148;;;;789:5865;;;-1:-1:-1;;;789:5865:13;;;;;;5850:94;789:5865;;;;;5858:27;5902:42;;;5850:94;;;789:5865;;;-1:-1:-1;;;789:5865:13;;;;;;5512:233;5703:30;789:5865;;-1:-1:-1;;;5703:30:13;;789:5865;;5703:30;;789:5865;;;;;;;;;;;5703:30;5530:146;789:5865;;;;5654:22;5639:37;;;5530:146;;;789:5865;;;-1:-1:-1;;;789:5865:13;;;;;;5530:92;-1:-1:-1;789:5865:13;;-1:-1:-1;789:5865:13;5581:41;;;5530:92;;5329:98;5388:27;789:5865;;-1:-1:-1;;;5388:27:13;;789:5865;;5388:27;;789:5865;;;;;;;;;;;5388:27;789:5865;;;;;;;-1:-1:-1;;789:5865:13;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;1500:62:7;;:::i;:::-;2627:22;;2623:91;;-1:-1:-1;;;;;789:5865:13;;;-1:-1:-1;;789:5865:13;;;;;;3052:40:7;;;;789:5865:13;;2623:91:7;789:5865:13;2672:31:7;;;;789:5865:13;;;2672:31:7;789:5865:13;;;;;2959:47;789:5865;2959:47;789:5865;;;:::i;:::-;2927:7;;;;;:::i;:::-;789:5865;-1:-1:-1;;;;;789:5865:13;;2959:47;;;;;;789:5865;2959:47;;789:5865;2959:47;;789:5865;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;;2959:47;;789:5865;;2959:47;;;;;;;;;;789:5865;2959:47;789:5865;;;;;;;2959:47;;;;;;;;;;;;789:5865;2959:47;;;:::i;:::-;;;789:5865;;;;2959:47;789:5865;;2959:47;;789:5865;-1:-1:-1;789:5865:13;;2959:47;;;-1:-1:-1;2959:47:13;;;789:5865;;;;;;;;;;;;;;;;;;:::i;:::-;;6578:34;-1:-1:-1;;;;;789:5865:13;;;;;6578:34;;;;-1:-1:-1;;;6578:34:13;;;;;;;;;6560:71;6578:34;-1:-1:-1;;;;;6578:34:13;;;;;789:5865;;;735:10:11;6568:44:13;6560:71;:::i;:::-;789:5865;;4384:79;;;789:5865;4384:79;6578:34;4384:79;;789:5865;;;;;;6578:34;4384:79;;789:5865;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6578:34;789:5865;;;;;;;;;;;;;;;;;6578:34;789:5865;;;;:::i;:::-;;;6578:34;789:5865;;;6578:34;789:5865;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;4476:37;;;;;;789:5865;;;;;;4476:37;;;789:5865;4476:37;;789:5865;;;4476:37;6578:34;789:5865;4476:37;;789:5865;;;;;;;;;;;;;;;;;4476:37;;;;;;;;;;;;;;;;;;;789:5865;;4476:37;;;;:::i;:::-;;;789:5865;;4476:37;789:5865;;;;;;;;;;;;;;;;6578:34;789:5865;;;;;;-1:-1:-1;789:5865:13;;-1:-1:-1;789:5865:13;;;;;;;;4476:37;789:5865;;;;;;;;6578:34;789:5865;;;;;;;;;;;;;;-1:-1:-1;;;789:5865:13;;;;;;;;;;6578:34;;;;;;;;;;;;;;:::i;:::-;;;;789:5865;;;;;;;;;;;;;;-1:-1:-1;;;;;5075:9:13;789:5865;;;;;;;;;;;;;;;;;;;;;;1113:33;789:5865;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;;;;;;;;;;;;1500:62:7;;:::i;:::-;789:5865:13;-1:-1:-1;;;;;789:5865:13;;-1:-1:-1;;789:5865:13;;;;;3052:40:7;;;;789:5865:13;;;;;;;;;;:::i;:::-;;;1668:32;1686:14;789:5865;1668:15;:32;:::i;:::-;1704:9;789:5865;-1:-1:-1;789:5865:13;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;789:5865:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;789:5865:13;;;;;;;;;;;;;:::i;:::-;6578:34;-1:-1:-1;;;;;789:5865:13;;;;;6578:34;;;;-1:-1:-1;;;6578:34:13;;;;;;;;-1:-1:-1;;;;;6560:71:13;6578:34;6642:1;6578:34;;;;;789:5865;;735:10:11;6568:44:13;6560:71;:::i;:::-;6642:1;:::i;:::-;789:5865;;;;;;;;;-1:-1:-1;;789:5865:13;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;3440:7;;-1:-1:-1;;;;;3440:7:13;;:::i;:::-;789:5865;;;3476:35;;;;;789:5865;3476:35;;789:5865;3476:35;;789:5865;;3476:35;;;;;;;;;;;789:5865;;;;;;;;;3476:35;;;789:5865;3476:35;;789:5865;3476:35;;;;;;789:5865;3476:35;;;:::i;:::-;;;789:5865;;;;;;;;3476:35;;;;;;-1:-1:-1;3476:35:13;;;789:5865;;;;;;;;;;;;;;;;;;:::i;:::-;6578:34;-1:-1:-1;;;;;789:5865:13;;;;;6578:34;;;;-1:-1:-1;;;6578:34:13;;;;;;;;-1:-1:-1;;;;;6560:71:13;6578:34;6642:1;6578:34;;;;;789:5865;;735:10:11;6568:44:13;6560:71;:::i;:::-;6642:1;:::i;789:5865::-;;;;;;;;:::i;:::-;1847:32;1865:14;789:5865;1847:15;:32;:::i;:::-;1883:9;789:5865;-1:-1:-1;1842:330:13;;789:5865;;;1842:330;2043:55;789:5865;2043:55;;;789:5865;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;2421:34;;;;-1:-1:-1;;;2421:34:13;;;;;;;;;;-1:-1:-1;;;;;2491:57:13;2421:34;789:5865;2421:34;;;;;1842:330;789:5865;;;2491:57;;;;;789:5865;2491:57;;789:5865;2491:57;;789:5865;;;;;;;;;;2491:57;;;;;;;;1842:330;789:5865;;;2491:57;789:5865;2491:57;;789:5865;2491:57;;;;;;789:5865;2491:57;;;:::i;:::-;;;789:5865;;;;;1842:330;789:5865;;;2491:57;;;-1:-1:-1;2491:57:13;;2421:34;;;;;;;;;;;;;;:::i;:::-;;;;789:5865;;;;;;;-1:-1:-1;;789:5865:13;;;;;;;;-1:-1:-1;;;;;789:5865:13;;:::i;:::-;;;;4955:10;789:5865;;;;;;;;;;;:::i;:::-;;;;;;;3232:42;;789:5865;;;:::i;:::-;3196:7;;;;;:::i;:::-;789:5865;-1:-1:-1;;;;;789:5865:13;;3232:42;;;;;;789:5865;3232:42;;789:5865;3232:42;;789:5865;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;;3232:42;;789:5865;;3232:42;;;;;;;;;;;;789:5865;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;789:5865:13;;;;;-1:-1:-1;789:5865:13;;;;-1:-1:-1;;789:5865:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;789:5865:13;;;;;-1:-1:-1;789:5865:13;;;-1:-1:-1;;789:5865:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;789:5865:13;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;789:5865:13;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;789:5865:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;789:5865:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;789:5865:13;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;3889:360::-;-1:-1:-1;;;;;4006:77:13;3889:360;;4006:77;789:5865;;;4006:77;;;;;;:::i;:::-;789:5865;;;;4117:1;;4100:19;;;:45;;;;3889:360;4096:84;;4192:49;;;;;789:5865;;4192:49;789:5865;;;;4192:49;;;;;789:5865;4192:49;;;;;789:5865;4192:49;;;;;;;;3889:360;;:::o;4192:49::-;;;;;:::i;:::-;3889:360;:::o;4096:84::-;4162:7;;;:::o;4100:45::-;4123:22;;;4100:45;;3527:354;-1:-1:-1;;;;;3641:77:13;3527:354;;3641:77;789:5865;;;3641:77;;;;;;:::i;:::-;789:5865;;;;3752:1;;3735:19;;;:45;;;;3527:354;3731:84;;3827:46;;;;;789:5865;;3827:46;789:5865;;;;3827:46;;;;;789:5865;3827:46;;;;;789:5865;3827:46;;;;;;;;3527:354;;:::o;3735:45::-;3758:22;;;3735:45;;6083:393;-1:-1:-1;;;;;789:5865:13;6158:9;789:5865;;;;;;;6158:37;789:5865;6158:37;;;;;;789:5865;;6158:37;;;;;;;;;;;-1:-1:-1;6158:37:13;;;6083:393;789:5865;6199:11;789:5865;6158:52;;;;6223:175;;;;6083:393;789:5865;;6415:53;789:5865;;;;;;;;6452:4;789:5865;;;;;;;;6415:53;6083:393::o;6223:175::-;789:5865;;6252:134;-1:-1:-1;;;;;6328:13:13;789:5865;;-1:-1:-1;789:5865:13;;6252:134;;;;;789:5865;6252:134;;;6158:37;6252:134;;789:5865;6158:37;789:5865;;;;;;;6252:134;;;;;;;;6223:175;;;;6252:134;789:5865;6252:134;;789:5865;6252:134;;;;;;789:5865;6252:134;;;:::i;:::-;;;789:5865;;;;;;;;;;;6252:134;;;;;;-1:-1:-1;6252:134:13;;;789:5865;;;-1:-1:-1;789:5865:13;;;;;6158:37;;;;789:5865;6158:37;;789:5865;6158:37;;;;;;789:5865;6158:37;;;:::i;:::-;;;789:5865;;;;;6158:37;;;;;;;-1:-1:-1;6158:37:13;;1796:162:7;-1:-1:-1;;;;;1710:6:7;789:5865:13;;735:10:11;1855:23:7;1851:101;;1796:162::o;1851:101::-;1901:40;1710:6;1901:40;735:10:11;1901:40:7;789:5865:13;;1710:6:7;1901:40"
            },
            "methodIdentifiers": {
              "_interval()": "aa91c9c6",
              "_lastTimeStamp()": "fabbf02c",
              "addStrategy(bytes)": "4b837649",
              "allowance(address)": "3e5beab9",
              "approve(uint8)": "fca0025d",
              "checkApproval(address,uint8)": "f887cf00",
              "checkUpkeep(bytes)": "6e04ff0d",
              "depositFromAccount(address,uint256,address)": "e76e8cad",
              "getFeeToken()": "ca709a25",
              "owner()": "8da5cb5b",
              "performUpkeep(bytes)": "4585e33b",
              "reallocation(bytes)": "e0ab4650",
              "removeStrategy(bytes)": "47a471a1",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "withdrawAllToAccount(address,address)": "4a86e1a6",
              "withdrawToAccount(address,uint256,address)": "0ff199de"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feePerTask\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"contract IAddressesProvider\",\"name\":\"provider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasFunds\",\"type\":\"bool\"}],\"name\":\"BeforeTask\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"checkApproval\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositFromAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"reallocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"depositFromAccount(address,uint256,address)\":{\"details\":\"Needs to safe-guard these deposit/withdraw functions to controller and account owner only.Needs to call _beforeTask function only is msg.sender is controller.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Agent.sol\":\"Agent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Agent.sol\":{\"keccak256\":\"0xb875d5d714fa3b51828095b4ce310f4d957d3f7d43f96c7e1d89b678d4795b40\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94425774912e08c81f1b8a97617fc4a02ad4436dbfdbe4ec25ca453d12d57817\",\"dweb:/ipfs/QmUNpiRt7Bt857rFsCnzrUsCTiCPcBy695CLt3G7h9ucbG\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAccountFactory.sol\":{\"keccak256\":\"0x81df111ce19be9b9bd8367c4e4c39a493c2ea13ff467d610162f44e4dd5d68cc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://54208f747876104fb35611ea1530d78dba0585287fd78a6363693a4dcaf2b131\",\"dweb:/ipfs/QmRtE6TvXKJ5kNXsZxosf2g9TtTymYsJdAhSyuqJ7RPi25\"]},\"contracts/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x62a238e1b9c8efbc663ed3f7f1ae5dd5eb590cc1dfb662103841be30e7af9200\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e961b8898c79d00d71834f234a0f1b9c3fe345a4993c89e4d1e5e283b8a6eba2\",\"dweb:/ipfs/QmcwyAE5NANqiPyDgkY1sZnGRyVnQrK3zsqfuoSZ9aZLzP\"]},\"contracts/interfaces/IAfterYieldFunctions.sol\":{\"keccak256\":\"0x46ac9fc07f75f294388732baf234e709b94040086b7fab73af24c5b1f43d9715\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d5d5744d9929876fba4b19ba29dabe2bfba72154ddb0754443e9719fed50ca92\",\"dweb:/ipfs/QmQcG2J6aPRTs7h6tNC5F8BQC3DAFUXi62LemSfgjaB1Pg\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/VaultUpgradeable.sol": {
        "VaultUpgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "newStrategy",
                  "type": "address"
                }
              ],
              "name": "addStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "depositFromAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "earn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "getAllocation",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAsset",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAvailable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "strategyIndex",
                  "type": "uint256"
                }
              ],
              "name": "getLastHarvest",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lastHarvest",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "getShares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStrategies",
              "outputs": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSummary",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocated",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idle",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                }
              ],
              "name": "reallocate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategyToRemove",
                  "type": "address"
                }
              ],
              "name": "removeStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawAll",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawAllToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601a57600160005561274990816100208239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde0314611b2b578063095ea7b314611a855780630e02292314611a4857806312065fe014611a2d578063175188e8146118d857806318160ddd1461189b578063223e5479146116ce57806323b872dd146115335780632e1a7d4d14611515578063313ce567146114f95780634051ddac146114845780635c222bad1461145d5780636f7267b71461143957806370a08231146113e2578063715018a61461133c578063853828b6146112e45780638da5cb5b1461129e57806395d89b4114611159578063a29b3c90146110b2578063a49b5cb414610e17578063a9059cbb14610de6578063b49a60bb14610d1a578063b6b55f2514610c1c578063b76e07cc14610a19578063c07e866e1461059b578063d389800f14610582578063dd62ed3e14610505578063ee6ce9251461027b578063f2fde38b1461018e5763f9cc06051461016657600080fd5b34610189576000366003190112610189576020610181612273565b604051908152f35b600080fd5b34610189576020366003190112610189576001600160a01b036101af611c70565b6101b7612317565b16801561024c576001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300548273ffffffffffffffffffffffffffffffffffffffff198216177f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346101895760203660031901126101895760043567ffffffffffffffff811161018957366023820112156101895780600401359067ffffffffffffffff82116104ef578160051b604051926102d36020830185611c9c565b8352602460208401918301019136831161018957602401905b8282106104df57836102fc612317565b60025481510361049b5760005b60025481101561037f576001600160a01b0361032482611cbe565b90549060031b1c169061033e61033983612378565b611d8b565b82518110156103695760019160208260051b8501015190600052600360205260406000205501610309565b634e487b7160e01b600052603260045260246000fd5b6000806002545b80831061045e57612710821161041a5760005b600254811015610410576001600160a01b036103b482611cbe565b90549060031b1c1690813b156101895760008092600460405180958193630f8d564160e31b83525af1918215610404576001926103f3575b5001610399565b60006103fe91611c9c565b826103ec565b6040513d6000823e3d90fd5b610418612115565b005b606460405162461bcd60e51b815260206004820152601660248201527f416c6c6f636174696f6e2065786365656473206d6178000000000000000000006044820152fd5b906104926001916001600160a01b0361047686611cbe565b90549060031b1c16600052600360205260406000205490611cd9565b92019190610386565b606460405162461bcd60e51b815260206004820152601860248201527f4d69736d617463686564206172726179206c656e6774687300000000000000006044820152fd5b81358152602091820191016102ec565b634e487b7160e01b600052604160045260246000fd5b346101895760403660031901126101895761051e611c70565b6001600160a01b0361056a610531611c86565b926001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b91166000526020526020604060002054604051908152f35b3461018957600036600319011261018957610418612115565b34610189576020366003190112610189576105b4611c70565b6105bc612317565b6001600160a01b03811690604051631127a41d60e31b8152602081600481865afa8015610404576001600160a01b03916000916109fa575b50166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205460009161062e612317565b6001600160a01b036004541690813b156109025760405162f887cf60e81b81526001600160a01b03919091166004820152600260248201528381604481855afa801561090e5784906109ea575b505060405190630b37927d60e21b82526004820152602081602481875afa90811561080b57906106b29184916109cb575b506120ca565b6106ee6106c6826106c1611ce6565b611e4d565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490611e60565b90604051631127a41d60e31b8152602081600481885afa90811561090e5761071f918391869161099c575b5061251d565b610727612273565b828110610816575b5050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146107955750828092819282821561078c575bf11561077f5760209150604051908152f35b50604051903d90823e3d90fd5b506108fc61076d565b60405163a9059cbb60e01b81526001600160a01b0392909216600483015260248201929092529160209183916044918391905af1801561080b57602093506107de575b50610181565b6107fd90833d8511610804575b6107f58183611c9c565b810190611e8f565b50826107d8565b503d6107eb565b6040513d85823e3d90fd5b610824908395949295611dd6565b9281935b600254851080610993575b1561096a576001600160a01b0361084986611cbe565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa90811561095f5785929189918491610920575b506106c66020939261088b92611e4d565b848111610919575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561090e5784916108d7575b506108cb906108d192611dd6565b94611e80565b93610828565b90506020813d8211610906575b816108f160209383611c9c565b8101031261090257516108d16108bd565b8380fd5b3d91506108e4565b6040513d86823e3d90fd5b5083610893565b92935050506020813d8211610957575b8161093d60209383611c9c565b81010312610953575184919088906106c661087a565b8480fd5b3d9150610930565b6040513d87823e3d90fd5b50925092508290610979612273565b8181111561098c57505b9091928461072f565b9050610983565b50801515610833565b6109be915060203d6020116109c4575b6109b68183611c9c565b810190611e2e565b87610719565b503d6109ac565b6109e4915060203d602011610804576107f58183611c9c565b856106ac565b6109f391611c9c565b848361067b565b610a13915060203d6020116109c4576109b68183611c9c565b846105f4565b3461018957604036600319011261018957610a32611c86565b610a3a612317565b610a4261261c565b6000906001600160a01b0360045416803b15610be9576001600160a01b036040519262f887cf60e81b8452169182600482015260016024820152838082604481865afa801561077f57610c0c575b505060405190630b37927d60e21b82526004820152602081602481855afa801561080b57610ac4918491610bed57506120ca565b610acc611ce6565b813b15610be9576040517fce8c42e80000000000000000000000000000000000000000000000000000000081526004356004820152838160248183875af1801561090e579060049460209392610bd9575b5050610b27612115565b610b3881610b33611ce6565b611dd6565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610bc1575050915b60405193848092631127a41d60e31b82525afa80156104045781610b9791602094600091610ba4575b50612657565b6001600055604051908152f35b610bbb9150853d87116109c4576109b68183611c9c565b85610b91565b610bce90610bd393611e4d565b611e60565b91610b68565b610be291611c9c565b8480610b1d565b8280fd5b610c06915060203d602011610804576107f58183611c9c565b846106ac565b610c1591611c9c565b8383610a90565b3461018957602036600319011261018957610c3561261c565b6000610c3f611ce6565b8160206001600160a01b03600154166064604051809481937f23b872dd00000000000000000000000000000000000000000000000000000000835233600484015230602484015260043560448401525af1801561080b5760209350610cff575b50610ca8612115565b610cb481610b33611ce6565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610ced5750505b610b978133612657565b610bce90610cfa93611e4d565b610ce3565b610d1590833d8511610804576107f58183611c9c565b610c9f565b34610189576000366003190112610189576040518060206002549283815201809260026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9060005b818110610dc75750505081610d7b910382611c9c565b6040519182916020830190602084525180915260408301919060005b818110610da5575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610d97565b82546001600160a01b0316845260209093019260019283019201610d65565b3461018957604036600319011261018957610e0c610e02611c70565b60243590336123c6565b602060405160018152f35b3461018957604036600319011261018957600435610e33611c86565b90600090610e3f612317565b6001600160a01b036004541692833b15610be95760405162f887cf60e81b81526001600160a01b0382166004820152600260248201528381604481885afa801561090e5790846001600160a01b0393926110a2575b5050169260405190630b37927d60e21b82526004820152602081602481875afa90811561080b5790610ecc9184916109cb57506120ca565b610edb6106c6826106c1611ce6565b90604051631127a41d60e31b8152602081600481885afa90811561090e57610f0b918391869161099c575061251d565b610f13612273565b828110610f69575050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146107955750828092819282821561078c57f11561077f5760209150604051908152f35b610f77908395949295611dd6565b9281935b600254851080611099575b1561096a576001600160a01b03610f9c86611cbe565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa90811561095f578592918991849161105e575b506106c660209392610fde92611e4d565b848111611057575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561090e578491611024575b506108cb9061101e92611dd6565b93610f7b565b90506020813d821161104f575b8161103e60209383611c9c565b81010312610902575161101e611010565b3d9150611031565b5083610fe6565b92935050506020813d8211611091575b8161107b60209383611c9c565b81010312610953575184919088906106c6610fcd565b3d915061106e565b50801515610f86565b6110ab91611c9c565b8584610e94565b3461018957602036600319011261018957600460206001600160a01b036110d98335611cbe565b90549060031b1c16604051928380927faffd80b00000000000000000000000000000000000000000000000000000000082525afa801561040457600090611126575b602090604051908152f35b506020813d602011611151575b8161114060209383611c9c565b81010312610189576020905161111b565b3d9150611133565b346101895760003660031901126101895760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04548060011c90600181168015611294575b6020831081146112805782855290811561125c57506001146111de575b6111da836111ce81850382611c9c565b60405191829182611c27565b0390f35b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0460009081527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa939250905b808210611242575090915081016020016111ce6111be565b91926001816020925483858801015201910190929161122a565b60ff191660208086019190915291151560051b840190910191506111ce90506111be565b602484634e487b7160e01b81526022600452fd5b91607f16916111a1565b346101895760003660031901126101895760206001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b34610189576000366003190112610189576020610181611337336001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b611ea7565b3461018957600036600319011261018957611355612317565b60006001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1981167f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610189576020366003190112610189576020610181611400611c70565b6001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b346101895760203660031901126101895760206101816106c66004356106c1611ce6565b346101895760003660031901126101895760206001600160a01b0360015416604051908152f35b34610189576000366003190112610189576000806002545b8082106114d8578280612710039061271082116114c25760409182519182526020820152f35b634e487b7160e01b600052601160045260246000fd5b90916114f16001916001600160a01b0361047686611cbe565b92019061149c565b3461018957600036600319011261018957602060405160128152f35b34610189576020366003190112610189576020610181600435611ea7565b346101895760603660031901126101895761154c611c70565b611554611c86565b60443590611594836001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b0333166000526020526040600020549260001984106115bf575b610e0c93506123c6565b828410611698576001600160a01b0381161561166957331561163a57610e0c9361161b826001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b033316600052602052836040600020910390556115b5565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b82847ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b34610189576020366003190112610189576004356001600160a01b038116808203610189576116fb612317565b611706811515611de3565b61170f82612378565b611857576040517f8d928af8000000000000000000000000000000000000000000000000000000008152602081600481855afa8015610404576001600160a01b0391600091611838575b5016301490816117b5575b5061176e90611de3565b60025490680100000000000000008210156104ef576117968260016104189401600255611cbe565b9091906001600160a01b038084549260031b9316831b921b1916179055565b6004915060206001600160a01b036001541691604051938480927f5c222bad0000000000000000000000000000000000000000000000000000000082525afa9182156104045761176e926001600160a01b0391600091611819575b50161490611764565b611832915060203d6020116109c4576109b68183611c9c565b85611810565b611851915060203d6020116109c4576109b68183611c9c565b84611759565b606460405162461bcd60e51b815260206004820152601760248201527f537472617465677920616c7265616479206578697374730000000000000000006044820152fd5b346101895760003660031901126101895760207f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254604051908152f35b34610189576020366003190112610189576004356001600160a01b03811690818103610189576103396119129161190d612317565b612378565b60025460005b81811061192157005b826001600160a01b0361193383611cbe565b90549060031b1c161461194857600101611918565b6001600160a01b0361195982611cbe565b90549060031b1c16803b156101895760008091600460405180948193630f8d564160e31b83525af1801561040457611a1c575b50611995612115565b60001982019182116114c2576117966001600160a01b036119b86119c694611cbe565b90549060031b1c1691611cbe565b6002548015611a0657600019016119dc81611cbe565b6001600160a01b0382549160031b1b19169055600255600052600360205260006040812055600080f35b634e487b7160e01b600052603160045260246000fd5b6000611a2791611c9c565b8361198c565b34610189576000366003190112610189576020610181611ce6565b34610189576020366003190112610189576004356001600160a01b0381168091036101895760005260036020526020604060002054604051908152f35b3461018957604036600319011261018957611a9e611c70565b602435903315611669576001600160a01b031690811561163a573360009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101895760003660031901126101895760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03548060011c90600181168015611c1d575b6020831081146112805782855290811561125c5750600114611b9f576111da836111ce81850382611c9c565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0360009081527f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0939250905b808210611c03575090915081016020016111ce6111be565b919260018160209254838588010152019101909291611beb565b91607f1691611b73565b91909160208152825180602083015260005b818110611c5a575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201611c39565b600435906001600160a01b038216820361018957565b602435906001600160a01b038216820361018957565b90601f8019910116810190811067ffffffffffffffff8211176104ef57604052565b60025481101561036957600260005260206000200190600090565b919082018092116114c257565b611cee612273565b9060006002545b808210611d00575050565b9092600460206001600160a01b03611d1787611cbe565b90549060031b1c166040519283809263765ef2f360e11b82525afa90811561040457600091611d56575b50611d4e90600192611cd9565b930190611cf5565b906020823d8211611d83575b81611d6f60209383611c9c565b81010312611d805750516001611d41565b80fd5b3d9150611d62565b15611d9257565b606460405162461bcd60e51b815260206004820152601260248201527f5374726174656779206e6f7420666f756e6400000000000000000000000000006044820152fd5b919082039182116114c257565b15611dea57565b606460405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207374726174656779000000000000000000000000000000006044820152fd5b9081602091031261018957516001600160a01b03811681036101895790565b818102929181159184041417156114c257565b8115611e6a570490565b634e487b7160e01b600052601260045260246000fd5b60001981146114c25760010190565b90816020910312610189575180151581036101895790565b611eb66106c6826106c1611ce6565b90611ec1813361251d565b611ec9612273565b828110611f75575b5050906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114600014611f2357508160008115611f1a575b600080809381933390f11561040457565b506108fc611f09565b60405163a9059cbb60e01b81523360048201526024810184905290602090829060449082906000905af1801561040457611f5a5750565b611f729060203d602011610804576107f58183611c9c565b50565b611f7f9083611dd6565b926000935b6002548510806120c1575b1561209d576001600160a01b03611fa586611cbe565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa8015610404578591600091612067575b5091611fe66106c6602093600095611e4d565b848111612060575b6024906040519485938492632e1a7d4d60e01b845260048401525af19081156104045760009161202d575b506108cb9061202792611dd6565b93611f84565b906020823d8211612058575b8161204660209383611c9c565b81010312611d80575051612027612019565b3d9150612039565b5083611fee565b91506020823d8211612095575b8161208160209383611c9c565b81010312611d805750518490611fe6611fd3565b3d9150612074565b509250506120a9612273565b818111156120ba57505b3880611ed1565b90506120b3565b50801515611f8f565b156120d157565b606460405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152fd5b61211d612273565b9060005b60025481101561226e576001600160a01b0361213c82611cbe565b90549060031b1c169081600052600360205261271061216060406000205486611e4d565b048015612264576000906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee811483146122025750818080928682f115610404575b813b1561018957600080926004604051809581937fd0e30db00000000000000000000000000000000000000000000000000000000083525af1918215610404576001926121f1575b505b01612121565b60006121fc91611c9c565b386121e9565b60405163a9059cbb60e01b81526001600160a01b03861660048201526024810192909252909160209183916044918391905af1801561040457612246575b506121a1565b61225d9060203d8111610804576107f58183611c9c565b5038612240565b50600191506121eb565b509050565b6001546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361229f57504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa908115610404576000916122e8575090565b90506020813d60201161230f575b8161230360209383611c9c565b81010312610189575190565b3d91506122f6565b6001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416330361234a57565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6002549060005b82811061238e57505050600090565b6001600160a01b0361239f82611cbe565b90549060031b1c166001600160a01b038316146123be5760010161237f565b505050600190565b6001600160a01b03169081156124ee576001600160a01b03169182156124bf5760008281527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260408120548281106124a55791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9587602096527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00865203828220558681527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b031680156124ee576000918183527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604083205481811061260357817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace008452036040862055807f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254037f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b60026000541461262d576002600055565b7f3ee5aeb50000000000000000000000000000000000000000000000000000000060005260046000fd5b6001600160a01b03169081156124bf577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826126b86000947f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254611cd9565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02558484527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00825260408420818154019055604051908152a356fea26469706673582212204ec7565dcb512766a3ad378e04365e8692bbd4888e2e48de06b1e6602b6404f964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x2749 SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B2B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A85 JUMPI DUP1 PUSH4 0xE022923 EQ PUSH2 0x1A48 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1A2D JUMPI DUP1 PUSH4 0x175188E8 EQ PUSH2 0x18D8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189B JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x16CE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1533 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1515 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14F9 JUMPI DUP1 PUSH4 0x4051DDAC EQ PUSH2 0x1484 JUMPI DUP1 PUSH4 0x5C222BAD EQ PUSH2 0x145D JUMPI DUP1 PUSH4 0x6F7267B7 EQ PUSH2 0x1439 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x133C JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x12E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1159 JUMPI DUP1 PUSH4 0xA29B3C90 EQ PUSH2 0x10B2 JUMPI DUP1 PUSH4 0xA49B5CB4 EQ PUSH2 0xE17 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xDE6 JUMPI DUP1 PUSH4 0xB49A60BB EQ PUSH2 0xD1A JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xC1C JUMPI DUP1 PUSH4 0xB76E07CC EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xC07E866E EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xEE6CE925 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18E JUMPI PUSH4 0xF9CC0605 EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1AF PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2317 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x189 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x189 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4EF JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C9C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x189 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4DF JUMPI DUP4 PUSH2 0x2FC PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 MLOAD SUB PUSH2 0x49B JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x324 DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x33E PUSH2 0x339 DUP4 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x1D8B JUMP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD MLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE ADD PUSH2 0x309 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP4 LT PUSH2 0x45E JUMPI PUSH2 0x2710 DUP3 GT PUSH2 0x41A JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x410 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3B4 DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3F3 JUMPI JUMPDEST POP ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP3 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x418 PUSH2 0x2115 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2065786365656473206D617800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x492 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x476 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST SWAP3 ADD SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x51E PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x56A PUSH2 0x531 PUSH2 0x1C86 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x418 PUSH2 0x2115 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x5B4 PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x9FA JUMPI JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x62E PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x90E JUMPI DUP5 SWAP1 PUSH2 0x9EA JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x80B JUMPI SWAP1 PUSH2 0x6B2 SWAP2 DUP5 SWAP2 PUSH2 0x9CB JUMPI JUMPDEST POP PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x6C6 DUP3 PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x1E4D JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 PUSH2 0x1E60 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI PUSH2 0x71F SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x99C JUMPI JUMPDEST POP PUSH2 0x251D JUMP JUMPDEST PUSH2 0x727 PUSH2 0x2273 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x816 JUMPI JUMPDEST POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x795 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x78C JUMPI JUMPDEST CALL ISZERO PUSH2 0x77F JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x80B JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0x7DE JUMPI JUMPDEST POP PUSH2 0x181 JUMP JUMPDEST PUSH2 0x7FD SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x804 JUMPI JUMPDEST PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E8F JUMP JUMPDEST POP DUP3 PUSH2 0x7D8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x824 SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x993 JUMPI JUMPDEST ISZERO PUSH2 0x96A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x849 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x95F JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0x920 JUMPI JUMPDEST POP PUSH2 0x6C6 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x88B SWAP3 PUSH2 0x1E4D JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x919 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI DUP5 SWAP2 PUSH2 0x8D7 JUMPI JUMPDEST POP PUSH2 0x8CB SWAP1 PUSH2 0x8D1 SWAP3 PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP4 PUSH2 0x828 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x906 JUMPI JUMPDEST DUP2 PUSH2 0x8F1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x902 JUMPI MLOAD PUSH2 0x8D1 PUSH2 0x8BD JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x893 JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x957 JUMPI JUMPDEST DUP2 PUSH2 0x93D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x953 JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x6C6 PUSH2 0x87A JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 POP DUP3 SWAP1 PUSH2 0x979 PUSH2 0x2273 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x98C JUMPI POP JUMPDEST SWAP1 SWAP2 SWAP3 DUP5 PUSH2 0x72F JUMP JUMPDEST SWAP1 POP PUSH2 0x983 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x833 JUMP JUMPDEST PUSH2 0x9BE SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI JUMPDEST PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E2E JUMP JUMPDEST DUP8 PUSH2 0x719 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x9E4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP6 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x9F3 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP5 DUP4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0xA13 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP5 PUSH2 0x5F4 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xA32 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0xA3A PUSH2 0x2317 JUMP JUMPDEST PUSH2 0xA42 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH3 0xF887CF PUSH1 0xE8 SHL DUP5 MSTORE AND SWAP2 DUP3 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP1 DUP3 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x77F JUMPI PUSH2 0xC0C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x80B JUMPI PUSH2 0xAC4 SWAP2 DUP5 SWAP2 PUSH2 0xBED JUMPI POP PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xACC PUSH2 0x1CE6 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCE8C42E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x90E JUMPI SWAP1 PUSH1 0x4 SWAP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xBD9 JUMPI JUMPDEST POP POP PUSH2 0xB27 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xB38 DUP2 PUSH2 0xB33 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x1DD6 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xBC1 JUMPI POP POP SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI DUP2 PUSH2 0xB97 SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xBA4 JUMPI JUMPDEST POP PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xBBB SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP6 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xBCE SWAP1 PUSH2 0xBD3 SWAP4 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP2 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0xBE2 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP5 DUP1 PUSH2 0xB1D JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH2 0xC06 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP5 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0xC15 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA90 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xC35 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3F PUSH2 0x1CE6 JUMP JUMPDEST DUP2 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x80B JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0xCFF JUMPI JUMPDEST POP PUSH2 0xCA8 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xCB4 DUP2 PUSH2 0xB33 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xCED JUMPI POP POP JUMPDEST PUSH2 0xB97 DUP2 CALLER PUSH2 0x2657 JUMP JUMPDEST PUSH2 0xBCE SWAP1 PUSH2 0xCFA SWAP4 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0xD15 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x2 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xDC7 JUMPI POP POP POP DUP2 PUSH2 0xD7B SWAP2 SUB DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xDA5 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD97 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xD65 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xE0C PUSH2 0xE02 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE33 PUSH2 0x1C86 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE3F PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x90E JUMPI SWAP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP3 PUSH2 0x10A2 JUMPI JUMPDEST POP POP AND SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x80B JUMPI SWAP1 PUSH2 0xECC SWAP2 DUP5 SWAP2 PUSH2 0x9CB JUMPI POP PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xEDB PUSH2 0x6C6 DUP3 PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI PUSH2 0xF0B SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x99C JUMPI POP PUSH2 0x251D JUMP JUMPDEST PUSH2 0xF13 PUSH2 0x2273 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0xF69 JUMPI POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x795 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x78C JUMPI CALL ISZERO PUSH2 0x77F JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xF77 SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x1099 JUMPI JUMPDEST ISZERO PUSH2 0x96A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF9C DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x95F JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0x105E JUMPI JUMPDEST POP PUSH2 0x6C6 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xFDE SWAP3 PUSH2 0x1E4D JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x1057 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI DUP5 SWAP2 PUSH2 0x1024 JUMPI JUMPDEST POP PUSH2 0x8CB SWAP1 PUSH2 0x101E SWAP3 PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x104F JUMPI JUMPDEST DUP2 PUSH2 0x103E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x902 JUMPI MLOAD PUSH2 0x101E PUSH2 0x1010 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1031 JUMP JUMPDEST POP DUP4 PUSH2 0xFE6 JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1091 JUMPI JUMPDEST DUP2 PUSH2 0x107B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x953 JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x6C6 PUSH2 0xFCD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x106E JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x10AB SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP6 DUP5 PUSH2 0xE94 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10D9 DUP4 CALLDATALOAD PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xAFFD80B000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x1126 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1151 JUMPI JUMPDEST DUP2 PUSH2 0x1140 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x189 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x111B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1133 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1294 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x1280 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x125C JUMPI POP PUSH1 0x1 EQ PUSH2 0x11DE JUMPI JUMPDEST PUSH2 0x11DA DUP4 PUSH2 0x11CE DUP2 DUP6 SUB DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C27 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1242 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x11CE PUSH2 0x11BE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x122A JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x11CE SWAP1 POP PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11A1 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x1337 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA7 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x1355 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x1400 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x6C6 PUSH1 0x4 CALLDATALOAD PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x14D8 JUMPI DUP3 DUP1 PUSH2 0x2710 SUB SWAP1 PUSH2 0x2710 DUP3 GT PUSH2 0x14C2 JUMPI PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x14F1 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x476 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x149C JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH1 0x4 CALLDATALOAD PUSH2 0x1EA7 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x154C PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x1554 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1594 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x15BF JUMPI JUMPDEST PUSH2 0xE0C SWAP4 POP PUSH2 0x23C6 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1698 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1669 JUMPI CALLER ISZERO PUSH2 0x163A JUMPI PUSH2 0xE0C SWAP4 PUSH2 0x161B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x15B5 JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x189 JUMPI PUSH2 0x16FB PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x1706 DUP2 ISZERO ISZERO PUSH2 0x1DE3 JUMP JUMPDEST PUSH2 0x170F DUP3 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1838 JUMPI JUMPDEST POP AND ADDRESS EQ SWAP1 DUP2 PUSH2 0x17B5 JUMPI JUMPDEST POP PUSH2 0x176E SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x1796 DUP3 PUSH1 0x1 PUSH2 0x418 SWAP5 ADD PUSH1 0x2 SSTORE PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SWAP2 POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C222BAD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x404 JUMPI PUSH2 0x176E SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1819 JUMPI JUMPDEST POP AND EQ SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1832 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP6 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x1851 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP5 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472617465677920616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x189 JUMPI PUSH2 0x339 PUSH2 0x1912 SWAP2 PUSH2 0x190D PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x2378 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1921 JUMPI STOP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1933 DUP4 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1948 JUMPI PUSH1 0x1 ADD PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1959 DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH2 0x1A1C JUMPI JUMPDEST POP PUSH2 0x1995 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x14C2 JUMPI PUSH2 0x1796 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x19B8 PUSH2 0x19C6 SWAP5 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP2 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x19DC DUP2 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x2 SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A27 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP4 PUSH2 0x198C JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x1CE6 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x189 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x1A9E PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1669 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x163A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1C1D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x1280 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x125C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B9F JUMPI PUSH2 0x11DA DUP4 PUSH2 0x11CE DUP2 DUP6 SUB DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2AE08A8E29253F69AC5D979A101956AB8F8D9D7DED63FA7A83B16FC47648EAB0 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1C03 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x11CE PUSH2 0x11BE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1BEB JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C5A JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x189 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x189 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x14C2 JUMPI JUMP JUMPDEST PUSH2 0x1CEE PUSH2 0x2273 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x1D00 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D17 DUP8 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1D56 JUMPI JUMPDEST POP PUSH2 0x1D4E SWAP1 PUSH1 0x1 SWAP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP4 ADD SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x1D83 JUMPI JUMPDEST DUP2 PUSH2 0x1D6F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D80 JUMPI POP MLOAD PUSH1 0x1 PUSH2 0x1D41 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D62 JUMP JUMPDEST ISZERO PUSH2 0x1D92 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726174656779206E6F7420666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x14C2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1DEA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420737472617465677900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x189 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x189 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x14C2 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1E6A JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14C2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x189 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x189 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1EB6 PUSH2 0x6C6 DUP3 PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH2 0x1EC1 DUP2 CALLER PUSH2 0x251D JUMP JUMPDEST PUSH2 0x1EC9 PUSH2 0x2273 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x1F75 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x1F23 JUMPI POP DUP2 PUSH1 0x0 DUP2 ISZERO PUSH2 0x1F1A JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x404 JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH2 0x1F5A JUMPI POP JUMP JUMPDEST PUSH2 0x1F72 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F7F SWAP1 DUP4 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x20C1 JUMPI JUMPDEST ISZERO PUSH2 0x209D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FA5 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2067 JUMPI JUMPDEST POP SWAP2 PUSH2 0x1FE6 PUSH2 0x6C6 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x1E4D JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x2060 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x202D JUMPI JUMPDEST POP PUSH2 0x8CB SWAP1 PUSH2 0x2027 SWAP3 PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2058 JUMPI JUMPDEST DUP2 PUSH2 0x2046 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D80 JUMPI POP MLOAD PUSH2 0x2027 PUSH2 0x2019 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2039 JUMP JUMPDEST POP DUP4 PUSH2 0x1FEE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2095 JUMPI JUMPDEST DUP2 PUSH2 0x2081 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D80 JUMPI POP MLOAD DUP5 SWAP1 PUSH2 0x1FE6 PUSH2 0x1FD3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2074 JUMP JUMPDEST POP SWAP3 POP POP PUSH2 0x20A9 PUSH2 0x2273 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x20BA JUMPI POP JUMPDEST CODESIZE DUP1 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP PUSH2 0x20B3 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x1F8F JUMP JUMPDEST ISZERO PUSH2 0x20D1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x211D PUSH2 0x2273 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x226E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x213C DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x2710 PUSH2 0x2160 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP7 PUSH2 0x1E4D JUMP JUMPDEST DIV DUP1 ISZERO PUSH2 0x2264 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP4 EQ PUSH2 0x2202 JUMPI POP DUP2 DUP1 DUP1 SWAP3 DUP7 DUP3 CALL ISZERO PUSH2 0x404 JUMPI JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0xD0E30DB000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x21F1 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FC SWAP2 PUSH2 0x1C9C JUMP JUMPDEST CODESIZE PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH2 0x2246 JUMPI JUMPDEST POP PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x225D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST POP CODESIZE PUSH2 0x2240 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x21EB JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x229F JUMPI POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x22E8 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x230F JUMPI JUMPDEST DUP2 PUSH2 0x2303 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x189 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x234A JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x238E JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x239F DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x23BE JUMPI PUSH1 0x1 ADD PUSH2 0x237F JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x24EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x24BF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x24A5 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2603 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SUB PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x262D JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x24BF JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x26B8 PUSH1 0x0 SWAP5 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x1CD9 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE DUP5 DUP5 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xC7 JUMP TSTORE 0xCB MLOAD 0x27 PUSH7 0xA3AD378E04365E DUP7 SWAP3 0xBB 0xD4 DUP9 DUP15 0x2E BASEFEE 0xDE MOD 0xB1 0xE6 PUSH1 0x2B PUSH5 0x4F964736F PUSH13 0x634300081C0033000000000000 ",
              "sourceMap": "723:10315:14:-:0;;;;;;;1857:1:12;2061:21;1857:1;723:10315:14;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 7302,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_16669": {
                  "entryPoint": 7280,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 7726,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 7823,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_contract_IAccount_enum_ApprovalFlag": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 7207,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 7385,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 7776,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 7757,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 7638,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 7324,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": null,
                  "id": 703,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 9501,
                  "id": 1012,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 8983,
                  "id": 190,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_earn": {
                  "entryPoint": 8469,
                  "id": 2511,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getAvailable": {
                  "entryPoint": 8819,
                  "id": 3367,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getBalance": {
                  "entryPoint": 7398,
                  "id": 3334,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_hasStrategy": {
                  "entryPoint": 9080,
                  "id": 3168,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 9815,
                  "id": 979,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 9756,
                  "id": 1661,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 9158,
                  "id": 854,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_withdraw": {
                  "entryPoint": 7847,
                  "id": 2661,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 7808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_contract_IStrategy_uint256_of_contract_IStrategy": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_bbe8": {
                  "entryPoint": 7563,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e36c": {
                  "entryPoint": 7651,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fac3": {
                  "entryPoint": 8394,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_contract_IStrategy_dyn": {
                  "entryPoint": 7358,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_contract_IStrategy_to_contract_IStrategy": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806306fdde0314611b2b578063095ea7b314611a855780630e02292314611a4857806312065fe014611a2d578063175188e8146118d857806318160ddd1461189b578063223e5479146116ce57806323b872dd146115335780632e1a7d4d14611515578063313ce567146114f95780634051ddac146114845780635c222bad1461145d5780636f7267b71461143957806370a08231146113e2578063715018a61461133c578063853828b6146112e45780638da5cb5b1461129e57806395d89b4114611159578063a29b3c90146110b2578063a49b5cb414610e17578063a9059cbb14610de6578063b49a60bb14610d1a578063b6b55f2514610c1c578063b76e07cc14610a19578063c07e866e1461059b578063d389800f14610582578063dd62ed3e14610505578063ee6ce9251461027b578063f2fde38b1461018e5763f9cc06051461016657600080fd5b34610189576000366003190112610189576020610181612273565b604051908152f35b600080fd5b34610189576020366003190112610189576001600160a01b036101af611c70565b6101b7612317565b16801561024c576001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300548273ffffffffffffffffffffffffffffffffffffffff198216177f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346101895760203660031901126101895760043567ffffffffffffffff811161018957366023820112156101895780600401359067ffffffffffffffff82116104ef578160051b604051926102d36020830185611c9c565b8352602460208401918301019136831161018957602401905b8282106104df57836102fc612317565b60025481510361049b5760005b60025481101561037f576001600160a01b0361032482611cbe565b90549060031b1c169061033e61033983612378565b611d8b565b82518110156103695760019160208260051b8501015190600052600360205260406000205501610309565b634e487b7160e01b600052603260045260246000fd5b6000806002545b80831061045e57612710821161041a5760005b600254811015610410576001600160a01b036103b482611cbe565b90549060031b1c1690813b156101895760008092600460405180958193630f8d564160e31b83525af1918215610404576001926103f3575b5001610399565b60006103fe91611c9c565b826103ec565b6040513d6000823e3d90fd5b610418612115565b005b606460405162461bcd60e51b815260206004820152601660248201527f416c6c6f636174696f6e2065786365656473206d6178000000000000000000006044820152fd5b906104926001916001600160a01b0361047686611cbe565b90549060031b1c16600052600360205260406000205490611cd9565b92019190610386565b606460405162461bcd60e51b815260206004820152601860248201527f4d69736d617463686564206172726179206c656e6774687300000000000000006044820152fd5b81358152602091820191016102ec565b634e487b7160e01b600052604160045260246000fd5b346101895760403660031901126101895761051e611c70565b6001600160a01b0361056a610531611c86565b926001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b91166000526020526020604060002054604051908152f35b3461018957600036600319011261018957610418612115565b34610189576020366003190112610189576105b4611c70565b6105bc612317565b6001600160a01b03811690604051631127a41d60e31b8152602081600481865afa8015610404576001600160a01b03916000916109fa575b50166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205460009161062e612317565b6001600160a01b036004541690813b156109025760405162f887cf60e81b81526001600160a01b03919091166004820152600260248201528381604481855afa801561090e5784906109ea575b505060405190630b37927d60e21b82526004820152602081602481875afa90811561080b57906106b29184916109cb575b506120ca565b6106ee6106c6826106c1611ce6565b611e4d565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490611e60565b90604051631127a41d60e31b8152602081600481885afa90811561090e5761071f918391869161099c575b5061251d565b610727612273565b828110610816575b5050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146107955750828092819282821561078c575bf11561077f5760209150604051908152f35b50604051903d90823e3d90fd5b506108fc61076d565b60405163a9059cbb60e01b81526001600160a01b0392909216600483015260248201929092529160209183916044918391905af1801561080b57602093506107de575b50610181565b6107fd90833d8511610804575b6107f58183611c9c565b810190611e8f565b50826107d8565b503d6107eb565b6040513d85823e3d90fd5b610824908395949295611dd6565b9281935b600254851080610993575b1561096a576001600160a01b0361084986611cbe565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa90811561095f5785929189918491610920575b506106c66020939261088b92611e4d565b848111610919575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561090e5784916108d7575b506108cb906108d192611dd6565b94611e80565b93610828565b90506020813d8211610906575b816108f160209383611c9c565b8101031261090257516108d16108bd565b8380fd5b3d91506108e4565b6040513d86823e3d90fd5b5083610893565b92935050506020813d8211610957575b8161093d60209383611c9c565b81010312610953575184919088906106c661087a565b8480fd5b3d9150610930565b6040513d87823e3d90fd5b50925092508290610979612273565b8181111561098c57505b9091928461072f565b9050610983565b50801515610833565b6109be915060203d6020116109c4575b6109b68183611c9c565b810190611e2e565b87610719565b503d6109ac565b6109e4915060203d602011610804576107f58183611c9c565b856106ac565b6109f391611c9c565b848361067b565b610a13915060203d6020116109c4576109b68183611c9c565b846105f4565b3461018957604036600319011261018957610a32611c86565b610a3a612317565b610a4261261c565b6000906001600160a01b0360045416803b15610be9576001600160a01b036040519262f887cf60e81b8452169182600482015260016024820152838082604481865afa801561077f57610c0c575b505060405190630b37927d60e21b82526004820152602081602481855afa801561080b57610ac4918491610bed57506120ca565b610acc611ce6565b813b15610be9576040517fce8c42e80000000000000000000000000000000000000000000000000000000081526004356004820152838160248183875af1801561090e579060049460209392610bd9575b5050610b27612115565b610b3881610b33611ce6565b611dd6565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610bc1575050915b60405193848092631127a41d60e31b82525afa80156104045781610b9791602094600091610ba4575b50612657565b6001600055604051908152f35b610bbb9150853d87116109c4576109b68183611c9c565b85610b91565b610bce90610bd393611e4d565b611e60565b91610b68565b610be291611c9c565b8480610b1d565b8280fd5b610c06915060203d602011610804576107f58183611c9c565b846106ac565b610c1591611c9c565b8383610a90565b3461018957602036600319011261018957610c3561261c565b6000610c3f611ce6565b8160206001600160a01b03600154166064604051809481937f23b872dd00000000000000000000000000000000000000000000000000000000835233600484015230602484015260043560448401525af1801561080b5760209350610cff575b50610ca8612115565b610cb481610b33611ce6565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610ced5750505b610b978133612657565b610bce90610cfa93611e4d565b610ce3565b610d1590833d8511610804576107f58183611c9c565b610c9f565b34610189576000366003190112610189576040518060206002549283815201809260026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9060005b818110610dc75750505081610d7b910382611c9c565b6040519182916020830190602084525180915260408301919060005b818110610da5575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610d97565b82546001600160a01b0316845260209093019260019283019201610d65565b3461018957604036600319011261018957610e0c610e02611c70565b60243590336123c6565b602060405160018152f35b3461018957604036600319011261018957600435610e33611c86565b90600090610e3f612317565b6001600160a01b036004541692833b15610be95760405162f887cf60e81b81526001600160a01b0382166004820152600260248201528381604481885afa801561090e5790846001600160a01b0393926110a2575b5050169260405190630b37927d60e21b82526004820152602081602481875afa90811561080b5790610ecc9184916109cb57506120ca565b610edb6106c6826106c1611ce6565b90604051631127a41d60e31b8152602081600481885afa90811561090e57610f0b918391869161099c575061251d565b610f13612273565b828110610f69575050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146107955750828092819282821561078c57f11561077f5760209150604051908152f35b610f77908395949295611dd6565b9281935b600254851080611099575b1561096a576001600160a01b03610f9c86611cbe565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa90811561095f578592918991849161105e575b506106c660209392610fde92611e4d565b848111611057575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561090e578491611024575b506108cb9061101e92611dd6565b93610f7b565b90506020813d821161104f575b8161103e60209383611c9c565b81010312610902575161101e611010565b3d9150611031565b5083610fe6565b92935050506020813d8211611091575b8161107b60209383611c9c565b81010312610953575184919088906106c6610fcd565b3d915061106e565b50801515610f86565b6110ab91611c9c565b8584610e94565b3461018957602036600319011261018957600460206001600160a01b036110d98335611cbe565b90549060031b1c16604051928380927faffd80b00000000000000000000000000000000000000000000000000000000082525afa801561040457600090611126575b602090604051908152f35b506020813d602011611151575b8161114060209383611c9c565b81010312610189576020905161111b565b3d9150611133565b346101895760003660031901126101895760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04548060011c90600181168015611294575b6020831081146112805782855290811561125c57506001146111de575b6111da836111ce81850382611c9c565b60405191829182611c27565b0390f35b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0460009081527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa939250905b808210611242575090915081016020016111ce6111be565b91926001816020925483858801015201910190929161122a565b60ff191660208086019190915291151560051b840190910191506111ce90506111be565b602484634e487b7160e01b81526022600452fd5b91607f16916111a1565b346101895760003660031901126101895760206001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b34610189576000366003190112610189576020610181611337336001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b611ea7565b3461018957600036600319011261018957611355612317565b60006001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1981167f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610189576020366003190112610189576020610181611400611c70565b6001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b346101895760203660031901126101895760206101816106c66004356106c1611ce6565b346101895760003660031901126101895760206001600160a01b0360015416604051908152f35b34610189576000366003190112610189576000806002545b8082106114d8578280612710039061271082116114c25760409182519182526020820152f35b634e487b7160e01b600052601160045260246000fd5b90916114f16001916001600160a01b0361047686611cbe565b92019061149c565b3461018957600036600319011261018957602060405160128152f35b34610189576020366003190112610189576020610181600435611ea7565b346101895760603660031901126101895761154c611c70565b611554611c86565b60443590611594836001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b0333166000526020526040600020549260001984106115bf575b610e0c93506123c6565b828410611698576001600160a01b0381161561166957331561163a57610e0c9361161b826001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b033316600052602052836040600020910390556115b5565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b82847ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b34610189576020366003190112610189576004356001600160a01b038116808203610189576116fb612317565b611706811515611de3565b61170f82612378565b611857576040517f8d928af8000000000000000000000000000000000000000000000000000000008152602081600481855afa8015610404576001600160a01b0391600091611838575b5016301490816117b5575b5061176e90611de3565b60025490680100000000000000008210156104ef576117968260016104189401600255611cbe565b9091906001600160a01b038084549260031b9316831b921b1916179055565b6004915060206001600160a01b036001541691604051938480927f5c222bad0000000000000000000000000000000000000000000000000000000082525afa9182156104045761176e926001600160a01b0391600091611819575b50161490611764565b611832915060203d6020116109c4576109b68183611c9c565b85611810565b611851915060203d6020116109c4576109b68183611c9c565b84611759565b606460405162461bcd60e51b815260206004820152601760248201527f537472617465677920616c7265616479206578697374730000000000000000006044820152fd5b346101895760003660031901126101895760207f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254604051908152f35b34610189576020366003190112610189576004356001600160a01b03811690818103610189576103396119129161190d612317565b612378565b60025460005b81811061192157005b826001600160a01b0361193383611cbe565b90549060031b1c161461194857600101611918565b6001600160a01b0361195982611cbe565b90549060031b1c16803b156101895760008091600460405180948193630f8d564160e31b83525af1801561040457611a1c575b50611995612115565b60001982019182116114c2576117966001600160a01b036119b86119c694611cbe565b90549060031b1c1691611cbe565b6002548015611a0657600019016119dc81611cbe565b6001600160a01b0382549160031b1b19169055600255600052600360205260006040812055600080f35b634e487b7160e01b600052603160045260246000fd5b6000611a2791611c9c565b8361198c565b34610189576000366003190112610189576020610181611ce6565b34610189576020366003190112610189576004356001600160a01b0381168091036101895760005260036020526020604060002054604051908152f35b3461018957604036600319011261018957611a9e611c70565b602435903315611669576001600160a01b031690811561163a573360009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101895760003660031901126101895760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03548060011c90600181168015611c1d575b6020831081146112805782855290811561125c5750600114611b9f576111da836111ce81850382611c9c565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0360009081527f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0939250905b808210611c03575090915081016020016111ce6111be565b919260018160209254838588010152019101909291611beb565b91607f1691611b73565b91909160208152825180602083015260005b818110611c5a575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201611c39565b600435906001600160a01b038216820361018957565b602435906001600160a01b038216820361018957565b90601f8019910116810190811067ffffffffffffffff8211176104ef57604052565b60025481101561036957600260005260206000200190600090565b919082018092116114c257565b611cee612273565b9060006002545b808210611d00575050565b9092600460206001600160a01b03611d1787611cbe565b90549060031b1c166040519283809263765ef2f360e11b82525afa90811561040457600091611d56575b50611d4e90600192611cd9565b930190611cf5565b906020823d8211611d83575b81611d6f60209383611c9c565b81010312611d805750516001611d41565b80fd5b3d9150611d62565b15611d9257565b606460405162461bcd60e51b815260206004820152601260248201527f5374726174656779206e6f7420666f756e6400000000000000000000000000006044820152fd5b919082039182116114c257565b15611dea57565b606460405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207374726174656779000000000000000000000000000000006044820152fd5b9081602091031261018957516001600160a01b03811681036101895790565b818102929181159184041417156114c257565b8115611e6a570490565b634e487b7160e01b600052601260045260246000fd5b60001981146114c25760010190565b90816020910312610189575180151581036101895790565b611eb66106c6826106c1611ce6565b90611ec1813361251d565b611ec9612273565b828110611f75575b5050906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114600014611f2357508160008115611f1a575b600080809381933390f11561040457565b506108fc611f09565b60405163a9059cbb60e01b81523360048201526024810184905290602090829060449082906000905af1801561040457611f5a5750565b611f729060203d602011610804576107f58183611c9c565b50565b611f7f9083611dd6565b926000935b6002548510806120c1575b1561209d576001600160a01b03611fa586611cbe565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa8015610404578591600091612067575b5091611fe66106c6602093600095611e4d565b848111612060575b6024906040519485938492632e1a7d4d60e01b845260048401525af19081156104045760009161202d575b506108cb9061202792611dd6565b93611f84565b906020823d8211612058575b8161204660209383611c9c565b81010312611d80575051612027612019565b3d9150612039565b5083611fee565b91506020823d8211612095575b8161208160209383611c9c565b81010312611d805750518490611fe6611fd3565b3d9150612074565b509250506120a9612273565b818111156120ba57505b3880611ed1565b90506120b3565b50801515611f8f565b156120d157565b606460405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152fd5b61211d612273565b9060005b60025481101561226e576001600160a01b0361213c82611cbe565b90549060031b1c169081600052600360205261271061216060406000205486611e4d565b048015612264576000906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee811483146122025750818080928682f115610404575b813b1561018957600080926004604051809581937fd0e30db00000000000000000000000000000000000000000000000000000000083525af1918215610404576001926121f1575b505b01612121565b60006121fc91611c9c565b386121e9565b60405163a9059cbb60e01b81526001600160a01b03861660048201526024810192909252909160209183916044918391905af1801561040457612246575b506121a1565b61225d9060203d8111610804576107f58183611c9c565b5038612240565b50600191506121eb565b509050565b6001546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361229f57504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa908115610404576000916122e8575090565b90506020813d60201161230f575b8161230360209383611c9c565b81010312610189575190565b3d91506122f6565b6001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416330361234a57565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6002549060005b82811061238e57505050600090565b6001600160a01b0361239f82611cbe565b90549060031b1c166001600160a01b038316146123be5760010161237f565b505050600190565b6001600160a01b03169081156124ee576001600160a01b03169182156124bf5760008281527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260408120548281106124a55791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9587602096527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00865203828220558681527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b031680156124ee576000918183527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604083205481811061260357817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace008452036040862055807f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254037f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b60026000541461262d576002600055565b7f3ee5aeb50000000000000000000000000000000000000000000000000000000060005260046000fd5b6001600160a01b03169081156124bf577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826126b86000947f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254611cd9565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02558484527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00825260408420818154019055604051908152a356fea26469706673582212204ec7565dcb512766a3ad378e04365e8692bbd4888e2e48de06b1e6602b6404f964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B2B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A85 JUMPI DUP1 PUSH4 0xE022923 EQ PUSH2 0x1A48 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1A2D JUMPI DUP1 PUSH4 0x175188E8 EQ PUSH2 0x18D8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189B JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x16CE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1533 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1515 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14F9 JUMPI DUP1 PUSH4 0x4051DDAC EQ PUSH2 0x1484 JUMPI DUP1 PUSH4 0x5C222BAD EQ PUSH2 0x145D JUMPI DUP1 PUSH4 0x6F7267B7 EQ PUSH2 0x1439 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x133C JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x12E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1159 JUMPI DUP1 PUSH4 0xA29B3C90 EQ PUSH2 0x10B2 JUMPI DUP1 PUSH4 0xA49B5CB4 EQ PUSH2 0xE17 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xDE6 JUMPI DUP1 PUSH4 0xB49A60BB EQ PUSH2 0xD1A JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xC1C JUMPI DUP1 PUSH4 0xB76E07CC EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xC07E866E EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xEE6CE925 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18E JUMPI PUSH4 0xF9CC0605 EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1AF PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2317 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x189 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x189 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4EF JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C9C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x189 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4DF JUMPI DUP4 PUSH2 0x2FC PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 MLOAD SUB PUSH2 0x49B JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x324 DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x33E PUSH2 0x339 DUP4 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x1D8B JUMP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD MLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE ADD PUSH2 0x309 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP4 LT PUSH2 0x45E JUMPI PUSH2 0x2710 DUP3 GT PUSH2 0x41A JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x410 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3B4 DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3F3 JUMPI JUMPDEST POP ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP3 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x418 PUSH2 0x2115 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2065786365656473206D617800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x492 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x476 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST SWAP3 ADD SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x51E PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x56A PUSH2 0x531 PUSH2 0x1C86 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x418 PUSH2 0x2115 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x5B4 PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x9FA JUMPI JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x62E PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x90E JUMPI DUP5 SWAP1 PUSH2 0x9EA JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x80B JUMPI SWAP1 PUSH2 0x6B2 SWAP2 DUP5 SWAP2 PUSH2 0x9CB JUMPI JUMPDEST POP PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x6C6 DUP3 PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x1E4D JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 PUSH2 0x1E60 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI PUSH2 0x71F SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x99C JUMPI JUMPDEST POP PUSH2 0x251D JUMP JUMPDEST PUSH2 0x727 PUSH2 0x2273 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x816 JUMPI JUMPDEST POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x795 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x78C JUMPI JUMPDEST CALL ISZERO PUSH2 0x77F JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x80B JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0x7DE JUMPI JUMPDEST POP PUSH2 0x181 JUMP JUMPDEST PUSH2 0x7FD SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x804 JUMPI JUMPDEST PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E8F JUMP JUMPDEST POP DUP3 PUSH2 0x7D8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x824 SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x993 JUMPI JUMPDEST ISZERO PUSH2 0x96A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x849 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x95F JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0x920 JUMPI JUMPDEST POP PUSH2 0x6C6 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x88B SWAP3 PUSH2 0x1E4D JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x919 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI DUP5 SWAP2 PUSH2 0x8D7 JUMPI JUMPDEST POP PUSH2 0x8CB SWAP1 PUSH2 0x8D1 SWAP3 PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP4 PUSH2 0x828 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x906 JUMPI JUMPDEST DUP2 PUSH2 0x8F1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x902 JUMPI MLOAD PUSH2 0x8D1 PUSH2 0x8BD JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x893 JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x957 JUMPI JUMPDEST DUP2 PUSH2 0x93D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x953 JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x6C6 PUSH2 0x87A JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 POP DUP3 SWAP1 PUSH2 0x979 PUSH2 0x2273 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x98C JUMPI POP JUMPDEST SWAP1 SWAP2 SWAP3 DUP5 PUSH2 0x72F JUMP JUMPDEST SWAP1 POP PUSH2 0x983 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x833 JUMP JUMPDEST PUSH2 0x9BE SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI JUMPDEST PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E2E JUMP JUMPDEST DUP8 PUSH2 0x719 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x9E4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP6 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x9F3 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP5 DUP4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0xA13 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP5 PUSH2 0x5F4 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xA32 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0xA3A PUSH2 0x2317 JUMP JUMPDEST PUSH2 0xA42 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH3 0xF887CF PUSH1 0xE8 SHL DUP5 MSTORE AND SWAP2 DUP3 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP1 DUP3 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x77F JUMPI PUSH2 0xC0C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x80B JUMPI PUSH2 0xAC4 SWAP2 DUP5 SWAP2 PUSH2 0xBED JUMPI POP PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xACC PUSH2 0x1CE6 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCE8C42E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x90E JUMPI SWAP1 PUSH1 0x4 SWAP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xBD9 JUMPI JUMPDEST POP POP PUSH2 0xB27 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xB38 DUP2 PUSH2 0xB33 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x1DD6 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xBC1 JUMPI POP POP SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI DUP2 PUSH2 0xB97 SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xBA4 JUMPI JUMPDEST POP PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xBBB SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP6 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xBCE SWAP1 PUSH2 0xBD3 SWAP4 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP2 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0xBE2 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP5 DUP1 PUSH2 0xB1D JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH2 0xC06 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP5 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0xC15 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA90 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xC35 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3F PUSH2 0x1CE6 JUMP JUMPDEST DUP2 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x80B JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0xCFF JUMPI JUMPDEST POP PUSH2 0xCA8 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xCB4 DUP2 PUSH2 0xB33 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xCED JUMPI POP POP JUMPDEST PUSH2 0xB97 DUP2 CALLER PUSH2 0x2657 JUMP JUMPDEST PUSH2 0xBCE SWAP1 PUSH2 0xCFA SWAP4 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0xD15 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x2 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xDC7 JUMPI POP POP POP DUP2 PUSH2 0xD7B SWAP2 SUB DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xDA5 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD97 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xD65 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xE0C PUSH2 0xE02 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE33 PUSH2 0x1C86 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE3F PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x90E JUMPI SWAP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP3 PUSH2 0x10A2 JUMPI JUMPDEST POP POP AND SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x80B JUMPI SWAP1 PUSH2 0xECC SWAP2 DUP5 SWAP2 PUSH2 0x9CB JUMPI POP PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xEDB PUSH2 0x6C6 DUP3 PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI PUSH2 0xF0B SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x99C JUMPI POP PUSH2 0x251D JUMP JUMPDEST PUSH2 0xF13 PUSH2 0x2273 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0xF69 JUMPI POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x795 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x78C JUMPI CALL ISZERO PUSH2 0x77F JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xF77 SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x1099 JUMPI JUMPDEST ISZERO PUSH2 0x96A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF9C DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x95F JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0x105E JUMPI JUMPDEST POP PUSH2 0x6C6 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xFDE SWAP3 PUSH2 0x1E4D JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x1057 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x90E JUMPI DUP5 SWAP2 PUSH2 0x1024 JUMPI JUMPDEST POP PUSH2 0x8CB SWAP1 PUSH2 0x101E SWAP3 PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x104F JUMPI JUMPDEST DUP2 PUSH2 0x103E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x902 JUMPI MLOAD PUSH2 0x101E PUSH2 0x1010 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1031 JUMP JUMPDEST POP DUP4 PUSH2 0xFE6 JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1091 JUMPI JUMPDEST DUP2 PUSH2 0x107B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x953 JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x6C6 PUSH2 0xFCD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x106E JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x10AB SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP6 DUP5 PUSH2 0xE94 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10D9 DUP4 CALLDATALOAD PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xAFFD80B000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x1126 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1151 JUMPI JUMPDEST DUP2 PUSH2 0x1140 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x189 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x111B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1133 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1294 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x1280 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x125C JUMPI POP PUSH1 0x1 EQ PUSH2 0x11DE JUMPI JUMPDEST PUSH2 0x11DA DUP4 PUSH2 0x11CE DUP2 DUP6 SUB DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C27 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1242 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x11CE PUSH2 0x11BE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x122A JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x11CE SWAP1 POP PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11A1 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x1337 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA7 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x1355 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x1400 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x6C6 PUSH1 0x4 CALLDATALOAD PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x14D8 JUMPI DUP3 DUP1 PUSH2 0x2710 SUB SWAP1 PUSH2 0x2710 DUP3 GT PUSH2 0x14C2 JUMPI PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x14F1 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x476 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x149C JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH1 0x4 CALLDATALOAD PUSH2 0x1EA7 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x154C PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x1554 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1594 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x15BF JUMPI JUMPDEST PUSH2 0xE0C SWAP4 POP PUSH2 0x23C6 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1698 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1669 JUMPI CALLER ISZERO PUSH2 0x163A JUMPI PUSH2 0xE0C SWAP4 PUSH2 0x161B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x15B5 JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x189 JUMPI PUSH2 0x16FB PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x1706 DUP2 ISZERO ISZERO PUSH2 0x1DE3 JUMP JUMPDEST PUSH2 0x170F DUP3 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1838 JUMPI JUMPDEST POP AND ADDRESS EQ SWAP1 DUP2 PUSH2 0x17B5 JUMPI JUMPDEST POP PUSH2 0x176E SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x1796 DUP3 PUSH1 0x1 PUSH2 0x418 SWAP5 ADD PUSH1 0x2 SSTORE PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SWAP2 POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C222BAD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x404 JUMPI PUSH2 0x176E SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1819 JUMPI JUMPDEST POP AND EQ SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1832 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP6 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x1851 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9C4 JUMPI PUSH2 0x9B6 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP5 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472617465677920616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x189 JUMPI PUSH2 0x339 PUSH2 0x1912 SWAP2 PUSH2 0x190D PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x2378 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1921 JUMPI STOP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1933 DUP4 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1948 JUMPI PUSH1 0x1 ADD PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1959 DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH2 0x1A1C JUMPI JUMPDEST POP PUSH2 0x1995 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x14C2 JUMPI PUSH2 0x1796 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x19B8 PUSH2 0x19C6 SWAP5 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP2 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x19DC DUP2 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x2 SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A27 SWAP2 PUSH2 0x1C9C JUMP JUMPDEST DUP4 PUSH2 0x198C JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 PUSH2 0x181 PUSH2 0x1CE6 JUMP JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x189 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x1A9E PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1669 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x163A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1C1D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x1280 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x125C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B9F JUMPI PUSH2 0x11DA DUP4 PUSH2 0x11CE DUP2 DUP6 SUB DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2AE08A8E29253F69AC5D979A101956AB8F8D9D7DED63FA7A83B16FC47648EAB0 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1C03 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x11CE PUSH2 0x11BE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1BEB JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C5A JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x189 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x189 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x14C2 JUMPI JUMP JUMPDEST PUSH2 0x1CEE PUSH2 0x2273 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x1D00 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D17 DUP8 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1D56 JUMPI JUMPDEST POP PUSH2 0x1D4E SWAP1 PUSH1 0x1 SWAP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP4 ADD SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x1D83 JUMPI JUMPDEST DUP2 PUSH2 0x1D6F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D80 JUMPI POP MLOAD PUSH1 0x1 PUSH2 0x1D41 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D62 JUMP JUMPDEST ISZERO PUSH2 0x1D92 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726174656779206E6F7420666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x14C2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1DEA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420737472617465677900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x189 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x189 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x14C2 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1E6A JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14C2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x189 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x189 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1EB6 PUSH2 0x6C6 DUP3 PUSH2 0x6C1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH2 0x1EC1 DUP2 CALLER PUSH2 0x251D JUMP JUMPDEST PUSH2 0x1EC9 PUSH2 0x2273 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x1F75 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x1F23 JUMPI POP DUP2 PUSH1 0x0 DUP2 ISZERO PUSH2 0x1F1A JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x404 JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH2 0x1F5A JUMPI POP JUMP JUMPDEST PUSH2 0x1F72 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F7F SWAP1 DUP4 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x20C1 JUMPI JUMPDEST ISZERO PUSH2 0x209D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FA5 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x404 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2067 JUMPI JUMPDEST POP SWAP2 PUSH2 0x1FE6 PUSH2 0x6C6 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x1E4D JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x2060 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x202D JUMPI JUMPDEST POP PUSH2 0x8CB SWAP1 PUSH2 0x2027 SWAP3 PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2058 JUMPI JUMPDEST DUP2 PUSH2 0x2046 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D80 JUMPI POP MLOAD PUSH2 0x2027 PUSH2 0x2019 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2039 JUMP JUMPDEST POP DUP4 PUSH2 0x1FEE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2095 JUMPI JUMPDEST DUP2 PUSH2 0x2081 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D80 JUMPI POP MLOAD DUP5 SWAP1 PUSH2 0x1FE6 PUSH2 0x1FD3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2074 JUMP JUMPDEST POP SWAP3 POP POP PUSH2 0x20A9 PUSH2 0x2273 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x20BA JUMPI POP JUMPDEST CODESIZE DUP1 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP PUSH2 0x20B3 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x1F8F JUMP JUMPDEST ISZERO PUSH2 0x20D1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x211D PUSH2 0x2273 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x226E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x213C DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x2710 PUSH2 0x2160 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP7 PUSH2 0x1E4D JUMP JUMPDEST DIV DUP1 ISZERO PUSH2 0x2264 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP4 EQ PUSH2 0x2202 JUMPI POP DUP2 DUP1 DUP1 SWAP3 DUP7 DUP3 CALL ISZERO PUSH2 0x404 JUMPI JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0xD0E30DB000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x404 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x21F1 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FC SWAP2 PUSH2 0x1C9C JUMP JUMPDEST CODESIZE PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x404 JUMPI PUSH2 0x2246 JUMPI JUMPDEST POP PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x225D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x804 JUMPI PUSH2 0x7F5 DUP2 DUP4 PUSH2 0x1C9C JUMP JUMPDEST POP CODESIZE PUSH2 0x2240 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x21EB JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x229F JUMPI POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x22E8 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x230F JUMPI JUMPDEST DUP2 PUSH2 0x2303 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x189 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x234A JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x238E JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x239F DUP3 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x23BE JUMPI PUSH1 0x1 ADD PUSH2 0x237F JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x24EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x24BF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x24A5 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2603 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SUB PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x262D JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x24BF JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x26B8 PUSH1 0x0 SWAP5 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x1CD9 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE DUP5 DUP5 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xC7 JUMP TSTORE 0xCB MLOAD 0x27 PUSH7 0xA3AD378E04365E DUP7 SWAP3 0xBB 0xD4 DUP9 DUP15 0x2E BASEFEE 0xDE MOD 0xB1 0xE6 PUSH1 0x2B PUSH5 0x4F964736F PUSH13 0x634300081C0033000000000000 ",
              "sourceMap": "723:10315:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;-1:-1:-1;;;;;723:10315:14;;:::i;:::-;2303:62:3;;:::i;:::-;723:10315:14;3489:22:3;;3485:91;;-1:-1:-1;;;;;1280:65:3;723:10315:14;;-1:-1:-1;;723:10315:14;;;1280:65:3;723:10315:14;;3975:40:3;723:10315:14;3975:40:3;;723:10315:14;3485:91:3;3534:31;723:10315:14;3534:31:3;723:10315:14;;;;;3534:31:3;723:10315:14;;;;;;-1:-1:-1;;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:3;;;:::i;:::-;7965:11:14;723:10315;;;7965:40;723:10315;;;8114:3;7965:11;723:10315;8090:22;;;;;-1:-1:-1;;;;;8155:14:14;;;:::i;:::-;723:10315;;;;;;;8192:22;8184:53;8192:22;;;:::i;:::-;8184:53;:::i;:::-;723:10315;;;;;;;;;;;;;;;;;;;;;;;;;;;;8075:13;;723:10315;-1:-1:-1;;;723:10315:14;;;;;;;;8090:22;723:10315;;7965:11;723:10315;8724:22;;;;;;396:6:24;8851:39:14;;723:10315;;;9084:3;7965:11;723:10315;9060:22;;;;;-1:-1:-1;;;;;9125:14:14;;;:::i;:::-;723:10315;;;;;;;9154:23;;;;;;723:10315;;;;;;9154:23;;;;-1:-1:-1;;;9154:23:14;;;;;;;;;723:10315;9154:23;;;9084:3;;723:10315;9045:13;;9154:23;723:10315;9154:23;;;:::i;:::-;;;;;723:10315;;;;;;;;;9060:22;9154:23;;:::i;:::-;723:10315;;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;8748:3;8790:14;8768:37;723:10315;8790:14;-1:-1:-1;;;;;8790:14:14;;;:::i;:::-;723:10315;;;;;;;;;;;;;;;;8768:37;;:::i;:::-;8748:3;723:10315;8709:13;;;;723:10315;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;:::i;:::-;-1:-1:-1;;;;;4848:20:5;723:10315:14;;:::i;:::-;4848:20:5;-1:-1:-1;;;;;723:10315:14;;;4848:13:5;723:10315:14;;;;;;;4848:20:5;:29;723:10315:14;-1:-1:-1;723:10315:14;;;;;-1:-1:-1;723:10315:14;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;:::i;:::-;;;;;;-1:-1:-1;;723:10315:14;;;;;;:::i;:::-;2303:62:3;;:::i;:::-;-1:-1:-1;;;;;723:10315:14;;;;;-1:-1:-1;;;6818:18:14;;723:10315;6818:18;723:10315;6818:18;;;;;;;;-1:-1:-1;;;;;6818:18:14;723:10315;6818:18;;;723:10315;;;;;2031:63:5;723:10315:14;;;;;;;2303:62:3;;;:::i;:::-;-1:-1:-1;;;;;723:10315:14;;;5174:58;;;;;;723:10315;;-1:-1:-1;;;5174:58:14;;-1:-1:-1;;;;;723:10315:14;;;;;5174:58;;723:10315;5204:27;723:10315;;;;;;;;5174:58;;;;;;;;;;;723:10315;;;;;5253:28;-1:-1:-1;;;5253:28:14;;723:10315;5253:28;;723:10315;;5253:28;;;;;;;;;;;;5245:55;5253:28;;;;;723:10315;5245:55;;:::i;:::-;5369:36;5370:18;5331:12;;;:::i;:::-;5370:18;:::i;:::-;4008:14:5;723:10315:14;5369:36;;:::i;:::-;723:10315;;;-1:-1:-1;;;5422:18:14;;723:10315;5422:18;723:10315;5422:18;;;;;;;;;5442:8;5422:18;;;;;;;723:10315;5442:8;;:::i;:::-;5490:14;;:::i;:::-;5521:30;;;5517:911;;723:10315;;;;;;;-1:-1:-1;;;;;6444:13:14;723:10315;;137:42:24;6444:27:14;;6440:203;137:42:24;;;6488:48:14;;;;;;;;;;;6440:203;6488:48;;;;723:10315;6440:203;;723:10315;;;;;;6488:48;723:10315;;;;;;;;;;;6488:48;;;;;6440:203;723:10315;;-1:-1:-1;;;6569:62:14;;-1:-1:-1;;;;;723:10315:14;;;;;6569:62;;723:10315;129:51:24;;;723:10315:14;;;;;;;;;129:51:24;;723:10315:14;;;6569:62;;;;;;723:10315;6569:62;;;;6440:203;;;;6569:62;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;723:10315;;;;;;;;;5517:911;5588:30;;;;;;;;:::i;:::-;5640:13;;5635:545;5696:3;5204:27;723:10315;5655:22;;:39;;;5696:3;5655:39;;;-1:-1:-1;;;;;5741:14:14;;;:::i;:::-;723:10315;;;;;;;;;-1:-1:-1;;;5800:23:14;;723:10315;5800:23;723:10315;5800:23;;;;;;;;;;;;;;;;;;5696:3;5869:26;;723:10315;5869:26;;5868:65;5869:26;;:::i;5868:65::-;5956:25;;;5952:99;;5696:3;5253:28;723:10315;;;6091:32;;;;;-1:-1:-1;;;6091:32:14;;723:10315;6091:32;;723:10315;6091:32;;;;;;;;;;;5696:3;6142:22;;;5696:3;6142:22;;:::i;:::-;5696:3;;:::i;:::-;5640:13;;;6091:32;;;723:10315;6091:32;;;;;;;;;723:10315;6091:32;;;:::i;:::-;;;723:10315;;;;;5696:3;6091:32;;723:10315;;;;6091:32;;;-1:-1:-1;6091:32:14;;;723:10315;;;;;;;;;5952:99;-1:-1:-1;6006:25:14;5952:99;;5800:23;;;;;;723:10315;5800:23;;;;;;;;;723:10315;5800:23;;;:::i;:::-;;;723:10315;;;;;;;;;;5869:26;5800:23;;723:10315;;;;5800:23;;;-1:-1:-1;5800:23:14;;;723:10315;;;;;;;;;5655:39;;;;;;;;6221:14;;:::i;:::-;6276:29;;;;;;:95;;5517:911;;;;;;6276:95;;;;;5655:39;5681:13;;;;5655:39;;5422:18;;;;723:10315;5422:18;723:10315;5422:18;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;5253:28;;;;723:10315;5253:28;723:10315;5253:28;;;;;;;:::i;:::-;;;;5174:58;;;;:::i;:::-;;;;;6818:18;;;;723:10315;6818:18;723:10315;6818:18;;;;;;;:::i;:::-;;;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;;;:::i;:::-;2303:62:3;;:::i;:::-;2466:103:12;;:::i;:::-;723:10315:14;;-1:-1:-1;;;;;723:10315:14;;;4440:57;;;;;-1:-1:-1;;;;;723:10315:14;;4440:57;-1:-1:-1;;;4440:57:14;;723:10315;4440:57;;723:10315;4440:57;;723:10315;;;;;;4440:57;;;;;;;;;;;;;;723:10315;;;;;4518:28;-1:-1:-1;;;4518:28:14;;723:10315;4518:28;;723:10315;;4518:28;723:10315;4518:28;;;;;;;;4510:55;4518:28;;;;;4510:55;;:::i;:::-;4602:12;;:::i;:::-;4627:37;;;;;723:10315;;;4627:37;;723:10315;;;4627:37;;723:10315;4627:37;;723:10315;4627:37;;;;;;;;;;723:10315;4627:37;723:10315;4627:37;;;;723:10315;4627:37;;;;:::i;:::-;4759:28;4719:12;;;:::i;:::-;4759:28;:::i;:::-;723:10315;4008:14:5;723:10315:14;4804:18;;4800:164;4804:18;;;4839:23;;4800:164;;723:10315;;4982:18;;;;-1:-1:-1;;;4982:18:14;;;;;;;;;5002:8;4982:18;723:10315;4982:18;723:10315;4982:18;;;4800:164;5002:8;;:::i;:::-;723:10315;;;;;;;;;4982:18;;;;;;;;;;;;;;:::i;:::-;;;;4800:164;4907:28;;4906:46;4907:28;;:::i;:::-;4906:46;:::i;:::-;4800:164;;;4627:37;;;;:::i;:::-;;;;;;723:10315;;;4518:28;;;;723:10315;4518:28;723:10315;4518:28;;;;;;;:::i;:::-;;;;4440:57;;;;:::i;:::-;;;;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;2466:103:12;;:::i;:::-;723:10315:14;1553:12;;:::i;:::-;723:10315;;-1:-1:-1;;;;;723:10315:14;;;1578:71;723:10315;;1578:71;;;;723:10315;1578:71;;966:10:6;723:10315:14;1578:71;;723:10315;1629:4;723:10315;;;;;;;;;;1578:71;;;;;;723:10315;1578:71;;;;723:10315;1578:71;;;:::i;:::-;1744:28;1704:12;;;:::i;1744:28::-;723:10315;4008:14:5;723:10315:14;1789:18;;1785:164;1789:18;;;1824:23;;1785:164;1975:8;966:10:6;;1975:8:14;:::i;1785:164::-;1892:28;;1891:46;1892:28;;:::i;1891:46::-;1785:164;;1578:71;;;;;;;;;;;;;:::i;:::-;;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;;;;;11016:11;723:10315;;;;;;;;11016:11;723:10315;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;-1:-1:-1;723:10315:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;4597:5:5;723:10315:14;;:::i;:::-;;;966:10:6;;4597:5:5;:::i;:::-;723:10315:14;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;;:::i;:::-;5141:20;723:10315;2303:62:3;;;:::i;:::-;-1:-1:-1;;;;;723:10315:14;;;5174:58;;;;;;723:10315;;-1:-1:-1;;;5174:58:14;;-1:-1:-1;;;;;723:10315:14;;;5174:58;;723:10315;5204:27;723:10315;;;;5174:58;723:10315;;;5174:58;;;;;;;;;-1:-1:-1;;;;;5174:58:14;;;;723:10315;;;;;;;5253:28;-1:-1:-1;;;5253:28:14;;723:10315;5253:28;;723:10315;;5253:28;;;;;;;;;;;;5245:55;5253:28;;;;;5245:55;;:::i;:::-;5369:36;5370:18;5331:12;;;:::i;5369:36::-;723:10315;;;-1:-1:-1;;;5422:18:14;;723:10315;5422:18;723:10315;5422:18;;;;;;;;;5442:8;5422:18;;;;;;;5442:8;;:::i;:::-;5490:14;;:::i;:::-;5521:30;;;5517:911;;723:10315;;;;;;-1:-1:-1;;;;;6444:13:14;723:10315;;137:42:24;6444:27:14;;6440:203;137:42:24;;;6488:48:14;;;;;;;;;;;;;;;723:10315;6440:203;;723:10315;;;;;;5517:911;5588:30;;;;;;;;:::i;:::-;5640:13;;5635:545;5696:3;5204:27;723:10315;5655:22;;:39;;;5696:3;5655:39;;;-1:-1:-1;;;;;5741:14:14;;;:::i;:::-;723:10315;;;;;;;;;-1:-1:-1;;;5800:23:14;;723:10315;5800:23;723:10315;5800:23;;;;;;;;;;;;;;;;;;5696:3;5869:26;;723:10315;5869:26;;5868:65;5869:26;;:::i;5868:65::-;5956:25;;;5952:99;;5696:3;5253:28;723:10315;;;6091:32;;;;;-1:-1:-1;;;6091:32:14;;723:10315;6091:32;;723:10315;6091:32;;;;;;;;;;;5696:3;6142:22;;;5696:3;6142:22;;:::i;5696:3::-;5640:13;;;6091:32;;;723:10315;6091:32;;;;;;;;;723:10315;6091:32;;;:::i;:::-;;;723:10315;;;;;5696:3;6091:32;;;;;-1:-1:-1;6091:32:14;;5952:99;-1:-1:-1;6006:25:14;5952:99;;5800:23;;;;;;723:10315;5800:23;;;;;;;;;723:10315;5800:23;;;:::i;:::-;;;723:10315;;;;;;;;;;5869:26;5800:23;;;;;-1:-1:-1;5800:23:14;;5655:39;5681:13;;;;5655:39;;5174:58;;;;:::i;:::-;;;;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;;;-1:-1:-1;;;;;9478:26:14;723:10315;;9478:26;:::i;:::-;723:10315;;;;;;;;;9478:43;;;;723:10315;9478:43;;;;;;;;723:10315;9478:43;;;723:10315;;;;;;;;;9478:43;;723:10315;9478:43;;723:10315;9478:43;;;;;;723:10315;9478:43;;;:::i;:::-;;;723:10315;;;;;;;9478:43;;;;;-1:-1:-1;9478:43:14;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;;;;3086:9:5;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3086:9:5;723:10315:14;;;;;;;-1:-1:-1;723:10315:14;;;;;;;-1:-1:-1;723:10315:14;;-1:-1:-1;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;723:10315:14;;-1:-1:-1;723:10315:14;;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;-1:-1:-1;;;;;1280:65:3;723:10315:14;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;4234:27;4243:17;966:10:6;-1:-1:-1;;;;;723:10315:14;-1:-1:-1;723:10315:14;2031:63:5;723:10315:14;;;-1:-1:-1;723:10315:14;;4087:171:5;;4243:17:14;4234:27;:::i;723:10315::-;;;;;;-1:-1:-1;;723:10315:14;;;;2303:62:3;;:::i;:::-;723:10315:14;-1:-1:-1;;;;;1280:65:3;723:10315:14;-1:-1:-1;;723:10315:14;;1280:65:3;723:10315:14;;3975:40:3;;;;723:10315:14;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;;:::i;:::-;-1:-1:-1;;;;;723:10315:14;-1:-1:-1;723:10315:14;2031:63:5;723:10315:14;;;-1:-1:-1;723:10315:14;;4087:171:5;;723:10315:14;;;;;;-1:-1:-1;;723:10315:14;;;;;9808:36;9809:18;723:10315;;9770:12;;:::i;723:10315::-;;;;;;-1:-1:-1;;723:10315:14;;;;;-1:-1:-1;;;;;9614:13:14;723:10315;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;10719:11;723:10315;10715:22;;;;;;723:10315;;396:6:24;723:10315:14;;396:6:24;723:10315:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;723:10315:14;;;;;;;;10739:3;10785:14;;10759:41;723:10315;10785:14;-1:-1:-1;;;;;10785:14:14;;;:::i;10759:41::-;10739:3;723:10315;10700:13;;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;;;;3808:2:5;723:10315:14;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;723:10315:14;;;;;;:::i;:::-;;;:::i;:::-;;;4848:20:5;;;-1:-1:-1;;;;;723:10315:14;;;4848:13:5;723:10315:14;;;;;;;4848:20:5;-1:-1:-1;;;;;966:10:6;723:10315:14;-1:-1:-1;723:10315:14;;;;-1:-1:-1;723:10315:14;;;;;11891:36:5;;11887:309;;723:10315:14;6179:5:5;;;;:::i;11887:309::-;11947:24;;;11943:130;;-1:-1:-1;;;;;723:10315:14;;11122:19:5;11118:89;;966:10:6;11220:21:5;11216:90;;6179:5;11315:20;;;-1:-1:-1;;;;;723:10315:14;;;4848:13:5;723:10315:14;;;;;;;11315:20:5;-1:-1:-1;;;;;966:10:6;723:10315:14;-1:-1:-1;723:10315:14;;;;;-1:-1:-1;723:10315:14;;;;;11887:309:5;;11216:90;11264:31;723:10315:14;11264:31:5;723:10315:14;;;;;11264:31:5;11118:89;11164:32;723:10315:14;11164:32:5;723:10315:14;;;;;11164:32:5;11943:130;11998:60;;;723:10315:14;11998:60:5;966:10:6;723:10315:14;;;;;;;;11998:60:5;723:10315:14;;;;;;-1:-1:-1;;723:10315:14;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;;;2303:62:3;;:::i;:::-;6937:63:14;6945:34;;;6937:63;:::i;:::-;7020:25;;;:::i;:::-;723:10315;;;;;7125:22;;723:10315;7125:22;723:10315;7125:22;;;;;;;;-1:-1:-1;;;;;7125:22:14;723:10315;7125:22;;;723:10315;;;7116:4;7108:39;:99;;;;723:10315;7086:165;;;;:::i;:::-;7264:11;723:10315;;;;;;;;;;;;;;7264:11;723:10315;;:::i;:::-;;;;-1:-1:-1;;;;;723:10315:14;;;;;;;;;;;;;;;;;;7108:99;723:10315;;;;-1:-1:-1;;;;;7168:13:14;723:10315;;;;;7185:22;;;;723:10315;7185:22;;;;;;;;;7086:165;7185:22;-1:-1:-1;;;;;7185:22:14;723:10315;7185:22;;;7108:99;723:10315;;7168:39;7108:99;;;7185:22;;;;723:10315;7185:22;723:10315;7185:22;;;;;;;:::i;:::-;;;;7125;;;;723:10315;7125:22;723:10315;7125:22;;;;;;;:::i;:::-;;;;723:10315;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;4008:14:5;723:10315:14;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;;;;7399:30;7391:61;2303:62:3;;;:::i;:::-;7399:30:14;:::i;7391:61::-;7479:11;723:10315;;7528:7;;;;;;723:10315;7537:3;7561:14;-1:-1:-1;;;;;7561:14:14;;;:::i;:::-;723:10315;;;;;;;7561:34;7557:280;;723:10315;;7513:13;;7557:280;-1:-1:-1;;;;;7634:14:14;;;:::i;:::-;723:10315;;;;;;;9290:23;;;;;723:10315;;;;;;9290:23;;;;-1:-1:-1;;;9290:23:14;;;;;;;;;;7557:280;9290:23;;;:::i;:::-;-1:-1:-1;;723:10315:14;;;;;;;7668:14;-1:-1:-1;;;;;7685:20:14;7668:37;7685:20;;:::i;:::-;723:10315;;;;;;;7668:14;;:::i;:37::-;7479:11;723:10315;;;;;-1:-1:-1;;723:10315:14;;;;:::i;:::-;-1:-1:-1;;;;;723:10315:14;;;;;;;;;;7479:11;723:10315;;;;;;;;;;;;;;;-1:-1:-1;;;723:10315:14;;;;;;;;9290:23;723:10315;9290:23;;;:::i;:::-;;;;723:10315;;;;;;-1:-1:-1;;723:10315:14;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;723:10315:14;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;;;;;10512:12;723:10315;;;;;;;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;:::i;:::-;;;966:10:6;;11122:19:5;11118:89;;-1:-1:-1;;;;;723:10315:14;11220:21:5;;;11216:90;;966:10:6;723:10315:14;;;;4848:13:5;723:10315:14;;;;;;-1:-1:-1;723:10315:14;;;;;-1:-1:-1;723:10315:14;;;;;;;11396:31:5;723:10315:14;966:10:6;11396:31:5;;723:10315:14;;;;;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;2827:7:5;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2827:7:5;723:10315:14;;;;;;;-1:-1:-1;723:10315:14;;;;;;;-1:-1:-1;723:10315:14;;-1:-1:-1;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;723:10315:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;7479:11;723:10315;;;;;;7479:11;-1:-1:-1;723:10315:14;;-1:-1:-1;723:10315:14;;;-1:-1:-1;723:10315:14;:::o;:::-;;;;;;;;;;:::o;9860:244::-;9951:14;;:::i;:::-;9981:13;9993:1;10000:11;723:10315;9996:22;;;;;;9860:244;;:::o;10020:3::-;10056:14;;:29;;-1:-1:-1;;;;;10056:14:14;;;:::i;:::-;723:10315;;;;;;;;;10056:29;;;;-1:-1:-1;;;10056:29:14;;;;;;;;;9993:1;10056:29;;;10020:3;10040:45;;;723:10315;10040:45;;:::i;:::-;10020:3;723:10315;9981:13;;;10056:29;;;;;;;;;;;;723:10315;10056:29;;;:::i;:::-;;;723:10315;;;;-1:-1:-1;723:10315:14;;10056:29;;723:10315;;;10056:29;;;-1:-1:-1;10056:29:14;;723:10315;;;;:::o;:::-;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;723:10315:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;723:10315:14;;;;;;;;;-1:-1:-1;;723:10315:14;;;;;;;:::o;129:51:24:-;;;;;;;;;;723:10315:14;;;129:51:24;;;;;:::o;2671:1434:14:-;2856:36;2857:18;2816:12;;;:::i;2856:36::-;966:10:6;2917:8:14;966:10:6;;2917:8:14;:::i;:::-;2965:14;;:::i;:::-;2996:30;;;2992:911;;2671:1434;723:10315;;;-1:-1:-1;;;;;3919:13:14;723:10315;;137:42:24;3919:27:14;;3915:183;137:42:24;;;3963:38:14;;-1:-1:-1;3963:38:14;;;;3915:183;-1:-1:-1;966:10:6;;;;;;3963:38:14;;;;;2671:1434::o;3963:38::-;-1:-1:-1;3963:38:14;;;3915:183;723:10315;;-1:-1:-1;;;4034:52:14;;966:10:6;4034:52:14;;;723:10315;129:51:24;;;723:10315:14;;;;4034:52;;723:10315;;129:51:24;;723:10315:14;;-1:-1:-1;;4034:52:14;;;;;;;;3915:183;2671:1434::o;4034:52::-;;;;;;;;;;;;;:::i;:::-;;2671:1434::o;2992:911::-;3063:30;;;;:::i;:::-;3115:13;-1:-1:-1;3110:545:14;3171:3;4008:14:5;723:10315:14;3130:22;;:39;;;3171:3;3130:39;;;-1:-1:-1;;;;;3216:14:14;;;:::i;:::-;723:10315;;;;;;;;;-1:-1:-1;;;3275:23:14;;;;;;;;;;;;;;;-1:-1:-1;3275:23:14;;;3171:3;3344:26;;3343:65;3344:26;3275:23;3344:26;-1:-1:-1;3344:26:14;;:::i;3343:65::-;3431:25;;;3427:99;;3171:3;3566:32;723:10315;;;3566:32;;;;;-1:-1:-1;;;3566:32:14;;3275:23;3566:32;;723:10315;3566:32;;;;;;;-1:-1:-1;3566:32:14;;;3171:3;3617:22;;;3171:3;3617:22;;:::i;3171:3::-;3115:13;;;3566:32;;3275:23;3566:32;;;;;;;;;723:10315;3566:32;;;:::i;:::-;;;723:10315;;;;-1:-1:-1;723:10315:14;3171:3;3566:32;;;;;-1:-1:-1;3566:32:14;;3427:99;-1:-1:-1;3481:25:14;3427:99;;3275:23;;;;;;;;;;;;;723:10315;3275:23;;;:::i;:::-;;;723:10315;;;;-1:-1:-1;723:10315:14;;;3343:65;3275:23;;;;;-1:-1:-1;3275:23:14;;3130:39;;;;;3696:14;;:::i;:::-;3751:29;;;;;;:95;;2992:911;;;;3751:95;;;;;3130:39;3156:13;;;;3130:39;;723:10315;;;;:::o;:::-;;;;-1:-1:-1;;;723:10315:14;;;;;;;;;;;;;;;;;;2000:663;2054:14;;:::i;:::-;2086:13;2098:1;2125:3;2105:11;723:10315;2101:22;;;;;-1:-1:-1;;;;;2166:14:14;;;:::i;:::-;723:10315;;;;;;;;;2098:1;723:10315;;;;396:6:24;2272:22:14;723:10315;2098:1;723:10315;;2272:22;;:::i;:::-;723:10315;2366:10;;2362:24;;2098:1;723:10315;-1:-1:-1;;;;;723:10315:14;;;137:42:24;2407:27:14;;137:42:24;;;;2455::14;;;;;;;;;;;2403:207;2626:18;;;;;2098:1;723:10315;;2626:18;723:10315;;2626:18;;;;723:10315;2626:18;;;;;;;;;723:10315;2626:18;;;2403:207;2125:3;2086:13;723:10315;2086:13;;2626:18;2098:1;2626:18;;;:::i;:::-;;;;2403:207;723:10315;;-1:-1:-1;;;2538:56:14;;-1:-1:-1;;;;;723:10315:14;;2626:18;2538:56;;723:10315;129:51:24;;;723:10315:14;;;;;;;;;;129:51:24;;723:10315:14;;;2538:56;;;;;;;;2403:207;;;;2538:56;;;723:10315;2538:56;;;;;;;;;:::i;:::-;;;;;2362:24;2378:8;723:10315;2378:8;;;;2101:22;;;;2000:663::o;10112:266::-;10191:13;723:10315;-1:-1:-1;;;;;723:10315:14;137:42:24;10191:27:14;;137:42:24;;10247:21:14;;10187:184;10112:266::o;10187:184::-;723:10315;10313:46;723:10315;;;10313:46;;;;723:10315;10313:46;;10353:4;10313:46;;;723:10315;10313:46;;;;;;;723:10315;10313:46;;;10301:58;10187:184;10112:266::o;10313:46::-;;;723:10315;10313:46;;723:10315;10313:46;;;;;;723:10315;10313:46;;;:::i;:::-;;;723:10315;;;;;10187:184;10112:266::o;10313:46::-;;;-1:-1:-1;10313:46:14;;2658:162:3;-1:-1:-1;;;;;1280:65:3;723:10315:14;;966:10:6;2717:23:3;2713:101;;2658:162::o;2713:101::-;2763:40;-1:-1:-1;2763:40:3;966:10:6;2763:40:3;723:10315:14;;-1:-1:-1;2763:40:3;8353:265:14;8459:11;723:10315;;;8455:22;;;;;;8598:12;;;723:10315;8353:265;:::o;8479:3::-;-1:-1:-1;;;;;8503:14:14;;;:::i;:::-;723:10315;;;;;;;-1:-1:-1;;;;;723:10315:14;;8503:26;8499:78;;723:10315;;8440:13;;8499:78;8550:11;;;723:10315;8550:11;:::o;6586:300:5:-;-1:-1:-1;;;;;723:10315:14;6669:18:5;;;6665:86;;-1:-1:-1;;;;;723:10315:14;6764:16:5;;;6760:86;;6685:1;723:10315:14;;;2031:63:5;723:10315:14;;;;;;7590:19:5;;;7586:115;;723:10315:14;;;;8339:25:5;723:10315:14;;;;;2031:63:5;723:10315:14;;;;;;;;;;2031:63:5;723:10315:14;;;;;;;;;;;;;;8339:25:5;6586:300::o;7586:115::-;723:10315:14;7636:50:5;-1:-1:-1;;;7636:50:5;;;;;723:10315:14;;;;;7636:50:5;6760:86;6803:32;6685:1;6803:32;6685:1;6803:32;723:10315:14;;6685:1:5;6803:32;6665:86;6710:30;6685:1;6710:30;6685:1;6710:30;723:10315:14;;6685:1:5;6710:30;9240:206;-1:-1:-1;;;;;723:10315:14;9310:21:5;;9306:89;;9329:1;723:10315:14;;;;2031:63:5;723:10315:14;;;;;;7590:19:5;;;7586:115;;723:10315:14;8339:25:5;723:10315:14;;;;;;2031:63:5;723:10315:14;;;;;;;;8062:14:5;723:10315:14;;8062:14:5;723:10315:14;;;;;;8339:25:5;9240:206::o;7586:115::-;7636:50;;-1:-1:-1;;;723:10315:14;7636:50:5;;;723:10315:14;;;;;7636:50:5;2575:307:12;1899:1;2702:7;723:10315:14;2702:18:12;2698:86;;1899:1;2702:7;723:10315:14;2575:307:12:o;2698:86::-;2743:30;2702:7;2743:30;;2702:7;2743:30;8714:208:5;-1:-1:-1;;;;;723:10315:14;8784:21:5;;;8780:91;;8339:25;723:10315:14;;7479:23:5;8803:1;723:10315:14;7479:14:5;723:10315:14;7479:23:5;:::i;:::-;:14;723:10315:14;;;;2031:63:5;723:10315:14;;;;;;;;;;;;;;;;8339:25:5;8714:208::o"
            },
            "methodIdentifiers": {
              "addStrategy(address)": "223e5479",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit(uint256)": "b6b55f25",
              "depositFromAccount(uint256,address)": "b76e07cc",
              "earn()": "d389800f",
              "getAllocation(address)": "0e022923",
              "getAsset()": "5c222bad",
              "getAvailable()": "f9cc0605",
              "getBalance()": "12065fe0",
              "getLastHarvest(uint256)": "a29b3c90",
              "getShares(uint256)": "6f7267b7",
              "getStrategies()": "b49a60bb",
              "getSummary()": "4051ddac",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "reallocate(uint256[])": "ee6ce925",
              "removeStrategy(address)": "175188e8",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawAll()": "853828b6",
              "withdrawAllToAccount(address)": "c07e866e",
              "withdrawToAccount(uint256,address)": "a49b5cb4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositFromAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"getLastHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastHarvest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSummary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idle\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"}],\"name\":\"reallocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategyToRemove\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultUpgradeable.sol\":\"VaultUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/VaultUpgradeable.sol\":{\"keccak256\":\"0xd9fb0ccb24f920a85f10e52e03f84f34c7f04313e92b9887c675f75e21de9a5d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://35800d6676071a774a39a01e2580a581b5201a3d15db67dcffd941fd477bbff8\",\"dweb:/ipfs/QmZrnGcdVHiocyX7DpwDo9j7Yd5azz4NsoiqUP59hQbofG\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Consts.sol\":{\"keccak256\":\"0xb52112019a0dbe6925c70a2cf711ae824ebd042cb45b85574873006ea10e92a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://08321e85c8f3eb3c9bde273c965fe8f004df70a8547f1b1ffbb93bf8f6bb5980\",\"dweb:/ipfs/QmbDcJkBo6dwh4JE3TqapftKUUYxsZZiHBqEnRERx4uNbB\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAccount.sol": {
        "IAccount": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IAgent[]",
                  "name": "agentsToAdd",
                  "type": "address[]"
                }
              ],
              "name": "addAgents",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAgent",
                  "name": "agent",
                  "type": "address"
                }
              ],
              "name": "checkIsAgent",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isAgent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAgents",
              "outputs": [
                {
                  "internalType": "contract IAgent[]",
                  "name": "agents",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAgent[]",
                  "name": "agentsToRemove",
                  "type": "address[]"
                }
              ],
              "name": "removeAgents",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "enum Enums.AutoPilotMode",
                  "name": "mode",
                  "type": "uint8"
                }
              ],
              "name": "setModeFor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amountsScaled",
                  "type": "uint256[]"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "withdrawToVault",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addAgents(address[])": "d570e954",
              "checkIsAgent(address)": "2cde49f4",
              "deposit(address,uint256)": "47e7ef24",
              "getAgents()": "eac3fda4",
              "getOwner()": "893d20e8",
              "removeAgents(address[])": "93a9f24d",
              "setModeFor(address,uint8)": "2d66f07f",
              "withdraw(address[],uint256[])": "de6d6d96",
              "withdrawToVault(uint256)": "ce8c42e8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAgent[]\",\"name\":\"agentsToAdd\",\"type\":\"address[]\"}],\"name\":\"addAgents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAgent\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"checkIsAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAgent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgents\",\"outputs\":[{\"internalType\":\"contract IAgent[]\",\"name\":\"agents\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAgent[]\",\"name\":\"agentsToRemove\",\"type\":\"address[]\"}],\"name\":\"removeAgents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"enum Enums.AutoPilotMode\",\"name\":\"mode\",\"type\":\"uint8\"}],\"name\":\"setModeFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsScaled\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"withdrawToVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAccountFactory.sol": {
        "IAccountFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "AccountCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createAccount",
              "outputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "getAccount",
              "outputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createAccount()": "9dca362f",
              "getAccount(address)": "fbcbc0f1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAccount\",\"outputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccountFactory.sol\":\"IAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAccountFactory.sol\":{\"keccak256\":\"0x81df111ce19be9b9bd8367c4e4c39a493c2ea13ff467d610162f44e4dd5d68cc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://54208f747876104fb35611ea1530d78dba0585287fd78a6363693a4dcaf2b131\",\"dweb:/ipfs/QmRtE6TvXKJ5kNXsZxosf2g9TtTymYsJdAhSyuqJ7RPi25\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAddressesProvider.sol": {
        "IAddressesProvider": {
          "abi": [
            {
              "inputs": [],
              "name": "getAccountFactory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "accountFactory",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAfterYieldFunctions",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "afterYieldOracle",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAfterYieldOracle",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "afterYieldFunctions",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeCollector",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getAccountFactory()": "9068a868",
              "getAfterYieldFunctions()": "0f63be01",
              "getAfterYieldOracle()": "4a812284",
              "getFeeCollector()": "12fde4b7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAccountFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"accountFactory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAfterYieldFunctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"afterYieldOracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAfterYieldOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"afterYieldFunctions\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAddressesProvider.sol\":\"IAddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x62a238e1b9c8efbc663ed3f7f1ae5dd5eb590cc1dfb662103841be30e7af9200\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e961b8898c79d00d71834f234a0f1b9c3fe345a4993c89e4d1e5e283b8a6eba2\",\"dweb:/ipfs/QmcwyAE5NANqiPyDgkY1sZnGRyVnQrK3zsqfuoSZ9aZLzP\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAfterYieldFunctions.sol": {
        "IAfterYieldFunctions": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "result",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "err",
                  "type": "bytes"
                }
              ],
              "name": "OCRResponse",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "enum Enums.TaskType",
                  "name": "taskType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "subscriptionId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint32",
                  "name": "gasLimit",
                  "type": "uint32"
                }
              ],
              "name": "makeRequest",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "makeRequest(uint8,uint64,uint32)": "72642f2b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"OCRResponse\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum Enums.TaskType\",\"name\":\"taskType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"}],\"name\":\"makeRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAfterYieldFunctions.sol\":\"IAfterYieldFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAfterYieldFunctions.sol\":{\"keccak256\":\"0x46ac9fc07f75f294388732baf234e709b94040086b7fab73af24c5b1f43d9715\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d5d5744d9929876fba4b19ba29dabe2bfba72154ddb0754443e9719fed50ca92\",\"dweb:/ipfs/QmQcG2J6aPRTs7h6tNC5F8BQC3DAFUXi62LemSfgjaB1Pg\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAgent.sol": {
        "IAgent": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "agent",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "hasFunds",
                  "type": "bool"
                }
              ],
              "name": "BeforeTask",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "addStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "enum Enums.ApprovalFlag",
                  "name": "flag",
                  "type": "uint8"
                }
              ],
              "name": "checkApproval",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVault",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "depositFromAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "feeToken",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "reallocation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "removeStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVault",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawAllToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVault",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addStrategy(bytes)": "4b837649",
              "allowance(address)": "3e5beab9",
              "approve(uint8)": "fca0025d",
              "checkApproval(address,uint8)": "f887cf00",
              "depositFromAccount(address,uint256,address)": "e76e8cad",
              "getFeeToken()": "ca709a25",
              "reallocation(bytes)": "e0ab4650",
              "removeStrategy(bytes)": "47a471a1",
              "withdrawAllToAccount(address,address)": "4a86e1a6",
              "withdrawToAccount(address,uint256,address)": "0ff199de"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasFunds\",\"type\":\"bool\"}],\"name\":\"BeforeTask\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"enum Enums.ApprovalFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"checkApproval\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositFromAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"reallocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAgent.sol\":\"IAgent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IBaseStrategy.sol": {
        "IBaseStrategy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "callFeeAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "strategistFeeAmount",
                  "type": "uint256"
                }
              ],
              "name": "ChargedFees",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                }
              ],
              "name": "FeeCollectorSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ],
              "name": "FeeRecipientSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "ManagerSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "StrategistSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeId",
                  "type": "uint256"
                }
              ],
              "name": "StrategyFeeIdSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "harvester",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "assetHarvested",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tvl",
                  "type": "uint256"
                }
              ],
              "name": "StrategyHarvest",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "SwapRouterSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ],
              "name": "VaultSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "WithdrawalFeeSetted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getDepositFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "depositFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStrategyFeeId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "strategyFeeId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getWithdrawFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "withdrawFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IFeeCollector",
                  "name": "newFeeCollector",
                  "type": "address"
                }
              ],
              "name": "setFeeCollector",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newFeeRecipient",
                  "type": "address"
                }
              ],
              "name": "setFeeRecipient",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newManager",
                  "type": "address"
                }
              ],
              "name": "setManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newStrategist",
                  "type": "address"
                }
              ],
              "name": "setStrategist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFeeId",
                  "type": "uint256"
                }
              ],
              "name": "setStrategyFeeId",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newRouter",
                  "type": "address"
                }
              ],
              "name": "setSwapRouter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newVault",
                  "type": "address"
                }
              ],
              "name": "setVault",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                }
              ],
              "name": "setWithdrawalFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "swapRouter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getDepositFee()": "0de705b5",
              "getStrategyFeeId()": "e4580a3c",
              "getVault()": "8d928af8",
              "getWithdrawFee()": "1540aa89",
              "setFeeCollector(address)": "a42dce80",
              "setFeeRecipient(address)": "e74b981b",
              "setManager(address)": "d0ebdbe7",
              "setStrategist(address)": "c7b9d530",
              "setStrategyFeeId(uint256)": "19a501ad",
              "setSwapRouter(address)": "41273657",
              "setVault(address)": "6817031b",
              "setWithdrawalFee(uint256)": "ac1e5025",
              "swapRouter()": "c31c9c07"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategistFeeAmount\",\"type\":\"uint256\"}],\"name\":\"ChargedFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"StrategistSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeId\",\"type\":\"uint256\"}],\"name\":\"StrategyFeeIdSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"harvester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetHarvested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"}],\"name\":\"StrategyHarvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SwapRouterSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"WithdrawalFeeSetted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyFeeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyFeeId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeeCollector\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategist\",\"type\":\"address\"}],\"name\":\"setStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeId\",\"type\":\"uint256\"}],\"name\":\"setStrategyFeeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"setSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaseStrategy.sol\":\"IBaseStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IFeeCollector.sol": {
        "IFeeCollector": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "getFees",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "total",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "protocol",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "call",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "strategist",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "label",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IFeeCollector.FeeCategory",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "feeId",
                  "type": "uint256"
                }
              ],
              "name": "setStrategyFeeId",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "strategyFeeId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getFees(address)": "9af608c9",
              "setStrategyFeeId(uint256)": "19a501ad",
              "strategyFeeId(address)": "a5ed4175"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"call\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategist\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IFeeCollector.FeeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeId\",\"type\":\"uint256\"}],\"name\":\"setStrategyFeeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyFeeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFeeCollector.sol\":\"IFeeCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IStrategy.sol": {
        "IStrategy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "callFeeAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "strategistFeeAmount",
                  "type": "uint256"
                }
              ],
              "name": "ChargedFees",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                }
              ],
              "name": "FeeCollectorSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ],
              "name": "FeeRecipientSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "ManagerSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "StrategistSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeId",
                  "type": "uint256"
                }
              ],
              "name": "StrategyFeeIdSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "harvester",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "assetHarvested",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tvl",
                  "type": "uint256"
                }
              ],
              "name": "StrategyHarvest",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "SwapRouterSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ],
              "name": "VaultSetted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "WithdrawalFeeSetted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "exitStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAsset",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balanceOf",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalanceOfAsset",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balanceOfAsset",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalanceOfPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balanceOfPool",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBaseRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "baseRate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "depositFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLastHarvest",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lastHarvest",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStrategyFeeId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "strategyFeeId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getWithdrawFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "withdrawFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "harvest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "callFeeRecipient",
                  "type": "address"
                }
              ],
              "name": "harvestWithCallFeeRecipient",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "managerHarvest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "panic",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resetRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IFeeCollector",
                  "name": "newFeeCollector",
                  "type": "address"
                }
              ],
              "name": "setFeeCollector",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newFeeRecipient",
                  "type": "address"
                }
              ],
              "name": "setFeeRecipient",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "newHarvestOnDeposit",
                  "type": "bool"
                }
              ],
              "name": "setHarvestOnDeposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newManager",
                  "type": "address"
                }
              ],
              "name": "setManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newReward",
                  "type": "address"
                }
              ],
              "name": "setReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newRewarder",
                  "type": "address"
                }
              ],
              "name": "setRewarder",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newStrategist",
                  "type": "address"
                }
              ],
              "name": "setStrategist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFeeId",
                  "type": "uint256"
                }
              ],
              "name": "setStrategyFeeId",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newRouter",
                  "type": "address"
                }
              ],
              "name": "setSwapRouter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newVault",
                  "type": "address"
                }
              ],
              "name": "setVault",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                }
              ],
              "name": "setWithdrawalFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "swapRouter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "withdrawn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit()": "d0e30db0",
              "exitStrategy()": "7c6ab208",
              "getAsset()": "5c222bad",
              "getBalanceOf()": "ecbde5e6",
              "getBalanceOfAsset()": "df390305",
              "getBalanceOfPool()": "f8b3c21e",
              "getBaseRate()": "b655d0c4",
              "getDepositFee()": "0de705b5",
              "getLastHarvest()": "affd80b0",
              "getStrategyFeeId()": "e4580a3c",
              "getVault()": "8d928af8",
              "getWithdrawFee()": "1540aa89",
              "harvest()": "4641257d",
              "harvestWithCallFeeRecipient(address)": "623d8bd2",
              "managerHarvest()": "d801d946",
              "panic()": "4700d305",
              "resetRewards()": "ad29f5da",
              "setFeeCollector(address)": "a42dce80",
              "setFeeRecipient(address)": "e74b981b",
              "setHarvestOnDeposit(bool)": "0e8fbb5a",
              "setManager(address)": "d0ebdbe7",
              "setReward(address)": "e5932c40",
              "setRewarder(address)": "3a6462e4",
              "setStrategist(address)": "c7b9d530",
              "setStrategyFeeId(uint256)": "19a501ad",
              "setSwapRouter(address)": "41273657",
              "setVault(address)": "6817031b",
              "setWithdrawalFee(uint256)": "ac1e5025",
              "swapRouter()": "c31c9c07",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strategistFeeAmount\",\"type\":\"uint256\"}],\"name\":\"ChargedFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"StrategistSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeId\",\"type\":\"uint256\"}],\"name\":\"StrategyFeeIdSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"harvester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetHarvested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"}],\"name\":\"StrategyHarvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SwapRouterSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"WithdrawalFeeSetted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceOf\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceOfAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceOfAsset\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceOfPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceOfPool\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastHarvest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyFeeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyFeeId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callFeeRecipient\",\"type\":\"address\"}],\"name\":\"harvestWithCallFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managerHarvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeeCollector\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newHarvestOnDeposit\",\"type\":\"bool\"}],\"name\":\"setHarvestOnDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReward\",\"type\":\"address\"}],\"name\":\"setReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRewarder\",\"type\":\"address\"}],\"name\":\"setRewarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategist\",\"type\":\"address\"}],\"name\":\"setStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeId\",\"type\":\"uint256\"}],\"name\":\"setStrategyFeeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"setSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IVault.sol": {
        "IVault": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "newStrategy",
                  "type": "address"
                }
              ],
              "name": "addStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "depositFromAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "getAllocation",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAsset",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAvailable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "strategyIndex",
                  "type": "uint256"
                }
              ],
              "name": "getLastHarvest",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lastHarvest",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "getShares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStrategies",
              "outputs": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSummary",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocated",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idle",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                }
              ],
              "name": "reallocate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategyToRemove",
                  "type": "address"
                }
              ],
              "name": "removeStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawAll",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawAllToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addStrategy(address)": "223e5479",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "deposit(uint256)": "b6b55f25",
              "depositFromAccount(uint256,address)": "b76e07cc",
              "getAllocation(address)": "0e022923",
              "getAsset()": "5c222bad",
              "getAvailable()": "f9cc0605",
              "getBalance()": "12065fe0",
              "getLastHarvest(uint256)": "a29b3c90",
              "getShares(uint256)": "6f7267b7",
              "getStrategies()": "b49a60bb",
              "getSummary()": "4051ddac",
              "reallocate(uint256[])": "ee6ce925",
              "removeStrategy(address)": "175188e8",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawAll()": "853828b6",
              "withdrawAllToAccount(address)": "c07e866e",
              "withdrawToAccount(uint256,address)": "a49b5cb4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositFromAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"getLastHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastHarvest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSummary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idle\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"}],\"name\":\"reallocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategyToRemove\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/libs/Consts.sol": {
        "Consts": {
          "abi": [
            {
              "inputs": [],
              "name": "DIVISOR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "STRATEGY_ALLOCATION_MAX",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WITHDRAWAL_FEE_CAP",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WITHDRAWAL_MAX",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601957610100908161001f823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c9081633410fe6e1460985750806354518b1a14606b5780638322fff214606f578063c784600614606b5763dfbdc43714605057600080fd5b6000366003190112606657602060405160328152f35b600080fd5b60b3565b6000366003190112606657602060405173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152f35b600036600319011260665780670de0b6b3a764000060209252f35b600036600319011260665760206040516127108152f3fea2646970667358221220cbce5546e91e519c2986be791707bf1e5fb2045463f532dcad5a86ea2b1a0f5364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH2 0x100 SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3410FE6E EQ PUSH1 0x98 JUMPI POP DUP1 PUSH4 0x54518B1A EQ PUSH1 0x6B JUMPI DUP1 PUSH4 0x8322FFF2 EQ PUSH1 0x6F JUMPI DUP1 PUSH4 0xC7846006 EQ PUSH1 0x6B JUMPI PUSH4 0xDFBDC437 EQ PUSH1 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB3 JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xCE SSTORE CHAINID 0xE9 0x1E MLOAD SWAP13 0x29 DUP7 0xBE PUSH26 0x1707BF1E5FB2045463F532DCAD5A86EA2B1A0F5364736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "68:338:24:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "external_fun_WITHDRAWAL_MAX": {
                  "entryPoint": 179,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015601257600080fd5b60003560e01c9081633410fe6e1460985750806354518b1a14606b5780638322fff214606f578063c784600614606b5763dfbdc43714605057600080fd5b6000366003190112606657602060405160328152f35b600080fd5b60b3565b6000366003190112606657602060405173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152f35b600036600319011260665780670de0b6b3a764000060209252f35b600036600319011260665760206040516127108152f3fea2646970667358221220cbce5546e91e519c2986be791707bf1e5fb2045463f532dcad5a86ea2b1a0f5364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3410FE6E EQ PUSH1 0x98 JUMPI POP DUP1 PUSH4 0x54518B1A EQ PUSH1 0x6B JUMPI DUP1 PUSH4 0x8322FFF2 EQ PUSH1 0x6F JUMPI DUP1 PUSH4 0xC7846006 EQ PUSH1 0x6B JUMPI PUSH4 0xDFBDC437 EQ PUSH1 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB3 JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xCE SSTORE CHAINID 0xE9 0x1E MLOAD SWAP13 0x29 DUP7 0xBE PUSH26 0x1707BF1E5FB2045463F532DCAD5A86EA2B1A0F5364736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "68:338:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;68:338:24;;;;;;;281:2;68:338;;;;;;;;;:::i;:::-;;;-1:-1:-1;;68:338:24;;;;;;;137:42;68:338;;;;;;-1:-1:-1;;68:338:24;;;;;223:4;68:338;;;;;;;-1:-1:-1;;68:338:24;;;;;;;331:6;68:338;;"
            },
            "methodIdentifiers": {
              "DIVISOR()": "3410fe6e",
              "ETH()": "8322fff2",
              "STRATEGY_ALLOCATION_MAX()": "c7846006",
              "WITHDRAWAL_FEE_CAP()": "dfbdc437",
              "WITHDRAWAL_MAX()": "54518b1a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGY_ALLOCATION_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_FEE_CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Consts.sol\":\"Consts\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libs/Consts.sol\":{\"keccak256\":\"0xb52112019a0dbe6925c70a2cf711ae824ebd042cb45b85574873006ea10e92a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://08321e85c8f3eb3c9bde273c965fe8f004df70a8547f1b1ffbb93bf8f6bb5980\",\"dweb:/ipfs/QmbDcJkBo6dwh4JE3TqapftKUUYxsZZiHBqEnRERx4uNbB\"]}},\"version\":1}"
        }
      },
      "contracts/libs/Enums.sol": {
        "Enums": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122045f0bfc9a993bed1c05e2b1fc5cd417934bb99f641e65523b1e840281a12870a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CREATE 0xBF 0xC9 0xA9 SWAP4 0xBE 0xD1 0xC0 MCOPY 0x2B 0x1F 0xC5 0xCD COINBASE PUSH26 0x34BB99F641E65523B1E840281A12870A64736F6C634300081C00 CALLER ",
              "sourceMap": "68:275:25:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122045f0bfc9a993bed1c05e2b1fc5cd417934bb99f641e65523b1e840281a12870a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CREATE 0xBF 0xC9 0xA9 SWAP4 0xBE 0xD1 0xC0 MCOPY 0x2B 0x1F 0xC5 0xCD COINBASE PUSH26 0x34BB99F641E65523B1E840281A12870A64736F6C634300081C00 CALLER ",
              "sourceMap": "68:275:25:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Enums.sol\":\"Enums\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]}},\"version\":1}"
        }
      },
      "contracts/mocks/SimpleVault.sol": {
        "SimpleVault": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "newStrategy",
                  "type": "address"
                }
              ],
              "name": "addStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "depositFromAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lpMinted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "earn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "getAllocation",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAsset",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAvailable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "strategyIndex",
                  "type": "uint256"
                }
              ],
              "name": "getLastHarvest",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lastHarvest",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "getShares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStrategies",
              "outputs": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSummary",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "allocated",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idle",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "allowedAsset",
                  "type": "address"
                },
                {
                  "internalType": "contract IAgent",
                  "name": "agent",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                }
              ],
              "name": "reallocate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategyToRemove",
                  "type": "address"
                }
              ],
              "name": "removeStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawAll",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawAllToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAccount",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "withdrawToAccount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountScaled",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601a576001600055612e2190816100208239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde0314612063578063095ea7b314611fbd5780630e02292314611f8057806312065fe014611f65578063175188e814611e1057806318160ddd14611dd3578063223e547914611c0657806323b872dd14611a6b5780632e1a7d4d14611a4d578063313ce56714611a315780634051ddac146119bc5780635c222bad146119955780636f7267b71461197157806370a082311461191a578063715018a614611874578063853828b61461181c5780638da5cb5b146117d65780638f15b414146111bb57806395d89b41146110a0578063a29b3c9014610ff9578063a49b5cb414610d5e578063a9059cbb14610d2d578063b49a60bb14610c61578063b6b55f2514610b63578063b76e07cc14610960578063c07e866e146104e2578063d389800f146104c9578063dd62ed3e1461044c578063ee6ce925146101c4578063f2fde38b146101995763f9cc06051461017157600080fd5b3461019457600036600319011261019457602061018c6128f2565b604051908152f35b600080fd5b34610194576020366003190112610194576101c26101b5612192565b6101bd612996565b612826565b005b346101945760203660031901126101945760043567ffffffffffffffff811161019457366023820112156101945780600401359067ffffffffffffffff8211610436578160051b6040519261021c60208301856121be565b8352602460208401918301019136831161019457602401905b8282106104265783610245612996565b6002548151036103e25760005b6002548110156102c8576001600160a01b0361026d82612271565b90549060031b1c1690610287610282836129f7565b61233e565b82518110156102b25760019160208260051b8501015190600052600360205260406000205501610252565b634e487b7160e01b600052603260045260246000fd5b6000806002545b8083106103a55761271082116103615760005b600254811015610359576001600160a01b036102fd82612271565b90549060031b1c1690813b156101945760008092600460405180958193630f8d564160e31b83525af191821561034d5760019261033c575b50016102e2565b6000610347916121be565b82610335565b6040513d6000823e3d90fd5b6101c26126c8565b606460405162461bcd60e51b815260206004820152601660248201527f416c6c6f636174696f6e2065786365656473206d6178000000000000000000006044820152fd5b906103d96001916001600160a01b036103bd86612271565b90549060031b1c1660005260036020526040600020549061228c565b920191906102cf565b606460405162461bcd60e51b815260206004820152601860248201527f4d69736d617463686564206172726179206c656e6774687300000000000000006044820152fd5b8135815260209182019101610235565b634e487b7160e01b600052604160045260246000fd5b3461019457604036600319011261019457610465612192565b6001600160a01b036104b16104786121a8565b926001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b91166000526020526020604060002054604051908152f35b34610194576000366003190112610194576101c26126c8565b34610194576020366003190112610194576104fb612192565b610503612996565b6001600160a01b03811690604051631127a41d60e31b8152602081600481865afa801561034d576001600160a01b0391600091610941575b50166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604060002054600091610575612996565b6001600160a01b036004541690813b156108495760405162f887cf60e81b81526001600160a01b03919091166004820152600260248201528381604481855afa8015610855578490610931575b505060405190630b37927d60e21b82526004820152602081602481875afa90811561075257906105f9918491610912575b5061267d565b61063561060d82610608612299565b612400565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490612413565b90604051631127a41d60e31b8152602081600481885afa9081156108555761066691839186916108e3575b50612b9c565b61066e6128f2565b82811061075d575b5050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146106dc575082809281928282156106d3575bf1156106c65760209150604051908152f35b50604051903d90823e3d90fd5b506108fc6106b4565b60405163a9059cbb60e01b81526001600160a01b0392909216600483015260248201929092529160209183916044918391905af180156107525760209350610725575b5061018c565b61074490833d851161074b575b61073c81836121be565b810190612442565b508261071f565b503d610732565b6040513d85823e3d90fd5b61076b908395949295612389565b9281935b6002548510806108da575b156108b1576001600160a01b0361079086612271565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa9081156108a65785929189918491610867575b5061060d602093926107d292612400565b848111610860575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561085557849161081e575b506108129061081892612389565b94612433565b9361076f565b90506020813d821161084d575b81610838602093836121be565b810103126108495751610818610804565b8380fd5b3d915061082b565b6040513d86823e3d90fd5b50836107da565b92935050506020813d821161089e575b81610884602093836121be565b8101031261089a5751849190889061060d6107c1565b8480fd5b3d9150610877565b6040513d87823e3d90fd5b509250925082906108c06128f2565b818111156108d357505b90919284610676565b90506108ca565b5080151561077a565b610905915060203d60201161090b575b6108fd81836121be565b8101906123e1565b87610660565b503d6108f3565b61092b915060203d60201161074b5761073c81836121be565b856105f3565b61093a916121be565b84836105c2565b61095a915060203d60201161090b576108fd81836121be565b8461053b565b34610194576040366003190112610194576109796121a8565b610981612996565b610989612c9b565b6000906001600160a01b0360045416803b15610b30576001600160a01b036040519262f887cf60e81b8452169182600482015260016024820152838082604481865afa80156106c657610b53575b505060405190630b37927d60e21b82526004820152602081602481855afa801561075257610a0b918491610b34575061267d565b610a13612299565b813b15610b30576040517fce8c42e80000000000000000000000000000000000000000000000000000000081526004356004820152838160248183875af18015610855579060049460209392610b20575b5050610a6e6126c8565b610a7f81610a7a612299565b612389565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610b08575050915b60405193848092631127a41d60e31b82525afa801561034d5781610ade91602094600091610aeb575b50612cd6565b6001600055604051908152f35b610b029150853d871161090b576108fd81836121be565b85610ad8565b610b1590610b1a93612400565b612413565b91610aaf565b610b29916121be565b8480610a64565b8280fd5b610b4d915060203d60201161074b5761073c81836121be565b846105f3565b610b5c916121be565b83836109d7565b3461019457602036600319011261019457610b7c612c9b565b6000610b86612299565b8160206001600160a01b03600154166064604051809481937f23b872dd00000000000000000000000000000000000000000000000000000000835233600484015230602484015260043560448401525af180156107525760209350610c46575b50610bef6126c8565b610bfb81610a7a612299565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610c345750505b610ade8133612cd6565b610b1590610c4193612400565b610c2a565b610c5c90833d851161074b5761073c81836121be565b610be6565b34610194576000366003190112610194576040518060206002549283815201809260026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9060005b818110610d0e5750505081610cc29103826121be565b6040519182916020830190602084525180915260408301919060005b818110610cec575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610cde565b82546001600160a01b0316845260209093019260019283019201610cac565b3461019457604036600319011261019457610d53610d49612192565b6024359033612a45565b602060405160018152f35b3461019457604036600319011261019457600435610d7a6121a8565b90600090610d86612996565b6001600160a01b036004541692833b15610b305760405162f887cf60e81b81526001600160a01b0382166004820152600260248201528381604481885afa80156108555790846001600160a01b039392610fe9575b5050169260405190630b37927d60e21b82526004820152602081602481875afa9081156107525790610e13918491610912575061267d565b610e2261060d82610608612299565b90604051631127a41d60e31b8152602081600481885afa90811561085557610e5291839186916108e35750612b9c565b610e5a6128f2565b828110610eb0575050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146106dc575082809281928282156106d357f1156106c65760209150604051908152f35b610ebe908395949295612389565b9281935b600254851080610fe0575b156108b1576001600160a01b03610ee386612271565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa9081156108a65785929189918491610fa5575b5061060d60209392610f2592612400565b848111610f9e575b6024906040519485938492632e1a7d4d60e01b845260048401525af1908115610855578491610f6b575b5061081290610f6592612389565b93610ec2565b90506020813d8211610f96575b81610f85602093836121be565b810103126108495751610f65610f57565b3d9150610f78565b5083610f2d565b92935050506020813d8211610fd8575b81610fc2602093836121be565b8101031261089a5751849190889061060d610f14565b3d9150610fb5565b50801515610ecd565b610ff2916121be565b8584610ddb565b3461019457602036600319011261019457600460206001600160a01b036110208335612271565b90549060031b1c16604051928380927faffd80b00000000000000000000000000000000000000000000000000000000082525afa801561034d5760009061106d575b602090604051908152f35b506020813d602011611098575b81611087602093836121be565b810103126101945760209051611062565b3d915061107a565b346101945760003660031901126101945760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04546110e181612237565b80845290600181169081156111975750600114611119575b61111583611109818503826121be565b60405191829182612149565b0390f35b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0460009081527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa939250905b80821061117d575090915081016020016111096110f9565b919260018160209254838588010152019101909291611165565b60ff191660208086019190915291151560051b8401909101915061110990506110f9565b346101945760803660031901126101945760043567ffffffffffffffff8111610194576111ec9036906004016121e0565b60243567ffffffffffffffff81116101945761120c9036906004016121e0565b906044356001600160a01b03811680910361019457606435906001600160a01b038216809203610194577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00549260ff8460401c16159367ffffffffffffffff8116801590816117ce575b60011490816117c4575b1590816117bb575b506117915767ffffffffffffffff1981166001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005584611752575b506112cd612d92565b6112d5612d92565b6112dd612d92565b6112e683612826565b6112ee612d92565b6112f6612d92565b80519067ffffffffffffffff82116104365781906113347f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0354612237565b601f81116116c3575b50602090601f831160011461161d57600092611612575b50508160011b916000199060031b1c1916177f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03555b835167ffffffffffffffff8111610436576113c47f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0454612237565b601f811161158e575b50602094601f82116001146114e9579481929394956000926114de575b50508160011b916000199060031b1c1916177f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04555b73ffffffffffffffffffffffffffffffffffffffff19600154161760015573ffffffffffffffffffffffffffffffffffffffff19600454161760045561146157005b68ff0000000000000000197ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b0151905085806113ea565b601f198216957f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04600052806000209160005b8881106115765750836001959697981061155d575b505050811b017f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace045561141f565b015160001960f88460031b161c19169055858080611530565b9192602060018192868501518155019401920161151b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace046000527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa601f830160051c81019160208410611608575b601f0160051c01905b8181106115fc57506113cd565b600081556001016115ef565b90915081906115e6565b015190508680611354565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0360009081528281209350601f198516905b8181106116ab5750908460019594939210611692575b505050811b017f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0355611389565b015160001960f88460031b161c19169055868080611665565b9293602060018192878601518155019501930161164f565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036000529091507f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0601f840160051c81019160208510611748575b90601f859493920160051c01905b818110611739575061133d565b6000815584935060010161172c565b909150819061171e565b68ffffffffffffffffff191668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055856112c4565b7ff92ee8a90000000000000000000000000000000000000000000000000000000060005260046000fd5b90501587611288565b303b159150611280565b869150611276565b346101945760003660031901126101945760206001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b3461019457600036600319011261019457602061018c61186f336001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b61245a565b346101945760003660031901126101945761188d612996565b60006001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1981167f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019457602036600319011261019457602061018c611938612192565b6001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b3461019457602036600319011261019457602061018c61060d600435610608612299565b346101945760003660031901126101945760206001600160a01b0360015416604051908152f35b34610194576000366003190112610194576000806002545b808210611a10578280612710039061271082116119fa5760409182519182526020820152f35b634e487b7160e01b600052601160045260246000fd5b9091611a296001916001600160a01b036103bd86612271565b9201906119d4565b3461019457600036600319011261019457602060405160128152f35b3461019457602036600319011261019457602061018c60043561245a565b3461019457606036600319011261019457611a84612192565b611a8c6121a8565b60443590611acc836001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b033316600052602052604060002054926000198410611af7575b610d539350612a45565b828410611bd0576001600160a01b03811615611ba1573315611b7257610d5393611b53826001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b03331660005260205283604060002091039055611aed565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b82847ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b34610194576020366003190112610194576004356001600160a01b03811680820361019457611c33612996565b611c3e811515612396565b611c47826129f7565b611d8f576040517f8d928af8000000000000000000000000000000000000000000000000000000008152602081600481855afa801561034d576001600160a01b0391600091611d70575b501630149081611ced575b50611ca690612396565b600254906801000000000000000082101561043657611cce8260016101c29401600255612271565b9091906001600160a01b038084549260031b9316831b921b1916179055565b6004915060206001600160a01b036001541691604051938480927f5c222bad0000000000000000000000000000000000000000000000000000000082525afa91821561034d57611ca6926001600160a01b0391600091611d51575b50161490611c9c565b611d6a915060203d60201161090b576108fd81836121be565b85611d48565b611d89915060203d60201161090b576108fd81836121be565b84611c91565b606460405162461bcd60e51b815260206004820152601760248201527f537472617465677920616c7265616479206578697374730000000000000000006044820152fd5b346101945760003660031901126101945760207f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254604051908152f35b34610194576020366003190112610194576004356001600160a01b0381169081810361019457610282611e4a91611e45612996565b6129f7565b60025460005b818110611e5957005b826001600160a01b03611e6b83612271565b90549060031b1c1614611e8057600101611e50565b6001600160a01b03611e9182612271565b90549060031b1c16803b156101945760008091600460405180948193630f8d564160e31b83525af1801561034d57611f54575b50611ecd6126c8565b60001982019182116119fa57611cce6001600160a01b03611ef0611efe94612271565b90549060031b1c1691612271565b6002548015611f3e5760001901611f1481612271565b6001600160a01b0382549160031b1b19169055600255600052600360205260006040812055600080f35b634e487b7160e01b600052603160045260246000fd5b6000611f5f916121be565b83611ec4565b3461019457600036600319011261019457602061018c612299565b34610194576020366003190112610194576004356001600160a01b0381168091036101945760005260036020526020604060002054604051908152f35b3461019457604036600319011261019457611fd6612192565b602435903315611ba1576001600160a01b0316908115611b72573360009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101945760003660031901126101945760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03546120a481612237565b808452906001811690811561119757506001146120cb5761111583611109818503826121be565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0360009081527f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0939250905b80821061212f575090915081016020016111096110f9565b919260018160209254838588010152019101909291612117565b91909160208152825180602083015260005b81811061217c575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161215b565b600435906001600160a01b038216820361019457565b602435906001600160a01b038216820361019457565b90601f8019910116810190811067ffffffffffffffff82111761043657604052565b81601f820112156101945780359067ffffffffffffffff82116104365760405192612215601f8401601f1916602001856121be565b8284526020838301011161019457816000926020809301838601378301015290565b90600182811c92168015612267575b602083101461225157565b634e487b7160e01b600052602260045260246000fd5b91607f1691612246565b6002548110156102b257600260005260206000200190600090565b919082018092116119fa57565b6122a16128f2565b9060006002545b8082106122b3575050565b9092600460206001600160a01b036122ca87612271565b90549060031b1c166040519283809263765ef2f360e11b82525afa90811561034d57600091612309575b506123019060019261228c565b9301906122a8565b906020823d8211612336575b81612322602093836121be565b8101031261233357505160016122f4565b80fd5b3d9150612315565b1561234557565b606460405162461bcd60e51b815260206004820152601260248201527f5374726174656779206e6f7420666f756e6400000000000000000000000000006044820152fd5b919082039182116119fa57565b1561239d57565b606460405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207374726174656779000000000000000000000000000000006044820152fd5b9081602091031261019457516001600160a01b03811681036101945790565b818102929181159184041417156119fa57565b811561241d570490565b634e487b7160e01b600052601260045260246000fd5b60001981146119fa5760010190565b90816020910312610194575180151581036101945790565b61246961060d82610608612299565b906124748133612b9c565b61247c6128f2565b828110612528575b5050906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146124d6575081600081156124cd575b600080809381933390f11561034d57565b506108fc6124bc565b60405163a9059cbb60e01b81523360048201526024810184905290602090829060449082906000905af1801561034d5761250d5750565b6125259060203d60201161074b5761073c81836121be565b50565b6125329083612389565b926000935b600254851080612674575b15612650576001600160a01b0361255886612271565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa801561034d57859160009161261a575b509161259961060d602093600095612400565b848111612613575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561034d576000916125e0575b50610812906125da92612389565b93612537565b906020823d821161260b575b816125f9602093836121be565b810103126123335750516125da6125cc565b3d91506125ec565b50836125a1565b91506020823d8211612648575b81612634602093836121be565b810103126123335750518490612599612586565b3d9150612627565b5092505061265c6128f2565b8181111561266d57505b3880612484565b9050612666565b50801515612542565b1561268457565b606460405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152fd5b6126d06128f2565b9060005b600254811015612821576001600160a01b036126ef82612271565b90549060031b1c169081600052600360205261271061271360406000205486612400565b048015612817576000906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee811483146127b55750818080928682f11561034d575b813b1561019457600080926004604051809581937fd0e30db00000000000000000000000000000000000000000000000000000000083525af191821561034d576001926127a4575b505b016126d4565b60006127af916121be565b3861279c565b60405163a9059cbb60e01b81526001600160a01b03861660048201526024810192909252909160209183916044918391905af1801561034d576127f9575b50612754565b6128109060203d811161074b5761073c81836121be565b50386127f3565b506001915061279e565b509050565b6001600160a01b031680156128c3576001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300548273ffffffffffffffffffffffffffffffffffffffff198216177f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361291e57504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa90811561034d57600091612967575090565b90506020813d60201161298e575b81612982602093836121be565b81010312610194575190565b3d9150612975565b6001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300541633036129c957565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6002549060005b828110612a0d57505050600090565b6001600160a01b03612a1e82612271565b90549060031b1c166001600160a01b03831614612a3d576001016129fe565b505050600190565b6001600160a01b0316908115612b6d576001600160a01b0316918215612b3e5760008281527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006020526040812054828110612b245791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9587602096527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00865203828220558681527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b03168015612b6d576000918183527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006020526040832054818110612c8257817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace008452036040862055807f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254037f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b600260005414612cac576002600055565b7f3ee5aeb50000000000000000000000000000000000000000000000000000000060005260046000fd5b6001600160a01b0316908115612b3e577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612d376000947f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025461228c565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02558484527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00825260408420818154019055604051908152a3565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612dc157565b7fd7e6bcf80000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220da0059e33541b43fc12b2cad2fddf9ec7d1266c157d7900ed36db1df0e72017b64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x2E21 SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2063 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FBD JUMPI DUP1 PUSH4 0xE022923 EQ PUSH2 0x1F80 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1F65 JUMPI DUP1 PUSH4 0x175188E8 EQ PUSH2 0x1E10 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DD3 JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x1C06 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A6B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A4D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A31 JUMPI DUP1 PUSH4 0x4051DDAC EQ PUSH2 0x19BC JUMPI DUP1 PUSH4 0x5C222BAD EQ PUSH2 0x1995 JUMPI DUP1 PUSH4 0x6F7267B7 EQ PUSH2 0x1971 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1874 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x181C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D6 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x11BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10A0 JUMPI DUP1 PUSH4 0xA29B3C90 EQ PUSH2 0xFF9 JUMPI DUP1 PUSH4 0xA49B5CB4 EQ PUSH2 0xD5E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD2D JUMPI DUP1 PUSH4 0xB49A60BB EQ PUSH2 0xC61 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xB63 JUMPI DUP1 PUSH4 0xB76E07CC EQ PUSH2 0x960 JUMPI DUP1 PUSH4 0xC07E866E EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xEE6CE925 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x199 JUMPI PUSH4 0xF9CC0605 EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x28F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1C2 PUSH2 0x1B5 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x2826 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x194 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x194 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x436 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x21C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21BE JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x194 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x426 JUMPI DUP4 PUSH2 0x245 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 MLOAD SUB PUSH2 0x3E2 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x26D DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x287 PUSH2 0x282 DUP4 PUSH2 0x29F7 JUMP JUMPDEST PUSH2 0x233E JUMP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD MLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE ADD PUSH2 0x252 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP4 LT PUSH2 0x3A5 JUMPI PUSH2 0x2710 DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2FD DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 SWAP3 PUSH2 0x33C JUMPI JUMPDEST POP ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP3 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1C2 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2065786365656473206D617800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x3D9 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BD DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x228C JUMP JUMPDEST SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x235 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x465 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4B1 PUSH2 0x478 PUSH2 0x21A8 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1C2 PUSH2 0x26C8 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x4FB PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x941 JUMPI JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x575 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x855 JUMPI DUP5 SWAP1 PUSH2 0x931 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x752 JUMPI SWAP1 PUSH2 0x5F9 SWAP2 DUP5 SWAP2 PUSH2 0x912 JUMPI JUMPDEST POP PUSH2 0x267D JUMP JUMPDEST PUSH2 0x635 PUSH2 0x60D DUP3 PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x2400 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 PUSH2 0x2413 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI PUSH2 0x666 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x8E3 JUMPI JUMPDEST POP PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x66E PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x75D JUMPI JUMPDEST POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x6DC JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x6D3 JUMPI JUMPDEST CALL ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0x725 JUMPI JUMPDEST POP PUSH2 0x18C JUMP JUMPDEST PUSH2 0x744 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x74B JUMPI JUMPDEST PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2442 JUMP JUMPDEST POP DUP3 PUSH2 0x71F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x76B SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x2389 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x8DA JUMPI JUMPDEST ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x790 DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0x867 JUMPI JUMPDEST POP PUSH2 0x60D PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x7D2 SWAP3 PUSH2 0x2400 JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x860 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI DUP5 SWAP2 PUSH2 0x81E JUMPI JUMPDEST POP PUSH2 0x812 SWAP1 PUSH2 0x818 SWAP3 PUSH2 0x2389 JUMP JUMPDEST SWAP5 PUSH2 0x2433 JUMP JUMPDEST SWAP4 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x84D JUMPI JUMPDEST DUP2 PUSH2 0x838 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x849 JUMPI MLOAD PUSH2 0x818 PUSH2 0x804 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x7DA JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x89E JUMPI JUMPDEST DUP2 PUSH2 0x884 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x89A JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x60D PUSH2 0x7C1 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 POP DUP3 SWAP1 PUSH2 0x8C0 PUSH2 0x28F2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8D3 JUMPI POP JUMPDEST SWAP1 SWAP2 SWAP3 DUP5 PUSH2 0x676 JUMP JUMPDEST SWAP1 POP PUSH2 0x8CA JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x77A JUMP JUMPDEST PUSH2 0x905 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI JUMPDEST PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x23E1 JUMP JUMPDEST DUP8 PUSH2 0x660 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x92B SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP6 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x93A SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP5 DUP4 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x95A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP5 PUSH2 0x53B JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x979 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x981 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x989 PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0xB30 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH3 0xF887CF PUSH1 0xE8 SHL DUP5 MSTORE AND SWAP2 DUP3 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP1 DUP3 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH2 0xB53 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x752 JUMPI PUSH2 0xA0B SWAP2 DUP5 SWAP2 PUSH2 0xB34 JUMPI POP PUSH2 0x267D JUMP JUMPDEST PUSH2 0xA13 PUSH2 0x2299 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCE8C42E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x855 JUMPI SWAP1 PUSH1 0x4 SWAP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xB20 JUMPI JUMPDEST POP POP PUSH2 0xA6E PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0xA7F DUP2 PUSH2 0xA7A PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x2389 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xB08 JUMPI POP POP SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI DUP2 PUSH2 0xADE SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xAEB JUMPI JUMPDEST POP PUSH2 0x2CD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xB02 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP6 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0xB15 SWAP1 PUSH2 0xB1A SWAP4 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x2413 JUMP JUMPDEST SWAP2 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0xB29 SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP5 DUP1 PUSH2 0xA64 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH2 0xB4D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP5 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0xB5C SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9D7 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0xB7C PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB86 PUSH2 0x2299 JUMP JUMPDEST DUP2 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0xC46 JUMPI JUMPDEST POP PUSH2 0xBEF PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0xBFB DUP2 PUSH2 0xA7A PUSH2 0x2299 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xC34 JUMPI POP POP JUMPDEST PUSH2 0xADE DUP2 CALLER PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0xB15 SWAP1 PUSH2 0xC41 SWAP4 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xC5C SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x2 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD0E JUMPI POP POP POP DUP2 PUSH2 0xCC2 SWAP2 SUB DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xCEC JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xCDE JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCAC JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0xD53 PUSH2 0xD49 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2A45 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD7A PUSH2 0x21A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD86 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x855 JUMPI SWAP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP3 PUSH2 0xFE9 JUMPI JUMPDEST POP POP AND SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x752 JUMPI SWAP1 PUSH2 0xE13 SWAP2 DUP5 SWAP2 PUSH2 0x912 JUMPI POP PUSH2 0x267D JUMP JUMPDEST PUSH2 0xE22 PUSH2 0x60D DUP3 PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI PUSH2 0xE52 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x8E3 JUMPI POP PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0xE5A PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0xEB0 JUMPI POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x6DC JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x6D3 JUMPI CALL ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xEBE SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x2389 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0xFE0 JUMPI JUMPDEST ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEE3 DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0xFA5 JUMPI JUMPDEST POP PUSH2 0x60D PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xF25 SWAP3 PUSH2 0x2400 JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0xF9E JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI DUP5 SWAP2 PUSH2 0xF6B JUMPI JUMPDEST POP PUSH2 0x812 SWAP1 PUSH2 0xF65 SWAP3 PUSH2 0x2389 JUMP JUMPDEST SWAP4 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF96 JUMPI JUMPDEST DUP2 PUSH2 0xF85 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x849 JUMPI MLOAD PUSH2 0xF65 PUSH2 0xF57 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF78 JUMP JUMPDEST POP DUP4 PUSH2 0xF2D JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFD8 JUMPI JUMPDEST DUP2 PUSH2 0xFC2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x89A JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x60D PUSH2 0xF14 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFB5 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0xECD JUMP JUMPDEST PUSH2 0xFF2 SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP6 DUP5 PUSH2 0xDDB JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1020 DUP4 CALLDATALOAD PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xAFFD80B000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP1 PUSH2 0x106D JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1098 JUMPI JUMPDEST DUP2 PUSH2 0x1087 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x194 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x1062 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x107A JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SLOAD PUSH2 0x10E1 DUP2 PUSH2 0x2237 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1197 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1119 JUMPI JUMPDEST PUSH2 0x1115 DUP4 PUSH2 0x1109 DUP2 DUP6 SUB DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2149 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x117D JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1109 PUSH2 0x10F9 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1109 SWAP1 POP PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x194 JUMPI PUSH2 0x11EC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x194 JUMPI PUSH2 0x120C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21E0 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x194 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x194 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x17CE JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x17C4 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x17BB JUMPI JUMPDEST POP PUSH2 0x1791 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP5 PUSH2 0x1752 JUMPI JUMPDEST POP PUSH2 0x12CD PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12DD PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12E6 DUP4 PUSH2 0x2826 JUMP JUMPDEST PUSH2 0x12EE PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12F6 PUSH2 0x2D92 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x436 JUMPI DUP2 SWAP1 PUSH2 0x1334 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SLOAD PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x16C3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x161D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1612 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SSTORE JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x436 JUMPI PUSH2 0x13C4 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SLOAD PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x158E JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x14E9 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x14DE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x1461 JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1576 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x155D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SSTORE PUSH2 0x141F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x151B JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1608 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15FC JUMPI POP PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15EF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x1354 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16AB JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1692 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SSTORE PUSH2 0x1389 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x1665 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x164F JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x2AE08A8E29253F69AC5D979A101956AB8F8D9D7DED63FA7A83B16FC47648EAB0 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1748 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1739 JUMPI POP PUSH2 0x133D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x172C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP6 PUSH2 0x12C4 JUMP JUMPDEST PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x1288 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1280 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x1276 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x186F CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x188D PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x1938 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x60D PUSH1 0x4 CALLDATALOAD PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x1A10 JUMPI DUP3 DUP1 PUSH2 0x2710 SUB SWAP1 PUSH2 0x2710 DUP3 GT PUSH2 0x19FA JUMPI PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x1A29 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BD DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x19D4 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH1 0x4 CALLDATALOAD PUSH2 0x245A JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1A84 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x1A8C PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1ACC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x1AF7 JUMPI JUMPDEST PUSH2 0xD53 SWAP4 POP PUSH2 0x2A45 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1BD0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1BA1 JUMPI CALLER ISZERO PUSH2 0x1B72 JUMPI PUSH2 0xD53 SWAP4 PUSH2 0x1B53 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x1AED JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x194 JUMPI PUSH2 0x1C33 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x1C3E DUP2 ISZERO ISZERO PUSH2 0x2396 JUMP JUMPDEST PUSH2 0x1C47 DUP3 PUSH2 0x29F7 JUMP JUMPDEST PUSH2 0x1D8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1D70 JUMPI JUMPDEST POP AND ADDRESS EQ SWAP1 DUP2 PUSH2 0x1CED JUMPI JUMPDEST POP PUSH2 0x1CA6 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x436 JUMPI PUSH2 0x1CCE DUP3 PUSH1 0x1 PUSH2 0x1C2 SWAP5 ADD PUSH1 0x2 SSTORE PUSH2 0x2271 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SWAP2 POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C222BAD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x34D JUMPI PUSH2 0x1CA6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1D51 JUMPI JUMPDEST POP AND EQ SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x1D6A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP6 PUSH2 0x1D48 JUMP JUMPDEST PUSH2 0x1D89 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP5 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472617465677920616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x194 JUMPI PUSH2 0x282 PUSH2 0x1E4A SWAP2 PUSH2 0x1E45 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1E59 JUMPI STOP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E6B DUP4 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1E80 JUMPI PUSH1 0x1 ADD PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E91 DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 EXTCODESIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH2 0x1F54 JUMPI JUMPDEST POP PUSH2 0x1ECD PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x19FA JUMPI PUSH2 0x1CCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EF0 PUSH2 0x1EFE SWAP5 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP2 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1F3E JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1F14 DUP2 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x2 SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F5F SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP4 PUSH2 0x1EC4 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x2299 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x194 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1FD6 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1BA1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1B72 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SLOAD PUSH2 0x20A4 DUP2 PUSH2 0x2237 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1197 JUMPI POP PUSH1 0x1 EQ PUSH2 0x20CB JUMPI PUSH2 0x1115 DUP4 PUSH2 0x1109 DUP2 DUP6 SUB DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2AE08A8E29253F69AC5D979A101956AB8F8D9D7DED63FA7A83B16FC47648EAB0 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x212F JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1109 PUSH2 0x10F9 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x2117 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x217C JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x215B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x194 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x194 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x436 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x194 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2215 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x21BE JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x194 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2267 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2251 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x19FA JUMPI JUMP JUMPDEST PUSH2 0x22A1 PUSH2 0x28F2 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x22B3 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x22CA DUP8 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2309 JUMPI JUMPDEST POP PUSH2 0x2301 SWAP1 PUSH1 0x1 SWAP3 PUSH2 0x228C JUMP JUMPDEST SWAP4 ADD SWAP1 PUSH2 0x22A8 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2336 JUMPI JUMPDEST DUP2 PUSH2 0x2322 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2333 JUMPI POP MLOAD PUSH1 0x1 PUSH2 0x22F4 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2315 JUMP JUMPDEST ISZERO PUSH2 0x2345 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726174656779206E6F7420666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x19FA JUMPI JUMP JUMPDEST ISZERO PUSH2 0x239D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420737472617465677900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x194 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x194 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x19FA JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x241D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x19FA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x194 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x194 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x2469 PUSH2 0x60D DUP3 PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST SWAP1 PUSH2 0x2474 DUP2 CALLER PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x247C PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x2528 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x24D6 JUMPI POP DUP2 PUSH1 0x0 DUP2 ISZERO PUSH2 0x24CD JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x34D JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH2 0x250D JUMPI POP JUMP JUMPDEST PUSH2 0x2525 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2532 SWAP1 DUP4 PUSH2 0x2389 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x2674 JUMPI JUMPDEST ISZERO PUSH2 0x2650 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2558 DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x261A JUMPI JUMPDEST POP SWAP2 PUSH2 0x2599 PUSH2 0x60D PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x2400 JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x2613 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x25E0 JUMPI JUMPDEST POP PUSH2 0x812 SWAP1 PUSH2 0x25DA SWAP3 PUSH2 0x2389 JUMP JUMPDEST SWAP4 PUSH2 0x2537 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x260B JUMPI JUMPDEST DUP2 PUSH2 0x25F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2333 JUMPI POP MLOAD PUSH2 0x25DA PUSH2 0x25CC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x25EC JUMP JUMPDEST POP DUP4 PUSH2 0x25A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2648 JUMPI JUMPDEST DUP2 PUSH2 0x2634 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2333 JUMPI POP MLOAD DUP5 SWAP1 PUSH2 0x2599 PUSH2 0x2586 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2627 JUMP JUMPDEST POP SWAP3 POP POP PUSH2 0x265C PUSH2 0x28F2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x266D JUMPI POP JUMPDEST CODESIZE DUP1 PUSH2 0x2484 JUMP JUMPDEST SWAP1 POP PUSH2 0x2666 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x2542 JUMP JUMPDEST ISZERO PUSH2 0x2684 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x26D0 PUSH2 0x28F2 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2821 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x26EF DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x2710 PUSH2 0x2713 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP7 PUSH2 0x2400 JUMP JUMPDEST DIV DUP1 ISZERO PUSH2 0x2817 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP4 EQ PUSH2 0x27B5 JUMPI POP DUP2 DUP1 DUP1 SWAP3 DUP7 DUP3 CALL ISZERO PUSH2 0x34D JUMPI JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0xD0E30DB000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 SWAP3 PUSH2 0x27A4 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AF SWAP2 PUSH2 0x21BE JUMP JUMPDEST CODESIZE PUSH2 0x279C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH2 0x27F9 JUMPI JUMPDEST POP PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x2810 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST POP CODESIZE PUSH2 0x27F3 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x279E JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x291E JUMPI POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2967 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x298E JUMPI JUMPDEST DUP2 PUSH2 0x2982 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x194 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x29C9 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A0D JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A1E DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x2A3D JUMPI PUSH1 0x1 ADD PUSH2 0x29FE JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2B6D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2B3E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2B24 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2B6D JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2C82 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SUB PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2CAC JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2B3E JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2D37 PUSH1 0x0 SWAP5 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x228C JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE DUP5 DUP5 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2DC1 JUMPI JUMP JUMPDEST PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA STOP MSIZE 0xE3 CALLDATALOAD COINBASE 0xB4 EXTCODEHASH 0xC1 0x2B 0x2C 0xAD 0x2F 0xDD 0xF9 0xEC PUSH30 0x1266C157D7900ED36DB1DF0E72017B64736F6C634300081C003300000000 ",
              "sourceMap": "619:294:26:-:0;;;;;;;1857:1:12;2061:21;1857:1;619:294:26;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 8594,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_24013": {
                  "entryPoint": 8616,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 9185,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 9282,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_string": {
                  "entryPoint": 8672,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_contract_IAccount_enum_ApprovalFlag": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 8521,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 8844,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 9235,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 9216,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 9097,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 8759,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 8638,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": null,
                  "id": 703,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 11164,
                  "id": 1012,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkInitializing": {
                  "entryPoint": 11666,
                  "id": 438,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 10646,
                  "id": 190,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_earn": {
                  "entryPoint": 9928,
                  "id": 2511,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getAvailable": {
                  "entryPoint": 10482,
                  "id": 3367,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getBalance": {
                  "entryPoint": 8857,
                  "id": 3334,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_hasStrategy": {
                  "entryPoint": 10743,
                  "id": 3168,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 11478,
                  "id": 979,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 11419,
                  "id": 1661,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 10821,
                  "id": 854,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 10278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdraw": {
                  "entryPoint": 9306,
                  "id": 2661,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 9267,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_contract_IStrategy_uint256_of_contract_IStrategy": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_bbe8": {
                  "entryPoint": 9022,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e36c": {
                  "entryPoint": 9110,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fac3": {
                  "entryPoint": 9853,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_contract_IStrategy_dyn": {
                  "entryPoint": 8817,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_contract_IStrategy_to_contract_IStrategy": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806306fdde0314612063578063095ea7b314611fbd5780630e02292314611f8057806312065fe014611f65578063175188e814611e1057806318160ddd14611dd3578063223e547914611c0657806323b872dd14611a6b5780632e1a7d4d14611a4d578063313ce56714611a315780634051ddac146119bc5780635c222bad146119955780636f7267b71461197157806370a082311461191a578063715018a614611874578063853828b61461181c5780638da5cb5b146117d65780638f15b414146111bb57806395d89b41146110a0578063a29b3c9014610ff9578063a49b5cb414610d5e578063a9059cbb14610d2d578063b49a60bb14610c61578063b6b55f2514610b63578063b76e07cc14610960578063c07e866e146104e2578063d389800f146104c9578063dd62ed3e1461044c578063ee6ce925146101c4578063f2fde38b146101995763f9cc06051461017157600080fd5b3461019457600036600319011261019457602061018c6128f2565b604051908152f35b600080fd5b34610194576020366003190112610194576101c26101b5612192565b6101bd612996565b612826565b005b346101945760203660031901126101945760043567ffffffffffffffff811161019457366023820112156101945780600401359067ffffffffffffffff8211610436578160051b6040519261021c60208301856121be565b8352602460208401918301019136831161019457602401905b8282106104265783610245612996565b6002548151036103e25760005b6002548110156102c8576001600160a01b0361026d82612271565b90549060031b1c1690610287610282836129f7565b61233e565b82518110156102b25760019160208260051b8501015190600052600360205260406000205501610252565b634e487b7160e01b600052603260045260246000fd5b6000806002545b8083106103a55761271082116103615760005b600254811015610359576001600160a01b036102fd82612271565b90549060031b1c1690813b156101945760008092600460405180958193630f8d564160e31b83525af191821561034d5760019261033c575b50016102e2565b6000610347916121be565b82610335565b6040513d6000823e3d90fd5b6101c26126c8565b606460405162461bcd60e51b815260206004820152601660248201527f416c6c6f636174696f6e2065786365656473206d6178000000000000000000006044820152fd5b906103d96001916001600160a01b036103bd86612271565b90549060031b1c1660005260036020526040600020549061228c565b920191906102cf565b606460405162461bcd60e51b815260206004820152601860248201527f4d69736d617463686564206172726179206c656e6774687300000000000000006044820152fd5b8135815260209182019101610235565b634e487b7160e01b600052604160045260246000fd5b3461019457604036600319011261019457610465612192565b6001600160a01b036104b16104786121a8565b926001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b91166000526020526020604060002054604051908152f35b34610194576000366003190112610194576101c26126c8565b34610194576020366003190112610194576104fb612192565b610503612996565b6001600160a01b03811690604051631127a41d60e31b8152602081600481865afa801561034d576001600160a01b0391600091610941575b50166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604060002054600091610575612996565b6001600160a01b036004541690813b156108495760405162f887cf60e81b81526001600160a01b03919091166004820152600260248201528381604481855afa8015610855578490610931575b505060405190630b37927d60e21b82526004820152602081602481875afa90811561075257906105f9918491610912575b5061267d565b61063561060d82610608612299565b612400565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490612413565b90604051631127a41d60e31b8152602081600481885afa9081156108555761066691839186916108e3575b50612b9c565b61066e6128f2565b82811061075d575b5050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146106dc575082809281928282156106d3575bf1156106c65760209150604051908152f35b50604051903d90823e3d90fd5b506108fc6106b4565b60405163a9059cbb60e01b81526001600160a01b0392909216600483015260248201929092529160209183916044918391905af180156107525760209350610725575b5061018c565b61074490833d851161074b575b61073c81836121be565b810190612442565b508261071f565b503d610732565b6040513d85823e3d90fd5b61076b908395949295612389565b9281935b6002548510806108da575b156108b1576001600160a01b0361079086612271565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa9081156108a65785929189918491610867575b5061060d602093926107d292612400565b848111610860575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561085557849161081e575b506108129061081892612389565b94612433565b9361076f565b90506020813d821161084d575b81610838602093836121be565b810103126108495751610818610804565b8380fd5b3d915061082b565b6040513d86823e3d90fd5b50836107da565b92935050506020813d821161089e575b81610884602093836121be565b8101031261089a5751849190889061060d6107c1565b8480fd5b3d9150610877565b6040513d87823e3d90fd5b509250925082906108c06128f2565b818111156108d357505b90919284610676565b90506108ca565b5080151561077a565b610905915060203d60201161090b575b6108fd81836121be565b8101906123e1565b87610660565b503d6108f3565b61092b915060203d60201161074b5761073c81836121be565b856105f3565b61093a916121be565b84836105c2565b61095a915060203d60201161090b576108fd81836121be565b8461053b565b34610194576040366003190112610194576109796121a8565b610981612996565b610989612c9b565b6000906001600160a01b0360045416803b15610b30576001600160a01b036040519262f887cf60e81b8452169182600482015260016024820152838082604481865afa80156106c657610b53575b505060405190630b37927d60e21b82526004820152602081602481855afa801561075257610a0b918491610b34575061267d565b610a13612299565b813b15610b30576040517fce8c42e80000000000000000000000000000000000000000000000000000000081526004356004820152838160248183875af18015610855579060049460209392610b20575b5050610a6e6126c8565b610a7f81610a7a612299565b612389565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610b08575050915b60405193848092631127a41d60e31b82525afa801561034d5781610ade91602094600091610aeb575b50612cd6565b6001600055604051908152f35b610b029150853d871161090b576108fd81836121be565b85610ad8565b610b1590610b1a93612400565b612413565b91610aaf565b610b29916121be565b8480610a64565b8280fd5b610b4d915060203d60201161074b5761073c81836121be565b846105f3565b610b5c916121be565b83836109d7565b3461019457602036600319011261019457610b7c612c9b565b6000610b86612299565b8160206001600160a01b03600154166064604051809481937f23b872dd00000000000000000000000000000000000000000000000000000000835233600484015230602484015260043560448401525af180156107525760209350610c46575b50610bef6126c8565b610bfb81610a7a612299565b907f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02548015600014610c345750505b610ade8133612cd6565b610b1590610c4193612400565b610c2a565b610c5c90833d851161074b5761073c81836121be565b610be6565b34610194576000366003190112610194576040518060206002549283815201809260026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9060005b818110610d0e5750505081610cc29103826121be565b6040519182916020830190602084525180915260408301919060005b818110610cec575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610cde565b82546001600160a01b0316845260209093019260019283019201610cac565b3461019457604036600319011261019457610d53610d49612192565b6024359033612a45565b602060405160018152f35b3461019457604036600319011261019457600435610d7a6121a8565b90600090610d86612996565b6001600160a01b036004541692833b15610b305760405162f887cf60e81b81526001600160a01b0382166004820152600260248201528381604481885afa80156108555790846001600160a01b039392610fe9575b5050169260405190630b37927d60e21b82526004820152602081602481875afa9081156107525790610e13918491610912575061267d565b610e2261060d82610608612299565b90604051631127a41d60e31b8152602081600481885afa90811561085557610e5291839186916108e35750612b9c565b610e5a6128f2565b828110610eb0575050908181936001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146106dc575082809281928282156106d357f1156106c65760209150604051908152f35b610ebe908395949295612389565b9281935b600254851080610fe0575b156108b1576001600160a01b03610ee386612271565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa9081156108a65785929189918491610fa5575b5061060d60209392610f2592612400565b848111610f9e575b6024906040519485938492632e1a7d4d60e01b845260048401525af1908115610855578491610f6b575b5061081290610f6592612389565b93610ec2565b90506020813d8211610f96575b81610f85602093836121be565b810103126108495751610f65610f57565b3d9150610f78565b5083610f2d565b92935050506020813d8211610fd8575b81610fc2602093836121be565b8101031261089a5751849190889061060d610f14565b3d9150610fb5565b50801515610ecd565b610ff2916121be565b8584610ddb565b3461019457602036600319011261019457600460206001600160a01b036110208335612271565b90549060031b1c16604051928380927faffd80b00000000000000000000000000000000000000000000000000000000082525afa801561034d5760009061106d575b602090604051908152f35b506020813d602011611098575b81611087602093836121be565b810103126101945760209051611062565b3d915061107a565b346101945760003660031901126101945760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04546110e181612237565b80845290600181169081156111975750600114611119575b61111583611109818503826121be565b60405191829182612149565b0390f35b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0460009081527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa939250905b80821061117d575090915081016020016111096110f9565b919260018160209254838588010152019101909291611165565b60ff191660208086019190915291151560051b8401909101915061110990506110f9565b346101945760803660031901126101945760043567ffffffffffffffff8111610194576111ec9036906004016121e0565b60243567ffffffffffffffff81116101945761120c9036906004016121e0565b906044356001600160a01b03811680910361019457606435906001600160a01b038216809203610194577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00549260ff8460401c16159367ffffffffffffffff8116801590816117ce575b60011490816117c4575b1590816117bb575b506117915767ffffffffffffffff1981166001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005584611752575b506112cd612d92565b6112d5612d92565b6112dd612d92565b6112e683612826565b6112ee612d92565b6112f6612d92565b80519067ffffffffffffffff82116104365781906113347f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0354612237565b601f81116116c3575b50602090601f831160011461161d57600092611612575b50508160011b916000199060031b1c1916177f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03555b835167ffffffffffffffff8111610436576113c47f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0454612237565b601f811161158e575b50602094601f82116001146114e9579481929394956000926114de575b50508160011b916000199060031b1c1916177f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04555b73ffffffffffffffffffffffffffffffffffffffff19600154161760015573ffffffffffffffffffffffffffffffffffffffff19600454161760045561146157005b68ff0000000000000000197ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b0151905085806113ea565b601f198216957f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04600052806000209160005b8881106115765750836001959697981061155d575b505050811b017f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace045561141f565b015160001960f88460031b161c19169055858080611530565b9192602060018192868501518155019401920161151b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace046000527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa601f830160051c81019160208410611608575b601f0160051c01905b8181106115fc57506113cd565b600081556001016115ef565b90915081906115e6565b015190508680611354565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0360009081528281209350601f198516905b8181106116ab5750908460019594939210611692575b505050811b017f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0355611389565b015160001960f88460031b161c19169055868080611665565b9293602060018192878601518155019501930161164f565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036000529091507f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0601f840160051c81019160208510611748575b90601f859493920160051c01905b818110611739575061133d565b6000815584935060010161172c565b909150819061171e565b68ffffffffffffffffff191668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055856112c4565b7ff92ee8a90000000000000000000000000000000000000000000000000000000060005260046000fd5b90501587611288565b303b159150611280565b869150611276565b346101945760003660031901126101945760206001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b3461019457600036600319011261019457602061018c61186f336001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b61245a565b346101945760003660031901126101945761188d612996565b60006001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1981167f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019457602036600319011261019457602061018c611938612192565b6001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260406000205490565b3461019457602036600319011261019457602061018c61060d600435610608612299565b346101945760003660031901126101945760206001600160a01b0360015416604051908152f35b34610194576000366003190112610194576000806002545b808210611a10578280612710039061271082116119fa5760409182519182526020820152f35b634e487b7160e01b600052601160045260246000fd5b9091611a296001916001600160a01b036103bd86612271565b9201906119d4565b3461019457600036600319011261019457602060405160128152f35b3461019457602036600319011261019457602061018c60043561245a565b3461019457606036600319011261019457611a84612192565b611a8c6121a8565b60443590611acc836001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b033316600052602052604060002054926000198410611af7575b610d539350612a45565b828410611bd0576001600160a01b03811615611ba1573315611b7257610d5393611b53826001600160a01b03166000527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01602052604060002090565b6001600160a01b03331660005260205283604060002091039055611aed565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b82847ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b34610194576020366003190112610194576004356001600160a01b03811680820361019457611c33612996565b611c3e811515612396565b611c47826129f7565b611d8f576040517f8d928af8000000000000000000000000000000000000000000000000000000008152602081600481855afa801561034d576001600160a01b0391600091611d70575b501630149081611ced575b50611ca690612396565b600254906801000000000000000082101561043657611cce8260016101c29401600255612271565b9091906001600160a01b038084549260031b9316831b921b1916179055565b6004915060206001600160a01b036001541691604051938480927f5c222bad0000000000000000000000000000000000000000000000000000000082525afa91821561034d57611ca6926001600160a01b0391600091611d51575b50161490611c9c565b611d6a915060203d60201161090b576108fd81836121be565b85611d48565b611d89915060203d60201161090b576108fd81836121be565b84611c91565b606460405162461bcd60e51b815260206004820152601760248201527f537472617465677920616c7265616479206578697374730000000000000000006044820152fd5b346101945760003660031901126101945760207f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254604051908152f35b34610194576020366003190112610194576004356001600160a01b0381169081810361019457610282611e4a91611e45612996565b6129f7565b60025460005b818110611e5957005b826001600160a01b03611e6b83612271565b90549060031b1c1614611e8057600101611e50565b6001600160a01b03611e9182612271565b90549060031b1c16803b156101945760008091600460405180948193630f8d564160e31b83525af1801561034d57611f54575b50611ecd6126c8565b60001982019182116119fa57611cce6001600160a01b03611ef0611efe94612271565b90549060031b1c1691612271565b6002548015611f3e5760001901611f1481612271565b6001600160a01b0382549160031b1b19169055600255600052600360205260006040812055600080f35b634e487b7160e01b600052603160045260246000fd5b6000611f5f916121be565b83611ec4565b3461019457600036600319011261019457602061018c612299565b34610194576020366003190112610194576004356001600160a01b0381168091036101945760005260036020526020604060002054604051908152f35b3461019457604036600319011261019457611fd6612192565b602435903315611ba1576001600160a01b0316908115611b72573360009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101945760003660031901126101945760405160007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03546120a481612237565b808452906001811690811561119757506001146120cb5761111583611109818503826121be565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0360009081527f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0939250905b80821061212f575090915081016020016111096110f9565b919260018160209254838588010152019101909291612117565b91909160208152825180602083015260005b81811061217c575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161215b565b600435906001600160a01b038216820361019457565b602435906001600160a01b038216820361019457565b90601f8019910116810190811067ffffffffffffffff82111761043657604052565b81601f820112156101945780359067ffffffffffffffff82116104365760405192612215601f8401601f1916602001856121be565b8284526020838301011161019457816000926020809301838601378301015290565b90600182811c92168015612267575b602083101461225157565b634e487b7160e01b600052602260045260246000fd5b91607f1691612246565b6002548110156102b257600260005260206000200190600090565b919082018092116119fa57565b6122a16128f2565b9060006002545b8082106122b3575050565b9092600460206001600160a01b036122ca87612271565b90549060031b1c166040519283809263765ef2f360e11b82525afa90811561034d57600091612309575b506123019060019261228c565b9301906122a8565b906020823d8211612336575b81612322602093836121be565b8101031261233357505160016122f4565b80fd5b3d9150612315565b1561234557565b606460405162461bcd60e51b815260206004820152601260248201527f5374726174656779206e6f7420666f756e6400000000000000000000000000006044820152fd5b919082039182116119fa57565b1561239d57565b606460405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207374726174656779000000000000000000000000000000006044820152fd5b9081602091031261019457516001600160a01b03811681036101945790565b818102929181159184041417156119fa57565b811561241d570490565b634e487b7160e01b600052601260045260246000fd5b60001981146119fa5760010190565b90816020910312610194575180151581036101945790565b61246961060d82610608612299565b906124748133612b9c565b61247c6128f2565b828110612528575b5050906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81146000146124d6575081600081156124cd575b600080809381933390f11561034d57565b506108fc6124bc565b60405163a9059cbb60e01b81523360048201526024810184905290602090829060449082906000905af1801561034d5761250d5750565b6125259060203d60201161074b5761073c81836121be565b50565b6125329083612389565b926000935b600254851080612674575b15612650576001600160a01b0361255886612271565b90549060031b1c1660405163765ef2f360e11b8152602081600481855afa801561034d57859160009161261a575b509161259961060d602093600095612400565b848111612613575b6024906040519485938492632e1a7d4d60e01b845260048401525af190811561034d576000916125e0575b50610812906125da92612389565b93612537565b906020823d821161260b575b816125f9602093836121be565b810103126123335750516125da6125cc565b3d91506125ec565b50836125a1565b91506020823d8211612648575b81612634602093836121be565b810103126123335750518490612599612586565b3d9150612627565b5092505061265c6128f2565b8181111561266d57505b3880612484565b9050612666565b50801515612542565b1561268457565b606460405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152fd5b6126d06128f2565b9060005b600254811015612821576001600160a01b036126ef82612271565b90549060031b1c169081600052600360205261271061271360406000205486612400565b048015612817576000906001600160a01b036001541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee811483146127b55750818080928682f11561034d575b813b1561019457600080926004604051809581937fd0e30db00000000000000000000000000000000000000000000000000000000083525af191821561034d576001926127a4575b505b016126d4565b60006127af916121be565b3861279c565b60405163a9059cbb60e01b81526001600160a01b03861660048201526024810192909252909160209183916044918391905af1801561034d576127f9575b50612754565b6128109060203d811161074b5761073c81836121be565b50386127f3565b506001915061279e565b509050565b6001600160a01b031680156128c3576001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300548273ffffffffffffffffffffffffffffffffffffffff198216177f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361291e57504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa90811561034d57600091612967575090565b90506020813d60201161298e575b81612982602093836121be565b81010312610194575190565b3d9150612975565b6001600160a01b037f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300541633036129c957565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6002549060005b828110612a0d57505050600090565b6001600160a01b03612a1e82612271565b90549060031b1c166001600160a01b03831614612a3d576001016129fe565b505050600190565b6001600160a01b0316908115612b6d576001600160a01b0316918215612b3e5760008281527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006020526040812054828110612b245791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9587602096527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00865203828220558681527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b03168015612b6d576000918183527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006020526040832054818110612c8257817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace008452036040862055807f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254037f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b600260005414612cac576002600055565b7f3ee5aeb50000000000000000000000000000000000000000000000000000000060005260046000fd5b6001600160a01b0316908115612b3e577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612d376000947f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025461228c565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02558484527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00825260408420818154019055604051908152a3565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612dc157565b7fd7e6bcf80000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220da0059e33541b43fc12b2cad2fddf9ec7d1266c157d7900ed36db1df0e72017b64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2063 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FBD JUMPI DUP1 PUSH4 0xE022923 EQ PUSH2 0x1F80 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1F65 JUMPI DUP1 PUSH4 0x175188E8 EQ PUSH2 0x1E10 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DD3 JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x1C06 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A6B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A4D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A31 JUMPI DUP1 PUSH4 0x4051DDAC EQ PUSH2 0x19BC JUMPI DUP1 PUSH4 0x5C222BAD EQ PUSH2 0x1995 JUMPI DUP1 PUSH4 0x6F7267B7 EQ PUSH2 0x1971 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1874 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x181C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D6 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x11BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10A0 JUMPI DUP1 PUSH4 0xA29B3C90 EQ PUSH2 0xFF9 JUMPI DUP1 PUSH4 0xA49B5CB4 EQ PUSH2 0xD5E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD2D JUMPI DUP1 PUSH4 0xB49A60BB EQ PUSH2 0xC61 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xB63 JUMPI DUP1 PUSH4 0xB76E07CC EQ PUSH2 0x960 JUMPI DUP1 PUSH4 0xC07E866E EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xEE6CE925 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x199 JUMPI PUSH4 0xF9CC0605 EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x28F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1C2 PUSH2 0x1B5 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x2826 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x194 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x194 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x436 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x21C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21BE JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x194 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x426 JUMPI DUP4 PUSH2 0x245 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 MLOAD SUB PUSH2 0x3E2 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x26D DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x287 PUSH2 0x282 DUP4 PUSH2 0x29F7 JUMP JUMPDEST PUSH2 0x233E JUMP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD MLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE ADD PUSH2 0x252 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP4 LT PUSH2 0x3A5 JUMPI PUSH2 0x2710 DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2FD DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 SWAP3 PUSH2 0x33C JUMPI JUMPDEST POP ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP3 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1C2 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2065786365656473206D617800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x3D9 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BD DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x228C JUMP JUMPDEST SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x235 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x465 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4B1 PUSH2 0x478 PUSH2 0x21A8 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1C2 PUSH2 0x26C8 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x4FB PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x941 JUMPI JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x575 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x855 JUMPI DUP5 SWAP1 PUSH2 0x931 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x752 JUMPI SWAP1 PUSH2 0x5F9 SWAP2 DUP5 SWAP2 PUSH2 0x912 JUMPI JUMPDEST POP PUSH2 0x267D JUMP JUMPDEST PUSH2 0x635 PUSH2 0x60D DUP3 PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x2400 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 PUSH2 0x2413 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI PUSH2 0x666 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x8E3 JUMPI JUMPDEST POP PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x66E PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x75D JUMPI JUMPDEST POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x6DC JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x6D3 JUMPI JUMPDEST CALL ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0x725 JUMPI JUMPDEST POP PUSH2 0x18C JUMP JUMPDEST PUSH2 0x744 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x74B JUMPI JUMPDEST PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2442 JUMP JUMPDEST POP DUP3 PUSH2 0x71F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x76B SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x2389 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x8DA JUMPI JUMPDEST ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x790 DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0x867 JUMPI JUMPDEST POP PUSH2 0x60D PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x7D2 SWAP3 PUSH2 0x2400 JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x860 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI DUP5 SWAP2 PUSH2 0x81E JUMPI JUMPDEST POP PUSH2 0x812 SWAP1 PUSH2 0x818 SWAP3 PUSH2 0x2389 JUMP JUMPDEST SWAP5 PUSH2 0x2433 JUMP JUMPDEST SWAP4 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x84D JUMPI JUMPDEST DUP2 PUSH2 0x838 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x849 JUMPI MLOAD PUSH2 0x818 PUSH2 0x804 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x7DA JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x89E JUMPI JUMPDEST DUP2 PUSH2 0x884 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x89A JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x60D PUSH2 0x7C1 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 POP DUP3 SWAP1 PUSH2 0x8C0 PUSH2 0x28F2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8D3 JUMPI POP JUMPDEST SWAP1 SWAP2 SWAP3 DUP5 PUSH2 0x676 JUMP JUMPDEST SWAP1 POP PUSH2 0x8CA JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x77A JUMP JUMPDEST PUSH2 0x905 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI JUMPDEST PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x23E1 JUMP JUMPDEST DUP8 PUSH2 0x660 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x92B SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP6 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x93A SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP5 DUP4 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x95A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP5 PUSH2 0x53B JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x979 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x981 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x989 PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0xB30 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH3 0xF887CF PUSH1 0xE8 SHL DUP5 MSTORE AND SWAP2 DUP3 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP1 DUP3 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH2 0xB53 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x752 JUMPI PUSH2 0xA0B SWAP2 DUP5 SWAP2 PUSH2 0xB34 JUMPI POP PUSH2 0x267D JUMP JUMPDEST PUSH2 0xA13 PUSH2 0x2299 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCE8C42E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x855 JUMPI SWAP1 PUSH1 0x4 SWAP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xB20 JUMPI JUMPDEST POP POP PUSH2 0xA6E PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0xA7F DUP2 PUSH2 0xA7A PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x2389 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xB08 JUMPI POP POP SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI DUP2 PUSH2 0xADE SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xAEB JUMPI JUMPDEST POP PUSH2 0x2CD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xB02 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP6 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0xB15 SWAP1 PUSH2 0xB1A SWAP4 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x2413 JUMP JUMPDEST SWAP2 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0xB29 SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP5 DUP1 PUSH2 0xA64 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH2 0xB4D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP5 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0xB5C SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9D7 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0xB7C PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB86 PUSH2 0x2299 JUMP JUMPDEST DUP2 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x20 SWAP4 POP PUSH2 0xC46 JUMPI JUMPDEST POP PUSH2 0xBEF PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0xBFB DUP2 PUSH2 0xA7A PUSH2 0x2299 JUMP JUMPDEST SWAP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xC34 JUMPI POP POP JUMPDEST PUSH2 0xADE DUP2 CALLER PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0xB15 SWAP1 PUSH2 0xC41 SWAP4 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xC5C SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x2 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD0E JUMPI POP POP POP DUP2 PUSH2 0xCC2 SWAP2 SUB DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xCEC JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xCDE JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCAC JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0xD53 PUSH2 0xD49 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2A45 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD7A PUSH2 0x21A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD86 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0xF887CF PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x855 JUMPI SWAP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP3 PUSH2 0xFE9 JUMPI JUMPDEST POP POP AND SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB37927D PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x752 JUMPI SWAP1 PUSH2 0xE13 SWAP2 DUP5 SWAP2 PUSH2 0x912 JUMPI POP PUSH2 0x267D JUMP JUMPDEST PUSH2 0xE22 PUSH2 0x60D DUP3 PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0x1127A41D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI PUSH2 0xE52 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x8E3 JUMPI POP PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0xE5A PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0xEB0 JUMPI POP POP SWAP1 DUP2 DUP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x6DC JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 DUP3 DUP3 ISZERO PUSH2 0x6D3 JUMPI CALL ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xEBE SWAP1 DUP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x2389 JUMP JUMPDEST SWAP3 DUP2 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0xFE0 JUMPI JUMPDEST ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEE3 DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP6 SWAP3 SWAP2 DUP10 SWAP2 DUP5 SWAP2 PUSH2 0xFA5 JUMPI JUMPDEST POP PUSH2 0x60D PUSH1 0x20 SWAP4 SWAP3 PUSH2 0xF25 SWAP3 PUSH2 0x2400 JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0xF9E JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x855 JUMPI DUP5 SWAP2 PUSH2 0xF6B JUMPI JUMPDEST POP PUSH2 0x812 SWAP1 PUSH2 0xF65 SWAP3 PUSH2 0x2389 JUMP JUMPDEST SWAP4 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF96 JUMPI JUMPDEST DUP2 PUSH2 0xF85 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x849 JUMPI MLOAD PUSH2 0xF65 PUSH2 0xF57 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF78 JUMP JUMPDEST POP DUP4 PUSH2 0xF2D JUMP JUMPDEST SWAP3 SWAP4 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFD8 JUMPI JUMPDEST DUP2 PUSH2 0xFC2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x89A JUMPI MLOAD DUP5 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x60D PUSH2 0xF14 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFB5 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0xECD JUMP JUMPDEST PUSH2 0xFF2 SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP6 DUP5 PUSH2 0xDDB JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1020 DUP4 CALLDATALOAD PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xAFFD80B000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP1 PUSH2 0x106D JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1098 JUMPI JUMPDEST DUP2 PUSH2 0x1087 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x194 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x1062 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x107A JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SLOAD PUSH2 0x10E1 DUP2 PUSH2 0x2237 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1197 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1119 JUMPI JUMPDEST PUSH2 0x1115 DUP4 PUSH2 0x1109 DUP2 DUP6 SUB DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2149 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x117D JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1109 PUSH2 0x10F9 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1109 SWAP1 POP PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x194 JUMPI PUSH2 0x11EC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x194 JUMPI PUSH2 0x120C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21E0 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x194 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x194 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x17CE JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x17C4 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x17BB JUMPI JUMPDEST POP PUSH2 0x1791 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP5 PUSH2 0x1752 JUMPI JUMPDEST POP PUSH2 0x12CD PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12DD PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12E6 DUP4 PUSH2 0x2826 JUMP JUMPDEST PUSH2 0x12EE PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x12F6 PUSH2 0x2D92 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x436 JUMPI DUP2 SWAP1 PUSH2 0x1334 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SLOAD PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x16C3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x161D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1612 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SSTORE JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x436 JUMPI PUSH2 0x13C4 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SLOAD PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x158E JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x14E9 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x14DE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x1461 JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1576 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x155D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SSTORE PUSH2 0x141F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x151B JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 PUSH1 0x0 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1608 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15FC JUMPI POP PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15EF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x1354 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16AB JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1692 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SSTORE PUSH2 0x1389 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x1665 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x164F JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x2AE08A8E29253F69AC5D979A101956AB8F8D9D7DED63FA7A83B16FC47648EAB0 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1748 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1739 JUMPI POP PUSH2 0x133D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x172C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP6 PUSH2 0x12C4 JUMP JUMPDEST PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x1288 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1280 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x1276 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x186F CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x188D PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x1938 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x60D PUSH1 0x4 CALLDATALOAD PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x1A10 JUMPI DUP3 DUP1 PUSH2 0x2710 SUB SWAP1 PUSH2 0x2710 DUP3 GT PUSH2 0x19FA JUMPI PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x1A29 PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BD DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x19D4 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH1 0x4 CALLDATALOAD PUSH2 0x245A JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1A84 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x1A8C PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1ACC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x1AF7 JUMPI JUMPDEST PUSH2 0xD53 SWAP4 POP PUSH2 0x2A45 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1BD0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1BA1 JUMPI CALLER ISZERO PUSH2 0x1B72 JUMPI PUSH2 0xD53 SWAP4 PUSH2 0x1B53 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x1AED JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x194 JUMPI PUSH2 0x1C33 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x1C3E DUP2 ISZERO ISZERO PUSH2 0x2396 JUMP JUMPDEST PUSH2 0x1C47 DUP3 PUSH2 0x29F7 JUMP JUMPDEST PUSH2 0x1D8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1D70 JUMPI JUMPDEST POP AND ADDRESS EQ SWAP1 DUP2 PUSH2 0x1CED JUMPI JUMPDEST POP PUSH2 0x1CA6 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x436 JUMPI PUSH2 0x1CCE DUP3 PUSH1 0x1 PUSH2 0x1C2 SWAP5 ADD PUSH1 0x2 SSTORE PUSH2 0x2271 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SWAP2 POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C222BAD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x34D JUMPI PUSH2 0x1CA6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1D51 JUMPI JUMPDEST POP AND EQ SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x1D6A SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP6 PUSH2 0x1D48 JUMP JUMPDEST PUSH2 0x1D89 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x90B JUMPI PUSH2 0x8FD DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP5 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472617465677920616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x194 JUMPI PUSH2 0x282 PUSH2 0x1E4A SWAP2 PUSH2 0x1E45 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1E59 JUMPI STOP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E6B DUP4 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1E80 JUMPI PUSH1 0x1 ADD PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E91 DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 EXTCODESIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xF8D5641 PUSH1 0xE3 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH2 0x1F54 JUMPI JUMPDEST POP PUSH2 0x1ECD PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x19FA JUMPI PUSH2 0x1CCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EF0 PUSH2 0x1EFE SWAP5 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP2 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1F3E JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1F14 DUP2 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x2 SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F5F SWAP2 PUSH2 0x21BE JUMP JUMPDEST DUP4 PUSH2 0x1EC4 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x20 PUSH2 0x18C PUSH2 0x2299 JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x194 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH2 0x1FD6 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1BA1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1B72 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 SLOAD PUSH2 0x20A4 DUP2 PUSH2 0x2237 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1197 JUMPI POP PUSH1 0x1 EQ PUSH2 0x20CB JUMPI PUSH2 0x1115 DUP4 PUSH2 0x1109 DUP2 DUP6 SUB DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2AE08A8E29253F69AC5D979A101956AB8F8D9D7DED63FA7A83B16FC47648EAB0 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x212F JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1109 PUSH2 0x10F9 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x2117 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x217C JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x215B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x194 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x194 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x436 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x194 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2215 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x21BE JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x194 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2267 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2251 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x19FA JUMPI JUMP JUMPDEST PUSH2 0x22A1 PUSH2 0x28F2 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x22B3 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x22CA DUP8 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2309 JUMPI JUMPDEST POP PUSH2 0x2301 SWAP1 PUSH1 0x1 SWAP3 PUSH2 0x228C JUMP JUMPDEST SWAP4 ADD SWAP1 PUSH2 0x22A8 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2336 JUMPI JUMPDEST DUP2 PUSH2 0x2322 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2333 JUMPI POP MLOAD PUSH1 0x1 PUSH2 0x22F4 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2315 JUMP JUMPDEST ISZERO PUSH2 0x2345 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726174656779206E6F7420666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x19FA JUMPI JUMP JUMPDEST ISZERO PUSH2 0x239D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420737472617465677900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x194 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x194 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x19FA JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x241D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x19FA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x194 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x194 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x2469 PUSH2 0x60D DUP3 PUSH2 0x608 PUSH2 0x2299 JUMP JUMPDEST SWAP1 PUSH2 0x2474 DUP2 CALLER PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x247C PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x2528 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ PUSH1 0x0 EQ PUSH2 0x24D6 JUMPI POP DUP2 PUSH1 0x0 DUP2 ISZERO PUSH2 0x24CD JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x34D JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH2 0x250D JUMPI POP JUMP JUMPDEST PUSH2 0x2525 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2532 SWAP1 DUP4 PUSH2 0x2389 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x2 SLOAD DUP6 LT DUP1 PUSH2 0x2674 JUMPI JUMPDEST ISZERO PUSH2 0x2650 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2558 DUP7 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD PUSH4 0x765EF2F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x34D JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x261A JUMPI JUMPDEST POP SWAP2 PUSH2 0x2599 PUSH2 0x60D PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x2400 JUMP JUMPDEST DUP5 DUP2 GT PUSH2 0x2613 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x25E0 JUMPI JUMPDEST POP PUSH2 0x812 SWAP1 PUSH2 0x25DA SWAP3 PUSH2 0x2389 JUMP JUMPDEST SWAP4 PUSH2 0x2537 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x260B JUMPI JUMPDEST DUP2 PUSH2 0x25F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2333 JUMPI POP MLOAD PUSH2 0x25DA PUSH2 0x25CC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x25EC JUMP JUMPDEST POP DUP4 PUSH2 0x25A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2648 JUMPI JUMPDEST DUP2 PUSH2 0x2634 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2333 JUMPI POP MLOAD DUP5 SWAP1 PUSH2 0x2599 PUSH2 0x2586 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2627 JUMP JUMPDEST POP SWAP3 POP POP PUSH2 0x265C PUSH2 0x28F2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x266D JUMPI POP JUMPDEST CODESIZE DUP1 PUSH2 0x2484 JUMP JUMPDEST SWAP1 POP PUSH2 0x2666 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x2542 JUMP JUMPDEST ISZERO PUSH2 0x2684 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x26D0 PUSH2 0x28F2 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2821 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x26EF DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x2710 PUSH2 0x2713 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP7 PUSH2 0x2400 JUMP JUMPDEST DIV DUP1 ISZERO PUSH2 0x2817 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP4 EQ PUSH2 0x27B5 JUMPI POP DUP2 DUP1 DUP1 SWAP3 DUP7 DUP3 CALL ISZERO PUSH2 0x34D JUMPI JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0xD0E30DB000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x34D JUMPI PUSH1 0x1 SWAP3 PUSH2 0x27A4 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AF SWAP2 PUSH2 0x21BE JUMP JUMPDEST CODESIZE PUSH2 0x279C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x34D JUMPI PUSH2 0x27F9 JUMPI JUMPDEST POP PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x2810 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x74B JUMPI PUSH2 0x73C DUP2 DUP4 PUSH2 0x21BE JUMP JUMPDEST POP CODESIZE PUSH2 0x27F3 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x279E JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x291E JUMPI POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2967 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x298E JUMPI JUMPDEST DUP2 PUSH2 0x2982 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x194 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x29C9 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A0D JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A1E DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x2A3D JUMPI PUSH1 0x1 ADD PUSH2 0x29FE JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2B6D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2B3E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2B24 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2B6D JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2C82 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SUB PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2CAC JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2B3E JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2D37 PUSH1 0x0 SWAP5 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x228C JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SSTORE DUP5 DUP5 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2DC1 JUMPI JUMP JUMPDEST PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA STOP MSIZE 0xE3 CALLDATALOAD COINBASE 0xB4 EXTCODEHASH 0xC1 0x2B 0x2C 0xAD 0x2F 0xDD 0xF9 0xEC PUSH30 0x1266C157D7900ED36DB1DF0E72017B64736F6C634300081C003300000000 ",
              "sourceMap": "619:294:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;2357:1:3;619:294:26;;:::i;:::-;2303:62:3;;:::i;:::-;2357:1;:::i;:::-;619:294:26;;;;;;;-1:-1:-1;;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:3;;;:::i;:::-;7965:11:14;619:294:26;;;7965:40:14;619:294:26;;;8114:3:14;7965:11;619:294:26;8090:22:14;;;;;-1:-1:-1;;;;;8155:14:14;;;:::i;:::-;619:294:26;;;;;;;8192:22:14;8184:53;8192:22;;;:::i;:::-;8184:53;:::i;:::-;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;8075:13:14;;619:294:26;-1:-1:-1;;;619:294:26;;;;;;;;8090:22:14;619:294:26;;7965:11:14;619:294:26;8724:22:14;;;;;;396:6:24;8851:39:14;;619:294:26;;;9084:3:14;7965:11;619:294:26;9060:22:14;;;;;-1:-1:-1;;;;;9125:14:14;;;:::i;:::-;619:294:26;;;;;;;9154:23:14;;;;;;619:294:26;;;;;;9154:23:14;;;;-1:-1:-1;;;9154:23:14;;;;;;;;;619:294:26;9154:23:14;;;9084:3;;619:294:26;9045:13:14;;9154:23;619:294:26;9154:23:14;;;:::i;:::-;;;;;619:294:26;;;;;;;;;9060:22:14;9154:23;;:::i;619:294:26:-;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;;;8748:3:14;8790:14;8768:37;619:294:26;8790:14:14;-1:-1:-1;;;;;8790:14:14;;;:::i;:::-;619:294:26;;;;;;;;;;;;;;;;8768:37:14;;:::i;:::-;8748:3;619:294:26;8709:13:14;;;;619:294:26;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;:::i;:::-;-1:-1:-1;;;;;4848:20:5;619:294:26;;:::i;:::-;4848:20:5;-1:-1:-1;;;;;619:294:26;;;4848:13:5;619:294:26;;;;;;;4848:20:5;:29;619:294:26;-1:-1:-1;619:294:26;;;;;-1:-1:-1;619:294:26;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;:::i;:::-;;;;;;-1:-1:-1;;619:294:26;;;;;;:::i;:::-;2303:62:3;;:::i;:::-;-1:-1:-1;;;;;619:294:26;;;;;-1:-1:-1;;;6818:18:14;;619:294:26;6818:18:14;619:294:26;6818:18:14;;;;;;;;-1:-1:-1;;;;;6818:18:14;619:294:26;6818:18:14;;;619:294:26;;;;;2031:63:5;619:294:26;;;;;;;2303:62:3;;;:::i;:::-;-1:-1:-1;;;;;619:294:26;;;5174:58:14;;;;;;619:294:26;;-1:-1:-1;;;5174:58:14;;-1:-1:-1;;;;;619:294:26;;;;;5174:58:14;;619:294:26;5204:27:14;619:294:26;;;;;;;;5174:58:14;;;;;;;;;;;619:294:26;;;;;5253:28:14;-1:-1:-1;;;5253:28:14;;619:294:26;5253:28:14;;619:294:26;;5253:28:14;;;;;;;;;;;;5245:55;5253:28;;;;;619:294:26;5245:55:14;;:::i;:::-;5369:36;5370:18;5331:12;;;:::i;:::-;5370:18;:::i;:::-;4008:14:5;619:294:26;5369:36:14;;:::i;:::-;619:294:26;;;-1:-1:-1;;;5422:18:14;;619:294:26;5422:18:14;619:294:26;5422:18:14;;;;;;;;;5442:8;5422:18;;;;;;;619:294:26;5442:8:14;;:::i;:::-;5490:14;;:::i;:::-;5521:30;;;5517:911;;619:294:26;;;;;;;-1:-1:-1;;;;;6444:13:14;619:294:26;;137:42:24;6444:27:14;;6440:203;137:42:24;;;6488:48:14;;;;;;;;;;;6440:203;6488:48;;;;619:294:26;6440:203:14;;619:294:26;;;;;;6488:48:14;619:294:26;;;;;;;;;;;6488:48:14;;;;;6440:203;619:294:26;;-1:-1:-1;;;6569:62:14;;-1:-1:-1;;;;;619:294:26;;;;;6569:62:14;;619:294:26;129:51:24;;;619:294:26;;;;;;;;;129:51:24;;619:294:26;;;6569:62:14;;;;;;619:294:26;6569:62:14;;;;6440:203;;;;6569:62;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;619:294:26;;;;;;;;;5517:911:14;5588:30;;;;;;;;:::i;:::-;5640:13;;5635:545;5696:3;5204:27;619:294:26;5655:22:14;;:39;;;5696:3;5655:39;;;-1:-1:-1;;;;;5741:14:14;;;:::i;:::-;619:294:26;;;;;;;;;-1:-1:-1;;;5800:23:14;;619:294:26;5800:23:14;619:294:26;5800:23:14;;;;;;;;;;;;;;;;;;5696:3;5869:26;;619:294:26;5869:26:14;;5868:65;5869:26;;:::i;5868:65::-;5956:25;;;5952:99;;5696:3;5253:28;619:294:26;;;6091:32:14;;;;;-1:-1:-1;;;6091:32:14;;619:294:26;6091:32:14;;619:294:26;6091:32:14;;;;;;;;;;;5696:3;6142:22;;;5696:3;6142:22;;:::i;:::-;5696:3;;:::i;:::-;5640:13;;;6091:32;;;619:294:26;6091:32:14;;;;;;;;;619:294:26;6091:32:14;;;:::i;:::-;;;619:294:26;;;;;5696:3:14;6091:32;;619:294:26;;;;6091:32:14;;;-1:-1:-1;6091:32:14;;;619:294:26;;;;;;;;;5952:99:14;-1:-1:-1;6006:25:14;5952:99;;5800:23;;;;;;619:294:26;5800:23:14;;;;;;;;;619:294:26;5800:23:14;;;:::i;:::-;;;619:294:26;;;;;;;;;;5869:26:14;5800:23;;619:294:26;;;;5800:23:14;;;-1:-1:-1;5800:23:14;;;619:294:26;;;;;;;;;5655:39:14;;;;;;;;6221:14;;:::i;:::-;6276:29;;;;;;:95;;5517:911;;;;;;6276:95;;;;;5655:39;5681:13;;;;5655:39;;5422:18;;;;619:294:26;5422:18:14;619:294:26;5422:18:14;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;5253:28;;;;619:294:26;5253:28:14;619:294:26;5253:28:14;;;;;;;:::i;:::-;;;;5174:58;;;;:::i;:::-;;;;;6818:18;;;;619:294:26;6818:18:14;619:294:26;6818:18:14;;;;;;;:::i;:::-;;;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;:::i;:::-;2303:62:3;;:::i;:::-;2466:103:12;;:::i;:::-;619:294:26;;-1:-1:-1;;;;;619:294:26;;;4440:57:14;;;;;-1:-1:-1;;;;;619:294:26;;4440:57:14;-1:-1:-1;;;4440:57:14;;619:294:26;4440:57:14;;619:294:26;4440:57:14;;619:294:26;;;;;;4440:57:14;;;;;;;;;;;;;;619:294:26;;;;;4518:28:14;-1:-1:-1;;;4518:28:14;;619:294:26;4518:28:14;;619:294:26;;4518:28:14;619:294:26;4518:28:14;;;;;;;;4510:55;4518:28;;;;;4510:55;;:::i;:::-;4602:12;;:::i;:::-;4627:37;;;;;619:294:26;;;4627:37:14;;619:294:26;;;4627:37:14;;619:294:26;4627:37:14;;619:294:26;4627:37:14;;;;;;;;;;619:294:26;4627:37:14;619:294:26;4627:37:14;;;;619:294:26;4627:37:14;;;;:::i;:::-;4759:28;4719:12;;;:::i;:::-;4759:28;:::i;:::-;619:294:26;4008:14:5;619:294:26;4804:18:14;;4800:164;4804:18;;;4839:23;;4800:164;;619:294:26;;4982:18:14;;;;-1:-1:-1;;;4982:18:14;;;;;;;;;5002:8;4982:18;619:294:26;4982:18:14;619:294:26;4982:18:14;;;4800:164;5002:8;;:::i;:::-;619:294:26;;;;;;;;;4982:18:14;;;;;;;;;;;;;;:::i;:::-;;;;4800:164;4907:28;;4906:46;4907:28;;:::i;:::-;4906:46;:::i;:::-;4800:164;;;4627:37;;;;:::i;:::-;;;;;;619:294:26;;;4518:28:14;;;;619:294:26;4518:28:14;619:294:26;4518:28:14;;;;;;;:::i;:::-;;;;4440:57;;;;:::i;:::-;;;;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;2466:103:12;;:::i;:::-;619:294:26;1553:12:14;;:::i;:::-;619:294:26;;-1:-1:-1;;;;;619:294:26;;;1578:71:14;619:294:26;;1578:71:14;;;;619:294:26;1578:71:14;;966:10:6;619:294:26;1578:71:14;;619:294:26;1629:4:14;619:294:26;;;;;;;;;;1578:71:14;;;;;;619:294:26;1578:71:14;;;;619:294:26;1578:71:14;;;:::i;:::-;1744:28;1704:12;;;:::i;1744:28::-;619:294:26;4008:14:5;619:294:26;1789:18:14;;1785:164;1789:18;;;1824:23;;1785:164;1975:8;966:10:6;;1975:8:14;:::i;1785:164::-;1892:28;;1891:46;1892:28;;:::i;1891:46::-;1785:164;;1578:71;;;;;;;;;;;;;:::i;:::-;;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;;;11016:11:14;619:294:26;;;;;;;;11016:11:14;619:294:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;619:294:26;;;;;-1:-1:-1;619:294:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;4597:5:5;619:294:26;;:::i;:::-;;;966:10:6;;4597:5:5;:::i;:::-;619:294:26;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;;:::i;:::-;5141:20:14;619:294:26;2303:62:3;;;:::i;:::-;-1:-1:-1;;;;;619:294:26;;;5174:58:14;;;;;;619:294:26;;-1:-1:-1;;;5174:58:14;;-1:-1:-1;;;;;619:294:26;;;5174:58:14;;619:294:26;5204:27:14;619:294:26;;;;5174:58:14;619:294:26;;;5174:58:14;;;;;;;;;-1:-1:-1;;;;;5174:58:14;;;;619:294:26;;;;;;;5253:28:14;-1:-1:-1;;;5253:28:14;;619:294:26;5253:28:14;;619:294:26;;5253:28:14;;;;;;;;;;;;5245:55;5253:28;;;;;5245:55;;:::i;:::-;5369:36;5370:18;5331:12;;;:::i;5369:36::-;619:294:26;;;-1:-1:-1;;;5422:18:14;;619:294:26;5422:18:14;619:294:26;5422:18:14;;;;;;;;;5442:8;5422:18;;;;;;;5442:8;;:::i;:::-;5490:14;;:::i;:::-;5521:30;;;5517:911;;619:294:26;;;;;;-1:-1:-1;;;;;6444:13:14;619:294:26;;137:42:24;6444:27:14;;6440:203;137:42:24;;;6488:48:14;;;;;;;;;;;;;;;619:294:26;6440:203:14;;619:294:26;;;;;;5517:911:14;5588:30;;;;;;;;:::i;:::-;5640:13;;5635:545;5696:3;5204:27;619:294:26;5655:22:14;;:39;;;5696:3;5655:39;;;-1:-1:-1;;;;;5741:14:14;;;:::i;:::-;619:294:26;;;;;;;;;-1:-1:-1;;;5800:23:14;;619:294:26;5800:23:14;619:294:26;5800:23:14;;;;;;;;;;;;;;;;;;5696:3;5869:26;;619:294:26;5869:26:14;;5868:65;5869:26;;:::i;5868:65::-;5956:25;;;5952:99;;5696:3;5253:28;619:294:26;;;6091:32:14;;;;;-1:-1:-1;;;6091:32:14;;619:294:26;6091:32:14;;619:294:26;6091:32:14;;;;;;;;;;;5696:3;6142:22;;;5696:3;6142:22;;:::i;5696:3::-;5640:13;;;6091:32;;;619:294:26;6091:32:14;;;;;;;;;619:294:26;6091:32:14;;;:::i;:::-;;;619:294:26;;;;;5696:3:14;6091:32;;;;;-1:-1:-1;6091:32:14;;5952:99;-1:-1:-1;6006:25:14;5952:99;;5800:23;;;;;;619:294:26;5800:23:14;;;;;;;;;619:294:26;5800:23:14;;;:::i;:::-;;;619:294:26;;;;;;;;;;5869:26:14;5800:23;;;;;-1:-1:-1;5800:23:14;;5655:39;5681:13;;;;5655:39;;5174:58;;;;:::i;:::-;;;;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;-1:-1:-1;;;;;9478:26:14;619:294:26;;9478:26:14;:::i;:::-;619:294:26;;;;;;;;;9478:43:14;;;;619:294:26;9478:43:14;;;;;;;;619:294:26;9478:43:14;;;619:294:26;;;;;;;;;9478:43:14;;619:294:26;9478:43:14;;619:294:26;9478:43:14;;;;;;619:294:26;9478:43:14;;;:::i;:::-;;;619:294:26;;;;;;;9478:43:14;;;;;-1:-1:-1;9478:43:14;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;;3086:9:5;619:294:26;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3086:9:5;619:294:26;;;;;;;-1:-1:-1;619:294:26;;;;;;;-1:-1:-1;619:294:26;;-1:-1:-1;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;619:294:26;;-1:-1:-1;619:294:26;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;619:294:26;;;;;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;;3147:66:4;619:294:26;;;;;;;4301:16:4;619:294:26;;;;4724:16:4;;:34;;;;619:294:26;4803:1:4;4788:16;:50;;;;619:294:26;4853:13:4;:30;;;;619:294:26;4849:91:4;;;-1:-1:-1;;619:294:26;;4803:1:4;619:294:26;3147:66:4;619:294:26;;4977:67:4;;619:294:26;6891:76:4;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6959:1;;;:::i;:::-;6891:76;;:::i;:::-;;;:::i;:::-;619:294:26;;;;;;;;;;;2581:7:5;619:294:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:4;619:294:26;;;;;2581:7:5;619:294:26;;;;;2581:7:5;619:294:26;;;;;;;;;;2606:9:5;619:294:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:4;619:294:26;;;;;2581:7:5;619:294:26;;;;;2606:9:5;619:294:26;;-1:-1:-1;;4803:1:4;619:294:26;;;4803:1:4;619:294:26;-1:-1:-1;;619:294:26;;;;;;5064:101:4;;619:294:26;5064:101:4;619:294:26;;3147:66:4;619:294:26;;3147:66:4;619:294:26;5140:14:4;619:294:26;;;4803:1:4;619:294:26;;5140:14:4;619:294:26;;;;;-1:-1:-1;619:294:26;;;;;;;;;;2606:9:5;619:294:26;;;;;;;;;;;;;;;4803:1:4;619:294:26;;;;;;;;;;;;;;2606:9:5;619:294:26;;;;;;;;;;2581:7:5;619:294:26;;;;;;;;;;;;;;;;4803:1:4;619:294:26;;;;;;;;;;;;;;;;2606:9:5;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:4;619:294:26;;;;;;-1:-1:-1;619:294:26;;;;;;;;-1:-1:-1;619:294:26;;;;;2581:7:5;619:294:26;;;;;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;4803:1:4;619:294:26;;;;;;;;;;;;;;2581:7:5;619:294:26;;;;;;;;;;2581:7:5;619:294:26;;;;;;;;;;;;;;;;4803:1:4;619:294:26;;;;;;;;;;;;;;;;2581:7:5;619:294:26;;;;-1:-1:-1;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:1:4;619:294:26;;;;;;-1:-1:-1;619:294:26;;;;4977:67:4;-1:-1:-1;;619:294:26;;;3147:66:4;619:294:26;4977:67:4;;;4849:91;4906:23;619:294:26;4906:23:4;619:294:26;;4906:23:4;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:4;;4724:34;;;-1:-1:-1;4724:34:4;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;-1:-1:-1;;;;;1280:65:3;619:294:26;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;4234:27:14;4243:17;966:10:6;-1:-1:-1;;;;;619:294:26;-1:-1:-1;619:294:26;2031:63:5;619:294:26;;;-1:-1:-1;619:294:26;;4087:171:5;;4243:17:14;4234:27;:::i;619:294:26:-;;;;;;-1:-1:-1;;619:294:26;;;;2303:62:3;;:::i;:::-;619:294:26;-1:-1:-1;;;;;1280:65:3;619:294:26;-1:-1:-1;;619:294:26;;1280:65:3;619:294:26;;3975:40:3;;;;619:294:26;;;;;;;-1:-1:-1;;619:294:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;619:294:26;-1:-1:-1;619:294:26;2031:63:5;619:294:26;;;-1:-1:-1;619:294:26;;4087:171:5;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;9808:36:14;9809:18;619:294:26;;9770:12:14;;:::i;619:294:26:-;;;;;;-1:-1:-1;;619:294:26;;;;;-1:-1:-1;;;;;9614:13:14;619:294:26;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;10719:11:14;619:294:26;10715:22:14;;;;;;619:294:26;;396:6:24;619:294:26;;396:6:24;619:294:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;619:294:26;;;;;;;;10739:3:14;10785:14;;10759:41;619:294:26;10785:14:14;-1:-1:-1;;;;;10785:14:14;;;:::i;10759:41::-;10739:3;619:294:26;10700:13:14;;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;;3808:2:5;619:294:26;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;619:294:26;;;;;;:::i;:::-;;;:::i;:::-;;;4848:20:5;;;-1:-1:-1;;;;;619:294:26;;;4848:13:5;619:294:26;;;;;;;4848:20:5;-1:-1:-1;;;;;966:10:6;619:294:26;-1:-1:-1;619:294:26;;;;-1:-1:-1;619:294:26;;;;;11891:36:5;;11887:309;;619:294:26;6179:5:5;;;;:::i;11887:309::-;11947:24;;;11943:130;;-1:-1:-1;;;;;619:294:26;;11122:19:5;11118:89;;966:10:6;11220:21:5;11216:90;;6179:5;11315:20;;;-1:-1:-1;;;;;619:294:26;;;4848:13:5;619:294:26;;;;;;;11315:20:5;-1:-1:-1;;;;;966:10:6;619:294:26;-1:-1:-1;619:294:26;;;;;-1:-1:-1;619:294:26;;;;;11887:309:5;;11216:90;11264:31;619:294:26;11264:31:5;619:294:26;;;;;11264:31:5;11118:89;11164:32;619:294:26;11164:32:5;619:294:26;;;;;11164:32:5;11943:130;11998:60;;;619:294:26;11998:60:5;966:10:6;619:294:26;;;;;;;;11998:60:5;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;;2303:62:3;;:::i;:::-;6937:63:14;6945:34;;;6937:63;:::i;:::-;7020:25;;;:::i;:::-;619:294:26;;;;;7125:22:14;;619:294:26;7125:22:14;619:294:26;7125:22:14;;;;;;;;-1:-1:-1;;;;;7125:22:14;619:294:26;7125:22:14;;;619:294:26;;;7116:4:14;7108:39;:99;;;;619:294:26;7086:165:14;;;;:::i;:::-;7264:11;619:294:26;;;;;;;;;;;;;;7264:11:14;619:294:26;;:::i;:::-;;;;-1:-1:-1;;;;;619:294:26;;;;;;;;;;;;;;;;;;7108:99:14;619:294:26;;;;-1:-1:-1;;;;;7168:13:14;619:294:26;;;;;7185:22:14;;;;619:294:26;7185:22:14;;;;;;;;;7086:165;7185:22;-1:-1:-1;;;;;7185:22:14;619:294:26;7185:22:14;;;7108:99;619:294:26;;7168:39:14;7108:99;;;7185:22;;;;619:294:26;7185:22:14;619:294:26;7185:22:14;;;;;;;:::i;:::-;;;;7125;;;;619:294:26;7125:22:14;619:294:26;7125:22:14;;;;;;;:::i;:::-;;;;619:294:26;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;4008:14:5;619:294:26;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;;;7399:30:14;7391:61;2303:62:3;;;:::i;:::-;7399:30:14;:::i;7391:61::-;7479:11;619:294:26;;7528:7:14;;;;;;619:294:26;7537:3:14;7561:14;-1:-1:-1;;;;;7561:14:14;;;:::i;:::-;619:294:26;;;;;;;7561:34:14;7557:280;;619:294:26;;7513:13:14;;7557:280;-1:-1:-1;;;;;7634:14:14;;;:::i;:::-;619:294:26;;;;;;;9290:23:14;;;;;619:294:26;;;;;;9290:23:14;;;;-1:-1:-1;;;9290:23:14;;;;;;;;;;7557:280;9290:23;;;:::i;:::-;-1:-1:-1;;619:294:26;;;;;;;7668:14:14;-1:-1:-1;;;;;7685:20:14;7668:37;7685:20;;:::i;:::-;619:294:26;;;;;;;7668:14:14;;:::i;:37::-;7479:11;619:294:26;;;;;-1:-1:-1;;619:294:26;;;;:::i;:::-;-1:-1:-1;;;;;619:294:26;;;;;;;;;;7479:11:14;619:294:26;;;;;;;;;;;;;;;-1:-1:-1;;;619:294:26;;;;;;;;9290:23:14;619:294:26;9290:23:14;;;:::i;:::-;;;;619:294:26;;;;;;-1:-1:-1;;619:294:26;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;619:294:26;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;;;;10512:12:14;619:294:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;:::i;:::-;;;966:10:6;;11122:19:5;11118:89;;-1:-1:-1;;;;;619:294:26;11220:21:5;;;11216:90;;966:10:6;619:294:26;;;;4848:13:5;619:294:26;;;;;;-1:-1:-1;619:294:26;;;;;-1:-1:-1;619:294:26;;;;;;;11396:31:5;619:294:26;966:10:6;11396:31:5;;619:294:26;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;2827:7:5;619:294:26;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2827:7:5;619:294:26;;;;;;;-1:-1:-1;619:294:26;;;;;;;-1:-1:-1;619:294:26;;-1:-1:-1;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;619:294:26;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;619:294:26;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;619:294:26;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;7479:11:14;619:294:26;;;;;;7479:11:14;-1:-1:-1;619:294:26;;-1:-1:-1;619:294:26;;;-1:-1:-1;619:294:26;:::o;:::-;;;;;;;;;;:::o;9860:244:14:-;9951:14;;:::i;:::-;9981:13;9993:1;10000:11;619:294:26;9996:22:14;;;;;;9860:244;;:::o;10020:3::-;10056:14;;:29;;-1:-1:-1;;;;;10056:14:14;;;:::i;:::-;619:294:26;;;;;;;;;10056:29:14;;;;-1:-1:-1;;;10056:29:14;;;;;;;;;9993:1;10056:29;;;10020:3;10040:45;;;619:294:26;10040:45:14;;:::i;:::-;10020:3;619:294:26;9981:13:14;;;10056:29;;;;;;;;;;;;619:294:26;10056:29:14;;;:::i;:::-;;;619:294:26;;;;-1:-1:-1;619:294:26;;10056:29:14;;619:294:26;;;10056:29:14;;;-1:-1:-1;10056:29:14;;619:294:26;;;;:::o;:::-;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;619:294:26;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;619:294:26;;;;;;;;;-1:-1:-1;;619:294:26;;;;;;;:::o;129:51:24:-;;;;;;;;;;619:294:26;;;129:51:24;;;;;:::o;2671:1434:14:-;2856:36;2857:18;2816:12;;;:::i;2856:36::-;966:10:6;2917:8:14;966:10:6;;2917:8:14;:::i;:::-;2965:14;;:::i;:::-;2996:30;;;2992:911;;2671:1434;619:294:26;;;-1:-1:-1;;;;;3919:13:14;619:294:26;;137:42:24;3919:27:14;;3915:183;137:42:24;;;3963:38:14;;-1:-1:-1;3963:38:14;;;;3915:183;-1:-1:-1;966:10:6;;;;;;3963:38:14;;;;;2671:1434::o;3963:38::-;-1:-1:-1;3963:38:14;;;3915:183;619:294:26;;-1:-1:-1;;;4034:52:14;;966:10:6;4034:52:14;;;619:294:26;129:51:24;;;619:294:26;;;;4034:52:14;;619:294:26;;129:51:24;;619:294:26;;-1:-1:-1;;4034:52:14;;;;;;;;3915:183;2671:1434::o;4034:52::-;;;;;;;;;;;;;:::i;:::-;;2671:1434::o;2992:911::-;3063:30;;;;:::i;:::-;3115:13;-1:-1:-1;3110:545:14;3171:3;4008:14:5;619:294:26;3130:22:14;;:39;;;3171:3;3130:39;;;-1:-1:-1;;;;;3216:14:14;;;:::i;:::-;619:294:26;;;;;;;;;-1:-1:-1;;;3275:23:14;;;;;;;;;;;;;;;-1:-1:-1;3275:23:14;;;3171:3;3344:26;;3343:65;3344:26;3275:23;3344:26;-1:-1:-1;3344:26:14;;:::i;3343:65::-;3431:25;;;3427:99;;3171:3;3566:32;619:294:26;;;3566:32:14;;;;;-1:-1:-1;;;3566:32:14;;3275:23;3566:32;;619:294:26;3566:32:14;;;;;;;-1:-1:-1;3566:32:14;;;3171:3;3617:22;;;3171:3;3617:22;;:::i;3171:3::-;3115:13;;;3566:32;;3275:23;3566:32;;;;;;;;;619:294:26;3566:32:14;;;:::i;:::-;;;619:294:26;;;;-1:-1:-1;619:294:26;3171:3:14;3566:32;;;;;-1:-1:-1;3566:32:14;;3427:99;-1:-1:-1;3481:25:14;3427:99;;3275:23;;;;;;;;;;;;;619:294:26;3275:23:14;;;:::i;:::-;;;619:294:26;;;;-1:-1:-1;619:294:26;;;3343:65:14;3275:23;;;;;-1:-1:-1;3275:23:14;;3130:39;;;;;3696:14;;:::i;:::-;3751:29;;;;;;:95;;2992:911;;;;3751:95;;;;;3130:39;3156:13;;;;3130:39;;619:294:26;;;;:::o;:::-;;;;-1:-1:-1;;;619:294:26;;;;;;;;;;;;;;;;;;2000:663:14;2054:14;;:::i;:::-;2086:13;2098:1;2125:3;2105:11;619:294:26;2101:22:14;;;;;-1:-1:-1;;;;;2166:14:14;;;:::i;:::-;619:294:26;;;;;;;;;2098:1:14;619:294:26;;;;396:6:24;2272:22:14;619:294:26;2098:1:14;619:294:26;;2272:22:14;;:::i;:::-;619:294:26;2366:10:14;;2362:24;;2098:1;619:294:26;-1:-1:-1;;;;;619:294:26;;;137:42:24;2407:27:14;;137:42:24;;;;2455::14;;;;;;;;;;;2403:207;2626:18;;;;;2098:1;619:294:26;;2626:18:14;619:294:26;;2626:18:14;;;;619:294:26;2626:18:14;;;;;;;;;619:294:26;2626:18:14;;;2403:207;2125:3;2086:13;619:294:26;2086:13:14;;2626:18;2098:1;2626:18;;;:::i;:::-;;;;2403:207;619:294:26;;-1:-1:-1;;;2538:56:14;;-1:-1:-1;;;;;619:294:26;;2626:18:14;2538:56;;619:294:26;129:51:24;;;619:294:26;;;;;;;;;;129:51:24;;619:294:26;;;2538:56:14;;;;;;;;2403:207;;;;2538:56;;;619:294:26;2538:56:14;;;;;;;;;:::i;:::-;;;;;2362:24;2378:8;619:294:26;2378:8:14;;;;2101:22;;;;2000:663::o;3405:215:3:-;-1:-1:-1;;;;;619:294:26;3489:22:3;;3485:91;;-1:-1:-1;;;;;1280:65:3;619:294:26;;-1:-1:-1;;619:294:26;;;1280:65:3;619:294:26;;3975:40:3;3509:1;3975:40;;3405:215::o;3485:91::-;3534:31;3509:1;3534:31;3509:1;3534:31;619:294:26;;3509:1:3;3534:31;10112:266:14;10191:13;619:294:26;-1:-1:-1;;;;;619:294:26;137:42:24;10191:27:14;;137:42:24;;10247:21:14;;10187:184;10112:266::o;10187:184::-;619:294:26;10313:46:14;619:294:26;;;10313:46:14;;;;619:294:26;10313:46:14;;10353:4;10313:46;;;619:294:26;10313:46:14;;;;;;;619:294:26;10313:46:14;;;10301:58;10187:184;10112:266::o;10313:46::-;;;619:294:26;10313:46:14;;619:294:26;10313:46:14;;;;;;619:294:26;10313:46:14;;;:::i;:::-;;;619:294:26;;;;;10187:184:14;10112:266::o;10313:46::-;;;-1:-1:-1;10313:46:14;;2658:162:3;-1:-1:-1;;;;;1280:65:3;619:294:26;;966:10:6;2717:23:3;2713:101;;2658:162::o;2713:101::-;2763:40;-1:-1:-1;2763:40:3;966:10:6;2763:40:3;619:294:26;;-1:-1:-1;2763:40:3;8353:265:14;8459:11;619:294:26;;;8455:22:14;;;;;;8598:12;;;619:294:26;8353:265:14;:::o;8479:3::-;-1:-1:-1;;;;;8503:14:14;;;:::i;:::-;619:294:26;;;;;;;-1:-1:-1;;;;;619:294:26;;8503:26:14;8499:78;;619:294:26;;8440:13:14;;8499:78;8550:11;;;619:294:26;8550:11:14;:::o;6586:300:5:-;-1:-1:-1;;;;;619:294:26;6669:18:5;;;6665:86;;-1:-1:-1;;;;;619:294:26;6764:16:5;;;6760:86;;6685:1;619:294:26;;;2031:63:5;619:294:26;;;;;;7590:19:5;;;7586:115;;619:294:26;;;;8339:25:5;619:294:26;;;;;2031:63:5;619:294:26;;;;;;;;;;2031:63:5;619:294:26;;;;;;;;;;;;;;8339:25:5;6586:300::o;7586:115::-;619:294:26;7636:50:5;-1:-1:-1;;;7636:50:5;;;;;619:294:26;;;;;7636:50:5;6760:86;6803:32;6685:1;6803:32;6685:1;6803:32;619:294:26;;6685:1:5;6803:32;6665:86;6710:30;6685:1;6710:30;6685:1;6710:30;619:294:26;;6685:1:5;6710:30;9240:206;-1:-1:-1;;;;;619:294:26;9310:21:5;;9306:89;;9329:1;619:294:26;;;;2031:63:5;619:294:26;;;;;;7590:19:5;;;7586:115;;619:294:26;8339:25:5;619:294:26;;;;;;2031:63:5;619:294:26;;;;;;;;8062:14:5;619:294:26;;8062:14:5;619:294:26;;;;;;8339:25:5;9240:206::o;7586:115::-;7636:50;;-1:-1:-1;;;619:294:26;7636:50:5;;;619:294:26;;;;;7636:50:5;2575:307:12;1899:1;2702:7;619:294:26;2702:18:12;2698:86;;1899:1;2702:7;619:294:26;2575:307:12:o;2698:86::-;2743:30;2702:7;2743:30;;2702:7;2743:30;8714:208:5;-1:-1:-1;;;;;619:294:26;8784:21:5;;;8780:91;;8339:25;619:294:26;;7479:23:5;8803:1;619:294:26;7479:14:5;619:294:26;7479:23:5;:::i;:::-;:14;619:294:26;;;;2031:63:5;619:294:26;;;;;;;;;;;;;;;;8339:25:5;8714:208::o;7082:141:4:-;619:294:26;3147:66:4;619:294:26;;;;7148:18:4;7144:73;;7082:141::o;7144:73::-;7189:17;-1:-1:-1;7189:17:4;;-1:-1:-1;7189:17:4"
            },
            "methodIdentifiers": {
              "addStrategy(address)": "223e5479",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit(uint256)": "b6b55f25",
              "depositFromAccount(uint256,address)": "b76e07cc",
              "earn()": "d389800f",
              "getAllocation(address)": "0e022923",
              "getAsset()": "5c222bad",
              "getAvailable()": "f9cc0605",
              "getBalance()": "12065fe0",
              "getLastHarvest(uint256)": "a29b3c90",
              "getShares(uint256)": "6f7267b7",
              "getStrategies()": "b49a60bb",
              "getSummary()": "4051ddac",
              "initialize(string,string,address,address)": "8f15b414",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "reallocate(uint256[])": "ee6ce925",
              "removeStrategy(address)": "175188e8",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawAll()": "853828b6",
              "withdrawAllToAccount(address)": "c07e866e",
              "withdrawToAccount(uint256,address)": "a49b5cb4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositFromAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyIndex\",\"type\":\"uint256\"}],\"name\":\"getLastHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastHarvest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSummary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idle\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"allowedAsset\",\"type\":\"address\"},{\"internalType\":\"contract IAgent\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"}],\"name\":\"reallocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategyToRemove\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawAllToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAccount\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawToAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/SimpleVault.sol\":\"SimpleVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/VaultUpgradeable.sol\":{\"keccak256\":\"0xd9fb0ccb24f920a85f10e52e03f84f34c7f04313e92b9887c675f75e21de9a5d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://35800d6676071a774a39a01e2580a581b5201a3d15db67dcffd941fd477bbff8\",\"dweb:/ipfs/QmZrnGcdVHiocyX7DpwDo9j7Yd5azz4NsoiqUP59hQbofG\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xd1ba729ec376b2385ab8c87d74f6361bca6bae66960a3beea843b56fc40ce002\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://471f3cbc5ef876d43dafef18ba6e453733383aed238d7d12d075db431a05c5fe\",\"dweb:/ipfs/QmUVs6ThHwCQrbzFVF3HfmrPLecJHiBe3nxwgydiHJ6KEb\"]},\"contracts/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x62a238e1b9c8efbc663ed3f7f1ae5dd5eb590cc1dfb662103841be30e7af9200\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e961b8898c79d00d71834f234a0f1b9c3fe345a4993c89e4d1e5e283b8a6eba2\",\"dweb:/ipfs/QmcwyAE5NANqiPyDgkY1sZnGRyVnQrK3zsqfuoSZ9aZLzP\"]},\"contracts/interfaces/IAgent.sol\":{\"keccak256\":\"0x271bf8127f0c6e4b7ce1a181e30341eae56d370ba1dc2c5e17a65da9419eb167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ff283763f367d197f179baa34c56da25d4dedc166505a54ae34b3bb0b0ec0b5\",\"dweb:/ipfs/QmbxnKdMvkWdfbNwQ2T9HkXCNBVfeCZ6nDFFV7SnGhTrye\"]},\"contracts/interfaces/IBaseStrategy.sol\":{\"keccak256\":\"0xac8ad43101d8be10e1555b444e07fd2491ba9b11bf9803d6860f7981d4ce8dde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75bee034ff305600e48787d66fb445a289a1a824af5202a3402ae9818fe928ba\",\"dweb:/ipfs/QmQNuCvWRub3GPbLp1g7cAmHHY6TxMzDghcVmSqM4J6NG3\"]},\"contracts/interfaces/IFeeCollector.sol\":{\"keccak256\":\"0x015a2634a2283b1739d98c4e3eaf38ebe956fc1d7a8c96a2f714a430fab38417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8d0b5700a7899d384363879fa51feebbffb88435dea2b4d9614ad550578861a0\",\"dweb:/ipfs/QmZmB1Mq2g6BsRWNzbcME3nvQyJxZnhQSrWEPSf1gCiouM\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0a2ed6c25b0cb1e1d4acdbcfce0c05a4acb12b76ea12e7f19034168b13c481bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e14ec53009c72671e80b483649b8cb1506fd1f01b6fa334875abc9dcfd13c6c\",\"dweb:/ipfs/Qma7ujr2WVebbWiAsSnziK88m8mfL3X6kwzDiGKE4FNuir\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xa6e2ac4bb744578c3cf7148797c7ab48c3bf21ad6689217a83fd3a942f837461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85cc5bc264d670319ecf25b28c00c50f1cca15dddb31abaaaec36e97fdd3ad9b\",\"dweb:/ipfs/QmRMSc8YJWqu8K2Z2VhgkSfPk38UWk4vsTkjtwdftP5FoG\"]},\"contracts/libs/Consts.sol\":{\"keccak256\":\"0xb52112019a0dbe6925c70a2cf711ae824ebd042cb45b85574873006ea10e92a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://08321e85c8f3eb3c9bde273c965fe8f004df70a8547f1b1ffbb93bf8f6bb5980\",\"dweb:/ipfs/QmbDcJkBo6dwh4JE3TqapftKUUYxsZZiHBqEnRERx4uNbB\"]},\"contracts/libs/Enums.sol\":{\"keccak256\":\"0x28dd84a3fae2bd92b8a5e4579683e87dfc5d24d50630aef9dfcf379860566d11\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cc69aa8a187cae3d579e424d37c8568c0d5250176b640f3f85c40f48de9a02f\",\"dweb:/ipfs/Qme4ATYRPS6BXZT3hdsquoVAu9LEMmCQX8zujEYV7nCakT\"]},\"contracts/mocks/SimpleVault.sol\":{\"keccak256\":\"0xf216fb07b735d8a26e958de019b2e7153552358659eadb6f334c6ff84d7b3b09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7cc5f80597e8b3f54ce985b3fecff7efa1912bd42ae8bc5472ca4c382820689f\",\"dweb:/ipfs/QmXAeV5iR5zWQyBCoHcsUdhwQjLXPxMQ1yDRf3dJvF7Ay1\"]}},\"version\":1}"
        }
      }
    }
  }
}